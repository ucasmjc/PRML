2023/05/20 17:08:22 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.7 (default, Feb  5 2021, 16:56:08) [GCC 5.4.0 20160609]
    CUDA available: True
    numpy_random_seed: 304
    GPU 0,1,2,3,4,5,6,7,8,9: NVIDIA GeForce RTX 2080 Ti
    CUDA_HOME: /usr/local/cuda-11.3
    NVCC: Cuda compilation tools, release 11.3, V11.3.109
    GCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
    PyTorch: 1.12.1+cu113
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.13.1+cu113
    OpenCV: 4.6.0
    MMEngine: 0.7.2

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 304
    Distributed launcher: pytorch
    Distributed training: True
    GPU number: 4
------------------------------------------------------------

2023/05/20 17:08:24 - mmengine - INFO - Config:
dataset_type = 'PortraitDataset'
data_root = 'data/portrait'
crop_size = (512, 512)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', reduce_zero_label=False),
    dict(
        type='RandomResize',
        scale=(1024, 1024),
        ratio_range=(0.5, 1.5),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', scale=(1024, 512), keep_ratio=True),
    dict(type='LoadAnnotations', reduce_zero_label=False),
    dict(type='PackSegInputs')
]
img_ratios = [0.5, 0.75, 1.0, 1.25, 1.5, 1.75]
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale_factor': 0.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 0.75,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.0,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.25,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.75,
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 0.0,
                        'direction': 'horizontal'
                    }, {
                        'type': 'RandomFlip',
                        'prob': 1.0,
                        'direction': 'horizontal'
                    }], [{
                        'type': 'LoadAnnotations'
                    }], [{
                        'type': 'PackSegInputs'
                    }]])
]
train_dataloader = dict(
    batch_size=6,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='InfiniteSampler', shuffle=True),
    dataset=dict(
        type='PortraitDataset',
        data_root='data/portrait',
        data_prefix=dict(img_path='train/img', seg_map_path='train/ann'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', reduce_zero_label=False),
            dict(
                type='RandomResize',
                scale=(1024, 1024),
                ratio_range=(0.5, 1.5),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs')
        ]))
val_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='PortraitDataset',
        data_root='data/portrait',
        data_prefix=dict(img_path='val/img', seg_map_path='val/ann'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(1024, 512), keep_ratio=True),
            dict(type='LoadAnnotations', reduce_zero_label=False),
            dict(type='PackSegInputs')
        ]))
test_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='PortraitDataset',
        data_root='data/portrait',
        data_prefix=dict(img_path='val/img', seg_map_path='val/ann'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(1024, 512), keep_ratio=True),
            dict(type='LoadAnnotations', reduce_zero_label=False),
            dict(type='PackSegInputs')
        ]))
val_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
test_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(type='TensorboardVisBackend')
]
visualizer = dict(
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='TensorboardVisBackend')
    ],
    name='visualizer')
log_processor = dict(by_epoch=False)
log_level = 'INFO'
load_from = None
resume = False
tta_model = dict(type='SegTTAModel')
work_dir = 'workdirs/pappm'
norm_cfg = dict(type='BN', requires_grad=True)
data_preprocessor = dict(
    type='SegDataPreProcessor',
    mean=[123.675, 116.28, 103.53],
    std=[58.395, 57.12, 57.375],
    bgr_to_rgb=True,
    pad_val=0,
    seg_pad_val=255,
    size=(512, 512))
model = dict(
    type='EncoderDecoder',
    data_preprocessor=dict(
        type='SegDataPreProcessor',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        bgr_to_rgb=True,
        pad_val=0,
        seg_pad_val=255,
        size=(512, 512)),
    pretrained='open-mmlab://contrib/mobilenet_v3_small',
    backbone=dict(
        type='MobileNetV3',
        arch='small',
        out_indices=(1, 8),
        norm_cfg=dict(type='BN', requires_grad=True)),
    decode_head=dict(
        type='testHead',
        neck=0,
        fuse=1,
        in_channels=(16, 48),
        in_index=(0, 1),
        channels=32,
        input_transform='multiple_select',
        num_classes=2,
        norm_cfg=dict(type='BN', requires_grad=True),
        act_cfg=dict(type='ReLU'),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
iters = 12000
param_scheduler = [
    dict(type='LinearLR', by_epoch=False, start_factor=0.1, begin=0, end=300),
    dict(
        type='PolyLR',
        eta_min=0.0001,
        power=0.9,
        begin=300,
        end=9000,
        by_epoch=False),
    dict(
        type='PolyLR',
        eta_min=0,
        power=0.9,
        begin=9000,
        end=12000,
        by_epoch=False)
]
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005))
train_cfg = dict(type='IterBasedTrainLoop', max_iters=12000, val_interval=240)
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=200, log_metric_by_epoch=False),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook',
        by_epoch=False,
        save_best='auto',
        max_keep_ckpts=2,
        interval=2400),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='SegVisualizationHook', draw=True))
randomness = dict(seed=304)
launcher = 'pytorch'

2023/05/20 17:08:28 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/05/20 17:08:30 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2023/05/20 17:08:32 - mmengine - INFO - load model from: open-mmlab://contrib/mobilenet_v3_small
2023/05/20 17:08:32 - mmengine - INFO - Loads checkpoint by openmmlab backend from path: open-mmlab://contrib/mobilenet_v3_small
2023/05/20 17:08:32 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: layer9.expand_conv.conv.weight, layer9.expand_conv.bn.weight, layer9.expand_conv.bn.bias, layer9.expand_conv.bn.running_mean, layer9.expand_conv.bn.running_var, layer9.expand_conv.bn.num_batches_tracked, layer9.depthwise_conv.conv.weight, layer9.depthwise_conv.bn.weight, layer9.depthwise_conv.bn.bias, layer9.depthwise_conv.bn.running_mean, layer9.depthwise_conv.bn.running_var, layer9.depthwise_conv.bn.num_batches_tracked, layer9.se.conv1.conv.weight, layer9.se.conv1.conv.bias, layer9.se.conv2.conv.weight, layer9.se.conv2.conv.bias, layer9.linear_conv.conv.weight, layer9.linear_conv.bn.weight, layer9.linear_conv.bn.bias, layer9.linear_conv.bn.running_mean, layer9.linear_conv.bn.running_var, layer9.linear_conv.bn.num_batches_tracked, layer10.expand_conv.conv.weight, layer10.expand_conv.bn.weight, layer10.expand_conv.bn.bias, layer10.expand_conv.bn.running_mean, layer10.expand_conv.bn.running_var, layer10.expand_conv.bn.num_batches_tracked, layer10.depthwise_conv.conv.weight, layer10.depthwise_conv.bn.weight, layer10.depthwise_conv.bn.bias, layer10.depthwise_conv.bn.running_mean, layer10.depthwise_conv.bn.running_var, layer10.depthwise_conv.bn.num_batches_tracked, layer10.se.conv1.conv.weight, layer10.se.conv1.conv.bias, layer10.se.conv2.conv.weight, layer10.se.conv2.conv.bias, layer10.linear_conv.conv.weight, layer10.linear_conv.bn.weight, layer10.linear_conv.bn.bias, layer10.linear_conv.bn.running_mean, layer10.linear_conv.bn.running_var, layer10.linear_conv.bn.num_batches_tracked, layer11.expand_conv.conv.weight, layer11.expand_conv.bn.weight, layer11.expand_conv.bn.bias, layer11.expand_conv.bn.running_mean, layer11.expand_conv.bn.running_var, layer11.expand_conv.bn.num_batches_tracked, layer11.depthwise_conv.conv.weight, layer11.depthwise_conv.bn.weight, layer11.depthwise_conv.bn.bias, layer11.depthwise_conv.bn.running_mean, layer11.depthwise_conv.bn.running_var, layer11.depthwise_conv.bn.num_batches_tracked, layer11.se.conv1.conv.weight, layer11.se.conv1.conv.bias, layer11.se.conv2.conv.weight, layer11.se.conv2.conv.bias, layer11.linear_conv.conv.weight, layer11.linear_conv.bn.weight, layer11.linear_conv.bn.bias, layer11.linear_conv.bn.running_mean, layer11.linear_conv.bn.running_var, layer11.linear_conv.bn.num_batches_tracked, layer12.conv.weight, layer12.bn.weight, layer12.bn.bias, layer12.bn.running_mean, layer12.bn.running_var, layer12.bn.num_batches_tracked

Name of parameter - Initialization information

backbone.layer0.conv.weight - torch.Size([16, 3, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer0.bn.weight - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer0.bn.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.depthwise_conv.conv.weight - torch.Size([16, 1, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.depthwise_conv.bn.weight - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.depthwise_conv.bn.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv1.conv.weight - torch.Size([8, 16, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv2.conv.weight - torch.Size([16, 8, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv2.conv.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.linear_conv.conv.weight - torch.Size([16, 16, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.linear_conv.bn.weight - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.linear_conv.bn.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.expand_conv.conv.weight - torch.Size([72, 16, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.expand_conv.bn.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.expand_conv.bn.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.depthwise_conv.conv.weight - torch.Size([72, 1, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.depthwise_conv.bn.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.depthwise_conv.bn.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.linear_conv.conv.weight - torch.Size([24, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.expand_conv.conv.weight - torch.Size([88, 24, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.expand_conv.bn.weight - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.expand_conv.bn.bias - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.depthwise_conv.conv.weight - torch.Size([88, 1, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.depthwise_conv.bn.weight - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.depthwise_conv.bn.bias - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.linear_conv.conv.weight - torch.Size([24, 88, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.expand_conv.conv.weight - torch.Size([96, 24, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.expand_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.expand_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.depthwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.depthwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv1.conv.weight - torch.Size([24, 96, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv2.conv.weight - torch.Size([96, 24, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv2.conv.bias - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.linear_conv.conv.weight - torch.Size([40, 96, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.linear_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.linear_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.expand_conv.conv.weight - torch.Size([240, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.expand_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.expand_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.depthwise_conv.conv.weight - torch.Size([240, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.depthwise_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.depthwise_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv1.conv.weight - torch.Size([64, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv1.conv.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv2.conv.weight - torch.Size([240, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv2.conv.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.linear_conv.conv.weight - torch.Size([40, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.linear_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.linear_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.expand_conv.conv.weight - torch.Size([240, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.expand_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.expand_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.depthwise_conv.conv.weight - torch.Size([240, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.depthwise_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.depthwise_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv1.conv.weight - torch.Size([64, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv1.conv.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv2.conv.weight - torch.Size([240, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv2.conv.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.linear_conv.conv.weight - torch.Size([40, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.linear_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.linear_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.expand_conv.conv.weight - torch.Size([120, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.expand_conv.bn.weight - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.expand_conv.bn.bias - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.depthwise_conv.conv.weight - torch.Size([120, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.depthwise_conv.bn.weight - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.depthwise_conv.bn.bias - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv1.conv.weight - torch.Size([32, 120, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv1.conv.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv2.conv.weight - torch.Size([120, 32, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv2.conv.bias - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.linear_conv.conv.weight - torch.Size([48, 120, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.expand_conv.conv.weight - torch.Size([144, 48, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.expand_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.expand_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.depthwise_conv.conv.weight - torch.Size([144, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.depthwise_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.depthwise_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv1.conv.weight - torch.Size([40, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv1.conv.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv2.conv.weight - torch.Size([144, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv2.conv.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.linear_conv.conv.weight - torch.Size([48, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

decode_head.conv_seg.weight - torch.Size([2, 32, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.fuse4.local_embedding.conv.weight - torch.Size([32, 16, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.local_embedding.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.local_embedding.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.global_act.conv.weight - torch.Size([32, 48, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.global_act.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.global_act.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.0.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.0.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.0.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.1.1.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.1.1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.1.1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.2.1.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.2.1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.2.1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.3.1.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.3.1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.3.1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.4.1.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.4.1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.4.1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.processes.conv.weight - torch.Size([96, 24, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.processes.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.processes.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.compression.conv.weight - torch.Size([48, 120, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.compression.bn.weight - torch.Size([120]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.compression.bn.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.shortcut.conv.weight - torch.Size([48, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.shortcut.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.shortcut.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2023/05/20 17:08:32 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/05/20 17:08:32 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/05/20 17:08:32 - mmengine - INFO - Checkpoints will be saved to /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm.
2023/05/20 17:09:00 - mmengine - INFO - Iter(train) [  200/12000]  lr: 6.9900e-03  eta: 0:27:52  time: 0.1248  data_time: 0.0181  memory: 1334  loss: 0.5738  decode.loss_ce: 0.5738  decode.acc_seg: 69.7288
2023/05/20 17:09:15 - mmengine - INFO - per class results:
2023/05/20 17:09:15 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 53.15 |  65.3 |
|   person   | 71.96 | 86.61 |
+------------+-------+-------+
2023/05/20 17:09:15 - mmengine - INFO - Iter(val) [60/60]    aAcc: 78.7300  mIoU: 62.5600  mAcc: 75.9500  data_time: 0.1645  time: 0.2310
2023/05/20 17:09:17 - mmengine - INFO - The best checkpoint with 78.7300 aAcc at 240 iter is saved to best_aAcc_iter_240.pth.
2023/05/20 17:09:27 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_170815
2023/05/20 17:09:36 - mmengine - INFO - Iter(train) [  400/12000]  lr: 9.8985e-03  eta: 0:25:56  time: 0.1115  data_time: 0.0204  memory: 1270  loss: 0.4814  decode.loss_ce: 0.4814  decode.acc_seg: 78.4645
2023/05/20 17:09:48 - mmengine - INFO - per class results:
2023/05/20 17:09:48 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 59.05 | 68.47 |
|   person   |  76.5 | 90.65 |
+------------+-------+-------+
2023/05/20 17:09:48 - mmengine - INFO - Iter(val) [60/60]    aAcc: 82.4500  mIoU: 67.7800  mAcc: 79.5600  data_time: 0.0992  time: 0.1196
2023/05/20 17:09:48 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_240.pth is removed
2023/05/20 17:09:50 - mmengine - INFO - The best checkpoint with 82.4500 aAcc at 480 iter is saved to best_aAcc_iter_480.pth.
2023/05/20 17:10:03 - mmengine - INFO - Iter(train) [  600/12000]  lr: 9.6932e-03  eta: 0:25:01  time: 0.1105  data_time: 0.0158  memory: 1104  loss: 0.4662  decode.loss_ce: 0.4662  decode.acc_seg: 78.5956
2023/05/20 17:10:21 - mmengine - INFO - per class results:
2023/05/20 17:10:21 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 67.15 | 74.43 |
|   person   | 81.44 | 93.65 |
+------------+-------+-------+
2023/05/20 17:10:21 - mmengine - INFO - Iter(val) [60/60]    aAcc: 86.5400  mIoU: 74.2900  mAcc: 84.0400  data_time: 0.1518  time: 0.1752
2023/05/20 17:10:21 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_480.pth is removed
2023/05/20 17:10:22 - mmengine - INFO - The best checkpoint with 86.5400 aAcc at 720 iter is saved to best_aAcc_iter_720.pth.
2023/05/20 17:10:32 - mmengine - INFO - Iter(train) [  800/12000]  lr: 9.4874e-03  eta: 0:24:19  time: 0.1229  data_time: 0.0164  memory: 1104  loss: 0.4419  decode.loss_ce: 0.4419  decode.acc_seg: 77.1769
2023/05/20 17:10:54 - mmengine - INFO - per class results:
2023/05/20 17:10:54 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 71.83 | 75.21 |
|   person   |  84.9 | 97.24 |
+------------+-------+-------+
2023/05/20 17:10:54 - mmengine - INFO - Iter(val) [60/60]    aAcc: 89.1000  mIoU: 78.3700  mAcc: 86.2300  data_time: 0.1550  time: 0.1825
2023/05/20 17:10:54 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_720.pth is removed
2023/05/20 17:10:55 - mmengine - INFO - The best checkpoint with 89.1000 aAcc at 960 iter is saved to best_aAcc_iter_960.pth.
2023/05/20 17:11:00 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_170815
2023/05/20 17:11:00 - mmengine - INFO - Iter(train) [ 1000/12000]  lr: 9.2811e-03  eta: 0:23:45  time: 0.1131  data_time: 0.0250  memory: 1104  loss: 0.3903  decode.loss_ce: 0.3903  decode.acc_seg: 83.1453
2023/05/20 17:11:24 - mmengine - INFO - Iter(train) [ 1200/12000]  lr: 9.0742e-03  eta: 0:23:00  time: 0.1174  data_time: 0.0176  memory: 1104  loss: 0.4230  decode.loss_ce: 0.4230  decode.acc_seg: 86.3374
2023/05/20 17:11:27 - mmengine - INFO - per class results:
2023/05/20 17:11:27 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 79.74 | 86.66 |
|   person   | 88.03 | 94.91 |
+------------+-------+-------+
2023/05/20 17:11:27 - mmengine - INFO - Iter(val) [60/60]    aAcc: 91.8600  mIoU: 83.8900  mAcc: 90.7900  data_time: 0.1562  time: 0.1787
2023/05/20 17:11:27 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_960.pth is removed
2023/05/20 17:11:29 - mmengine - INFO - The best checkpoint with 91.8600 aAcc at 1200 iter is saved to best_aAcc_iter_1200.pth.
2023/05/20 17:11:52 - mmengine - INFO - Iter(train) [ 1400/12000]  lr: 8.8669e-03  eta: 0:22:31  time: 0.1182  data_time: 0.0151  memory: 1104  loss: 0.3297  decode.loss_ce: 0.3297  decode.acc_seg: 82.8328
2023/05/20 17:12:00 - mmengine - INFO - per class results:
2023/05/20 17:12:00 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 84.42 | 89.68 |
|   person   | 90.85 | 96.34 |
+------------+-------+-------+
2023/05/20 17:12:00 - mmengine - INFO - Iter(val) [60/60]    aAcc: 93.8800  mIoU: 87.6300  mAcc: 93.0100  data_time: 0.1513  time: 0.1974
2023/05/20 17:12:00 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_1200.pth is removed
2023/05/20 17:12:02 - mmengine - INFO - The best checkpoint with 93.8800 aAcc at 1440 iter is saved to best_aAcc_iter_1440.pth.
2023/05/20 17:12:21 - mmengine - INFO - Iter(train) [ 1600/12000]  lr: 8.6590e-03  eta: 0:22:03  time: 0.1192  data_time: 0.0168  memory: 1104  loss: 0.3321  decode.loss_ce: 0.3321  decode.acc_seg: 87.2883
2023/05/20 17:12:34 - mmengine - INFO - per class results:
2023/05/20 17:12:34 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 84.73 | 90.57 |
|   person   | 90.93 | 95.95 |
+------------+-------+-------+
2023/05/20 17:12:34 - mmengine - INFO - Iter(val) [60/60]    aAcc: 93.9700  mIoU: 87.8300  mAcc: 93.2600  data_time: 0.1519  time: 0.1935
2023/05/20 17:12:34 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_1440.pth is removed
2023/05/20 17:12:35 - mmengine - INFO - The best checkpoint with 93.9700 aAcc at 1680 iter is saved to best_aAcc_iter_1680.pth.
2023/05/20 17:12:49 - mmengine - INFO - Iter(train) [ 1800/12000]  lr: 8.4505e-03  eta: 0:21:35  time: 0.1111  data_time: 0.0193  memory: 1104  loss: 0.3497  decode.loss_ce: 0.3497  decode.acc_seg: 77.8371
2023/05/20 17:13:06 - mmengine - INFO - per class results:
2023/05/20 17:13:06 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 86.79 | 90.18 |
|   person   | 92.39 | 97.71 |
+------------+-------+-------+
2023/05/20 17:13:06 - mmengine - INFO - Iter(val) [60/60]    aAcc: 94.9300  mIoU: 89.5900  mAcc: 93.9400  data_time: 0.1163  time: 0.1408
2023/05/20 17:13:06 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_1680.pth is removed
2023/05/20 17:13:08 - mmengine - INFO - The best checkpoint with 94.9300 aAcc at 1920 iter is saved to best_aAcc_iter_1920.pth.
2023/05/20 17:13:17 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_170815
2023/05/20 17:13:17 - mmengine - INFO - Iter(train) [ 2000/12000]  lr: 8.2414e-03  eta: 0:21:09  time: 0.1185  data_time: 0.0175  memory: 1104  loss: 0.2579  decode.loss_ce: 0.2579  decode.acc_seg: 83.6114
2023/05/20 17:13:40 - mmengine - INFO - per class results:
2023/05/20 17:13:40 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 87.72 | 93.97 |
|   person   | 92.55 | 95.82 |
+------------+-------+-------+
2023/05/20 17:13:40 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.1400  mIoU: 90.1300  mAcc: 94.8900  data_time: 0.1517  time: 0.1843
2023/05/20 17:13:40 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_1920.pth is removed
2023/05/20 17:13:41 - mmengine - INFO - The best checkpoint with 95.1400 aAcc at 2160 iter is saved to best_aAcc_iter_2160.pth.
2023/05/20 17:13:46 - mmengine - INFO - Iter(train) [ 2200/12000]  lr: 8.0318e-03  eta: 0:20:44  time: 0.1167  data_time: 0.0192  memory: 1104  loss: 0.3155  decode.loss_ce: 0.3155  decode.acc_seg: 88.7780
2023/05/20 17:14:10 - mmengine - INFO - Iter(train) [ 2400/12000]  lr: 7.8215e-03  eta: 0:20:12  time: 0.1104  data_time: 0.0217  memory: 1104  loss: 0.2605  decode.loss_ce: 0.2605  decode.acc_seg: 87.3859
2023/05/20 17:14:10 - mmengine - INFO - Saving checkpoint at 2400 iterations
2023/05/20 17:14:14 - mmengine - INFO - per class results:
2023/05/20 17:14:14 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.14 | 93.55 |
|   person   | 92.88 |  96.4 |
+------------+-------+-------+
2023/05/20 17:14:14 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.3400  mIoU: 90.5100  mAcc: 94.9700  data_time: 0.1335  time: 0.1588
2023/05/20 17:14:14 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_2160.pth is removed
2023/05/20 17:14:16 - mmengine - INFO - The best checkpoint with 95.3400 aAcc at 2400 iter is saved to best_aAcc_iter_2400.pth.
2023/05/20 17:14:40 - mmengine - INFO - Iter(train) [ 2600/12000]  lr: 7.6106e-03  eta: 0:19:48  time: 0.1214  data_time: 0.0180  memory: 1104  loss: 0.2775  decode.loss_ce: 0.2775  decode.acc_seg: 86.9882
2023/05/20 17:14:48 - mmengine - INFO - per class results:
2023/05/20 17:14:48 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 87.83 |  94.8 |
|   person   | 92.53 | 95.35 |
+------------+-------+-------+
2023/05/20 17:14:48 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.1500  mIoU: 90.1800  mAcc: 95.0700  data_time: 0.1518  time: 0.1828
2023/05/20 17:15:07 - mmengine - INFO - Iter(train) [ 2800/12000]  lr: 7.3990e-03  eta: 0:19:18  time: 0.1257  data_time: 0.0181  memory: 1104  loss: 0.2673  decode.loss_ce: 0.2673  decode.acc_seg: 96.2027
2023/05/20 17:15:20 - mmengine - INFO - per class results:
2023/05/20 17:15:20 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.05 | 95.51 |
|   person   | 92.59 | 95.03 |
+------------+-------+-------+
2023/05/20 17:15:20 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.2100  mIoU: 90.3200  mAcc: 95.2700  data_time: 0.1502  time: 0.1837
2023/05/20 17:15:34 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_170815
2023/05/20 17:15:34 - mmengine - INFO - Iter(train) [ 3000/12000]  lr: 7.1868e-03  eta: 0:18:48  time: 0.1188  data_time: 0.0165  memory: 1104  loss: 0.2259  decode.loss_ce: 0.2259  decode.acc_seg: 90.2564
2023/05/20 17:15:51 - mmengine - INFO - per class results:
2023/05/20 17:15:51 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.14 | 95.25 |
|   person   | 92.69 | 95.27 |
+------------+-------+-------+
2023/05/20 17:15:51 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.2600  mIoU: 90.4100  mAcc: 95.2600  data_time: 0.1511  time: 0.1900
2023/05/20 17:16:01 - mmengine - INFO - Iter(train) [ 3200/12000]  lr: 6.9738e-03  eta: 0:18:21  time: 0.1237  data_time: 0.0278  memory: 1104  loss: 0.2701  decode.loss_ce: 0.2701  decode.acc_seg: 83.8952
2023/05/20 17:16:24 - mmengine - INFO - per class results:
2023/05/20 17:16:24 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.24 | 94.78 |
|   person   |  93.5 | 96.36 |
+------------+-------+-------+
2023/05/20 17:16:24 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.7800  mIoU: 91.3700  mAcc: 95.5700  data_time: 0.1524  time: 0.1899
2023/05/20 17:16:24 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_2400.pth is removed
2023/05/20 17:16:26 - mmengine - INFO - The best checkpoint with 95.7800 aAcc at 3360 iter is saved to best_aAcc_iter_3360.pth.
2023/05/20 17:16:30 - mmengine - INFO - Iter(train) [ 3400/12000]  lr: 6.7601e-03  eta: 0:17:58  time: 0.1233  data_time: 0.0169  memory: 1104  loss: 0.2219  decode.loss_ce: 0.2219  decode.acc_seg: 95.1430
2023/05/20 17:16:55 - mmengine - INFO - Iter(train) [ 3600/12000]  lr: 6.5457e-03  eta: 0:17:31  time: 0.1320  data_time: 0.0227  memory: 1104  loss: 0.1944  decode.loss_ce: 0.1944  decode.acc_seg: 90.9488
2023/05/20 17:16:58 - mmengine - INFO - per class results:
2023/05/20 17:16:58 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.35 | 94.37 |
|   person   | 93.62 | 96.71 |
+------------+-------+-------+
2023/05/20 17:16:58 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.8400  mIoU: 91.4800  mAcc: 95.5400  data_time: 0.1531  time: 0.1941
2023/05/20 17:16:58 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_3360.pth is removed
2023/05/20 17:17:00 - mmengine - INFO - The best checkpoint with 95.8400 aAcc at 3600 iter is saved to best_aAcc_iter_3600.pth.
2023/05/20 17:17:24 - mmengine - INFO - Iter(train) [ 3800/12000]  lr: 6.3304e-03  eta: 0:17:08  time: 0.1267  data_time: 0.0256  memory: 1104  loss: 0.1933  decode.loss_ce: 0.1933  decode.acc_seg: 92.7118
2023/05/20 17:17:31 - mmengine - INFO - per class results:
2023/05/20 17:17:31 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 90.93 | 94.76 |
|   person   | 94.62 | 97.53 |
+------------+-------+-------+
2023/05/20 17:17:31 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.5100  mIoU: 92.7800  mAcc: 96.1500  data_time: 0.0872  time: 0.1139
2023/05/20 17:17:31 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_3600.pth is removed
2023/05/20 17:17:33 - mmengine - INFO - The best checkpoint with 96.5100 aAcc at 3840 iter is saved to best_aAcc_iter_3840.pth.
2023/05/20 17:17:52 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_170815
2023/05/20 17:17:52 - mmengine - INFO - Iter(train) [ 4000/12000]  lr: 6.1143e-03  eta: 0:16:44  time: 0.1179  data_time: 0.0172  memory: 1104  loss: 0.2600  decode.loss_ce: 0.2600  decode.acc_seg: 90.9187
2023/05/20 17:18:05 - mmengine - INFO - per class results:
2023/05/20 17:18:05 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 90.66 | 95.24 |
|   person   |  94.4 | 97.03 |
+------------+-------+-------+
2023/05/20 17:18:05 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.3700  mIoU: 92.5300  mAcc: 96.1400  data_time: 0.1462  time: 0.1660
2023/05/20 17:18:19 - mmengine - INFO - Iter(train) [ 4200/12000]  lr: 5.8974e-03  eta: 0:16:17  time: 0.1209  data_time: 0.0175  memory: 1104  loss: 0.2412  decode.loss_ce: 0.2412  decode.acc_seg: 94.8043
2023/05/20 17:18:37 - mmengine - INFO - per class results:
2023/05/20 17:18:37 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 90.39 | 95.59 |
|   person   | 94.19 | 96.63 |
+------------+-------+-------+
2023/05/20 17:18:37 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.2400  mIoU: 92.2900  mAcc: 96.1100  data_time: 0.1496  time: 0.1701
2023/05/20 17:18:46 - mmengine - INFO - Iter(train) [ 4400/12000]  lr: 5.6795e-03  eta: 0:15:50  time: 0.1127  data_time: 0.0149  memory: 1104  loss: 0.1934  decode.loss_ce: 0.1934  decode.acc_seg: 90.4096
2023/05/20 17:19:09 - mmengine - INFO - per class results:
2023/05/20 17:19:09 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 90.94 | 95.33 |
|   person   | 94.58 | 97.17 |
+------------+-------+-------+
2023/05/20 17:19:09 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.4900  mIoU: 92.7600  mAcc: 96.2500  data_time: 0.1387  time: 0.1854
2023/05/20 17:19:14 - mmengine - INFO - Iter(train) [ 4600/12000]  lr: 5.4607e-03  eta: 0:15:24  time: 0.1210  data_time: 0.0180  memory: 1104  loss: 0.2027  decode.loss_ce: 0.2027  decode.acc_seg: 90.7790
2023/05/20 17:19:38 - mmengine - INFO - Iter(train) [ 4800/12000]  lr: 5.2409e-03  eta: 0:14:57  time: 0.1207  data_time: 0.0209  memory: 1104  loss: 0.2663  decode.loss_ce: 0.2663  decode.acc_seg: 93.1480
2023/05/20 17:19:38 - mmengine - INFO - Saving checkpoint at 4800 iterations
2023/05/20 17:19:42 - mmengine - INFO - per class results:
2023/05/20 17:19:42 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.34 | 95.93 |
|   person   | 94.79 | 97.05 |
+------------+-------+-------+
2023/05/20 17:19:42 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.6400  mIoU: 93.0600  mAcc: 96.4900  data_time: 0.1063  time: 0.1411
2023/05/20 17:19:42 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_3840.pth is removed
2023/05/20 17:19:44 - mmengine - INFO - The best checkpoint with 96.6400 aAcc at 4800 iter is saved to best_aAcc_iter_4800.pth.
2023/05/20 17:20:07 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_170815
2023/05/20 17:20:07 - mmengine - INFO - Iter(train) [ 5000/12000]  lr: 5.0200e-03  eta: 0:14:33  time: 0.1190  data_time: 0.0160  memory: 1104  loss: 0.1763  decode.loss_ce: 0.1763  decode.acc_seg: 90.9548
2023/05/20 17:20:15 - mmengine - INFO - per class results:
2023/05/20 17:20:15 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.59 | 95.03 |
|   person   | 95.03 |  97.8 |
+------------+-------+-------+
2023/05/20 17:20:15 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.7700  mIoU: 93.3100  mAcc: 96.4100  data_time: 0.0964  time: 0.1473
2023/05/20 17:20:15 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_4800.pth is removed
2023/05/20 17:20:17 - mmengine - INFO - The best checkpoint with 96.7700 aAcc at 5040 iter is saved to best_aAcc_iter_5040.pth.
2023/05/20 17:20:36 - mmengine - INFO - Iter(train) [ 5200/12000]  lr: 4.7981e-03  eta: 0:14:09  time: 0.1258  data_time: 0.0241  memory: 1104  loss: 0.1533  decode.loss_ce: 0.1533  decode.acc_seg: 92.9939
2023/05/20 17:20:49 - mmengine - INFO - per class results:
2023/05/20 17:20:49 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.68 | 94.68 |
|   person   | 95.11 | 98.08 |
+------------+-------+-------+
2023/05/20 17:20:49 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.8200  mIoU: 93.4000  mAcc: 96.3800  data_time: 0.1528  time: 0.1724
2023/05/20 17:20:49 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_5040.pth is removed
2023/05/20 17:20:50 - mmengine - INFO - The best checkpoint with 96.8200 aAcc at 5280 iter is saved to best_aAcc_iter_5280.pth.
2023/05/20 17:21:05 - mmengine - INFO - Iter(train) [ 5400/12000]  lr: 4.5749e-03  eta: 0:13:45  time: 0.1218  data_time: 0.0226  memory: 1104  loss: 0.1983  decode.loss_ce: 0.1983  decode.acc_seg: 95.0571
2023/05/20 17:21:22 - mmengine - INFO - per class results:
2023/05/20 17:21:22 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.53 | 95.53 |
|   person   | 94.95 | 97.44 |
+------------+-------+-------+
2023/05/20 17:21:22 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.7300  mIoU: 93.2400  mAcc: 96.4800  data_time: 0.1520  time: 0.1912
2023/05/20 17:21:32 - mmengine - INFO - Iter(train) [ 5600/12000]  lr: 4.3505e-03  eta: 0:13:19  time: 0.1216  data_time: 0.0159  memory: 1104  loss: 0.2093  decode.loss_ce: 0.2093  decode.acc_seg: 90.5067
2023/05/20 17:21:55 - mmengine - INFO - per class results:
2023/05/20 17:21:55 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 90.79 | 95.32 |
|   person   | 94.48 | 97.07 |
+------------+-------+-------+
2023/05/20 17:21:55 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.4200  mIoU: 92.6300  mAcc: 96.2000  data_time: 0.1536  time: 0.1831
2023/05/20 17:22:00 - mmengine - INFO - Iter(train) [ 5800/12000]  lr: 4.1248e-03  eta: 0:12:54  time: 0.1158  data_time: 0.0158  memory: 1104  loss: 0.2267  decode.loss_ce: 0.2267  decode.acc_seg: 87.8157
2023/05/20 17:22:24 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_170815
2023/05/20 17:22:24 - mmengine - INFO - Iter(train) [ 6000/12000]  lr: 3.8977e-03  eta: 0:12:28  time: 0.1213  data_time: 0.0211  memory: 1104  loss: 0.1747  decode.loss_ce: 0.1747  decode.acc_seg: 93.7656
2023/05/20 17:22:28 - mmengine - INFO - per class results:
2023/05/20 17:22:28 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.43 | 95.49 |
|   person   | 94.89 |  97.4 |
+------------+-------+-------+
2023/05/20 17:22:28 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.6900  mIoU: 93.1600  mAcc: 96.4400  data_time: 0.1506  time: 0.1870
2023/05/20 17:22:52 - mmengine - INFO - Iter(train) [ 6200/12000]  lr: 3.6691e-03  eta: 0:12:03  time: 0.1200  data_time: 0.0181  memory: 1104  loss: 0.1646  decode.loss_ce: 0.1646  decode.acc_seg: 89.8965
2023/05/20 17:23:00 - mmengine - INFO - per class results:
2023/05/20 17:23:00 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.52 | 95.32 |
|   person   | 94.96 | 97.57 |
+------------+-------+-------+
2023/05/20 17:23:00 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.7300  mIoU: 93.2400  mAcc: 96.4400  data_time: 0.1258  time: 0.1466
2023/05/20 17:23:19 - mmengine - INFO - Iter(train) [ 6400/12000]  lr: 3.4388e-03  eta: 0:11:37  time: 0.1245  data_time: 0.0156  memory: 1104  loss: 0.1779  decode.loss_ce: 0.1779  decode.acc_seg: 89.2895
2023/05/20 17:23:32 - mmengine - INFO - per class results:
2023/05/20 17:23:32 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.17 | 95.61 |
|   person   |  94.7 | 97.14 |
+------------+-------+-------+
2023/05/20 17:23:32 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.5800  mIoU: 92.9400  mAcc: 96.3800  data_time: 0.1495  time: 0.1797
2023/05/20 17:23:46 - mmengine - INFO - Iter(train) [ 6600/12000]  lr: 3.2067e-03  eta: 0:11:12  time: 0.1198  data_time: 0.0190  memory: 1104  loss: 0.2133  decode.loss_ce: 0.2133  decode.acc_seg: 89.3016
2023/05/20 17:24:05 - mmengine - INFO - per class results:
2023/05/20 17:24:05 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.94 | 95.33 |
|   person   | 95.23 | 97.84 |
+------------+-------+-------+
2023/05/20 17:24:05 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.9100  mIoU: 93.5800  mAcc: 96.5800  data_time: 0.1498  time: 0.1843
2023/05/20 17:24:05 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_5280.pth is removed
2023/05/20 17:24:06 - mmengine - INFO - The best checkpoint with 96.9100 aAcc at 6720 iter is saved to best_aAcc_iter_6720.pth.
2023/05/20 17:24:15 - mmengine - INFO - Iter(train) [ 6800/12000]  lr: 2.9727e-03  eta: 0:10:48  time: 0.1285  data_time: 0.0190  memory: 1104  loss: 0.2083  decode.loss_ce: 0.2083  decode.acc_seg: 90.6543
2023/05/20 17:24:38 - mmengine - INFO - per class results:
2023/05/20 17:24:38 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.58 | 95.68 |
|   person   | 94.97 | 97.37 |
+------------+-------+-------+
2023/05/20 17:24:38 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.7500  mIoU: 93.2700  mAcc: 96.5300  data_time: 0.1498  time: 0.1816
2023/05/20 17:24:43 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_170815
2023/05/20 17:24:43 - mmengine - INFO - Iter(train) [ 7000/12000]  lr: 2.7366e-03  eta: 0:10:22  time: 0.1182  data_time: 0.0157  memory: 1104  loss: 0.1869  decode.loss_ce: 0.1869  decode.acc_seg: 96.3803
2023/05/20 17:25:07 - mmengine - INFO - Iter(train) [ 7200/12000]  lr: 2.4980e-03  eta: 0:09:57  time: 0.1151  data_time: 0.0212  memory: 1104  loss: 0.2259  decode.loss_ce: 0.2259  decode.acc_seg: 96.9196
2023/05/20 17:25:07 - mmengine - INFO - Saving checkpoint at 7200 iterations
2023/05/20 17:25:12 - mmengine - INFO - per class results:
2023/05/20 17:25:12 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.34 | 95.87 |
|   person   |  94.8 | 97.09 |
+------------+-------+-------+
2023/05/20 17:25:12 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.6400  mIoU: 93.0700  mAcc: 96.4800  data_time: 0.1496  time: 0.1800
2023/05/20 17:25:36 - mmengine - INFO - Iter(train) [ 7400/12000]  lr: 2.2569e-03  eta: 0:09:31  time: 0.1248  data_time: 0.0199  memory: 1104  loss: 0.1873  decode.loss_ce: 0.1873  decode.acc_seg: 91.1414
2023/05/20 17:25:44 - mmengine - INFO - per class results:
2023/05/20 17:25:44 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.28 | 95.04 |
|   person   | 95.47 | 98.25 |
+------------+-------+-------+
2023/05/20 17:25:44 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0600  mIoU: 93.8700  mAcc: 96.6400  data_time: 0.1498  time: 0.1783
2023/05/20 17:25:44 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_6720.pth is removed
2023/05/20 17:25:45 - mmengine - INFO - The best checkpoint with 97.0600 aAcc at 7440 iter is saved to best_aAcc_iter_7440.pth.
2023/05/20 17:26:04 - mmengine - INFO - Iter(train) [ 7600/12000]  lr: 2.0126e-03  eta: 0:09:07  time: 0.1155  data_time: 0.0190  memory: 1104  loss: 0.1490  decode.loss_ce: 0.1490  decode.acc_seg: 96.4953
2023/05/20 17:26:17 - mmengine - INFO - per class results:
2023/05/20 17:26:17 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.47 | 95.36 |
|   person   | 95.57 | 98.17 |
+------------+-------+-------+
2023/05/20 17:26:17 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.1300  mIoU: 94.0200  mAcc: 96.7700  data_time: 0.1047  time: 0.1281
2023/05/20 17:26:17 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_7440.pth is removed
2023/05/20 17:26:18 - mmengine - INFO - The best checkpoint with 97.1300 aAcc at 7680 iter is saved to best_aAcc_iter_7680.pth.
2023/05/20 17:26:32 - mmengine - INFO - Iter(train) [ 7800/12000]  lr: 1.7649e-03  eta: 0:08:42  time: 0.1197  data_time: 0.0170  memory: 1104  loss: 0.1640  decode.loss_ce: 0.1640  decode.acc_seg: 96.7426
2023/05/20 17:26:49 - mmengine - INFO - per class results:
2023/05/20 17:26:49 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  92.3 | 95.77 |
|   person   | 95.43 |  97.8 |
+------------+-------+-------+
2023/05/20 17:26:49 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0500  mIoU: 93.8700  mAcc: 96.7800  data_time: 0.1516  time: 0.1713
2023/05/20 17:26:59 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_170815
2023/05/20 17:26:59 - mmengine - INFO - Iter(train) [ 8000/12000]  lr: 1.5129e-03  eta: 0:08:16  time: 0.1173  data_time: 0.0177  memory: 1104  loss: 0.1714  decode.loss_ce: 0.1714  decode.acc_seg: 96.0952
2023/05/20 17:27:21 - mmengine - INFO - per class results:
2023/05/20 17:27:21 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.97 | 95.16 |
|   person   | 95.26 | 97.97 |
+------------+-------+-------+
2023/05/20 17:27:21 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.9300  mIoU: 93.6200  mAcc: 96.5600  data_time: 0.1475  time: 0.1703
2023/05/20 17:27:26 - mmengine - INFO - Iter(train) [ 8200/12000]  lr: 1.2558e-03  eta: 0:07:51  time: 0.1156  data_time: 0.0200  memory: 1104  loss: 0.1763  decode.loss_ce: 0.1763  decode.acc_seg: 94.8672
2023/05/20 17:27:50 - mmengine - INFO - Iter(train) [ 8400/12000]  lr: 9.9217e-04  eta: 0:07:26  time: 0.1250  data_time: 0.0295  memory: 1104  loss: 0.1863  decode.loss_ce: 0.1863  decode.acc_seg: 91.5653
2023/05/20 17:27:53 - mmengine - INFO - per class results:
2023/05/20 17:27:53 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.72 | 95.35 |
|   person   | 95.73 | 98.34 |
+------------+-------+-------+
2023/05/20 17:27:53 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2300  mIoU: 94.2300  mAcc: 96.8400  data_time: 0.1477  time: 0.1779
2023/05/20 17:27:53 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/pappm/best_aAcc_iter_7680.pth is removed
2023/05/20 17:27:55 - mmengine - INFO - The best checkpoint with 97.2300 aAcc at 8400 iter is saved to best_aAcc_iter_8400.pth.
2023/05/20 17:28:18 - mmengine - INFO - Iter(train) [ 8600/12000]  lr: 7.1939e-04  eta: 0:07:01  time: 0.1187  data_time: 0.0185  memory: 1104  loss: 0.1568  decode.loss_ce: 0.1568  decode.acc_seg: 95.1277
2023/05/20 17:28:26 - mmengine - INFO - per class results:
2023/05/20 17:28:26 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.74 | 95.91 |
|   person   | 95.06 | 97.34 |
+------------+-------+-------+
2023/05/20 17:28:26 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.8100  mIoU: 93.4000  mAcc: 96.6200  data_time: 0.1314  time: 0.1686
2023/05/20 17:28:46 - mmengine - INFO - Iter(train) [ 8800/12000]  lr: 4.3192e-04  eta: 0:06:36  time: 0.1186  data_time: 0.0254  memory: 1104  loss: 0.1825  decode.loss_ce: 0.1825  decode.acc_seg: 91.4185
2023/05/20 17:28:59 - mmengine - INFO - per class results:
2023/05/20 17:28:59 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  92.3 | 95.48 |
|   person   | 95.45 | 97.98 |
+------------+-------+-------+
2023/05/20 17:28:59 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0500  mIoU: 93.8700  mAcc: 96.7300  data_time: 0.1499  time: 0.1715
2023/05/20 17:29:13 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_170815
2023/05/20 17:29:13 - mmengine - INFO - Iter(train) [ 9000/12000]  lr: 1.0000e-04  eta: 0:06:11  time: 0.1164  data_time: 0.0163  memory: 1104  loss: 0.1998  decode.loss_ce: 0.1998  decode.acc_seg: 96.5119
2023/05/20 17:29:31 - mmengine - INFO - per class results:
2023/05/20 17:29:31 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.39 | 95.62 |
|   person   |  95.5 | 97.95 |
+------------+-------+-------+
2023/05/20 17:29:31 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0900  mIoU: 93.9400  mAcc: 96.7800  data_time: 0.1289  time: 0.1560
2023/05/20 17:29:40 - mmengine - INFO - Iter(train) [ 9200/12000]  lr: 9.4008e-05  eta: 0:05:46  time: 0.1110  data_time: 0.0150  memory: 1104  loss: 0.1852  decode.loss_ce: 0.1852  decode.acc_seg: 86.9203
2023/05/20 17:30:03 - mmengine - INFO - per class results:
2023/05/20 17:30:03 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.24 |  95.8 |
|   person   | 95.39 | 97.74 |
+------------+-------+-------+
2023/05/20 17:30:03 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0200  mIoU: 93.8200  mAcc: 96.7700  data_time: 0.1131  time: 0.1544
2023/05/20 17:30:07 - mmengine - INFO - Iter(train) [ 9400/12000]  lr: 8.7942e-05  eta: 0:05:22  time: 0.1242  data_time: 0.0156  memory: 1104  loss: 0.1398  decode.loss_ce: 0.1398  decode.acc_seg: 93.4259
2023/05/20 17:30:32 - mmengine - INFO - Iter(train) [ 9600/12000]  lr: 8.1830e-05  eta: 0:04:57  time: 0.1255  data_time: 0.0154  memory: 1104  loss: 0.1394  decode.loss_ce: 0.1394  decode.acc_seg: 94.2582
2023/05/20 17:30:32 - mmengine - INFO - Saving checkpoint at 9600 iterations
2023/05/20 17:30:37 - mmengine - INFO - per class results:
2023/05/20 17:30:37 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.36 | 95.57 |
|   person   | 95.48 | 97.96 |
+------------+-------+-------+
2023/05/20 17:30:37 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0800  mIoU: 93.9200  mAcc: 96.7600  data_time: 0.1496  time: 0.1866
2023/05/20 17:31:01 - mmengine - INFO - Iter(train) [ 9800/12000]  lr: 7.5666e-05  eta: 0:04:32  time: 0.1230  data_time: 0.0247  memory: 1104  loss: 0.1616  decode.loss_ce: 0.1616  decode.acc_seg: 91.6806
2023/05/20 17:31:09 - mmengine - INFO - per class results:
2023/05/20 17:31:09 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.11 | 95.68 |
|   person   | 95.31 | 97.73 |
+------------+-------+-------+
2023/05/20 17:31:09 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.9700  mIoU: 93.7100  mAcc: 96.7000  data_time: 0.1490  time: 0.1926
2023/05/20 17:31:28 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_170815
2023/05/20 17:31:28 - mmengine - INFO - Iter(train) [10000/12000]  lr: 6.9446e-05  eta: 0:04:07  time: 0.1185  data_time: 0.0164  memory: 1104  loss: 0.1672  decode.loss_ce: 0.1672  decode.acc_seg: 93.1873
2023/05/20 17:31:41 - mmengine - INFO - per class results:
2023/05/20 17:31:41 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  92.3 | 95.84 |
|   person   | 95.43 | 97.76 |
+------------+-------+-------+
2023/05/20 17:31:41 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0500  mIoU: 93.8700  mAcc: 96.8000  data_time: 0.0968  time: 0.1337
2023/05/20 17:31:55 - mmengine - INFO - Iter(train) [10200/12000]  lr: 6.3164e-05  eta: 0:03:42  time: 0.1155  data_time: 0.0158  memory: 1104  loss: 0.1580  decode.loss_ce: 0.1580  decode.acc_seg: 96.3624
2023/05/20 17:32:13 - mmengine - INFO - per class results:
2023/05/20 17:32:13 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.21 | 95.73 |
|   person   | 95.37 | 97.76 |
+------------+-------+-------+
2023/05/20 17:32:13 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0100  mIoU: 93.7900  mAcc: 96.7400  data_time: 0.1505  time: 0.1876
2023/05/20 17:32:22 - mmengine - INFO - Iter(train) [10400/12000]  lr: 5.6811e-05  eta: 0:03:17  time: 0.1195  data_time: 0.0229  memory: 1104  loss: 0.1450  decode.loss_ce: 0.1450  decode.acc_seg: 95.6633
2023/05/20 17:32:45 - mmengine - INFO - per class results:
2023/05/20 17:32:45 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.27 | 95.86 |
|   person   |  95.4 | 97.72 |
+------------+-------+-------+
2023/05/20 17:32:45 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0300  mIoU: 93.8300  mAcc: 96.7900  data_time: 0.1503  time: 0.1698
2023/05/20 17:32:50 - mmengine - INFO - Iter(train) [10600/12000]  lr: 5.0377e-05  eta: 0:02:53  time: 0.1287  data_time: 0.0253  memory: 1104  loss: 0.1668  decode.loss_ce: 0.1668  decode.acc_seg: 95.1095
2023/05/20 17:33:14 - mmengine - INFO - Iter(train) [10800/12000]  lr: 4.3851e-05  eta: 0:02:28  time: 0.1237  data_time: 0.0213  memory: 1104  loss: 0.1809  decode.loss_ce: 0.1809  decode.acc_seg: 93.0668
2023/05/20 17:33:18 - mmengine - INFO - per class results:
2023/05/20 17:33:18 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.18 |  95.9 |
|   person   | 95.34 | 97.63 |
+------------+-------+-------+
2023/05/20 17:33:18 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.9900  mIoU: 93.7600  mAcc: 96.7700  data_time: 0.1497  time: 0.1730
2023/05/20 17:33:42 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_170815
2023/05/20 17:33:42 - mmengine - INFO - Iter(train) [11000/12000]  lr: 3.7215e-05  eta: 0:02:03  time: 0.1240  data_time: 0.0174  memory: 1104  loss: 0.1339  decode.loss_ce: 0.1339  decode.acc_seg: 91.9861
2023/05/20 17:33:50 - mmengine - INFO - per class results:
2023/05/20 17:33:50 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.33 |  95.9 |
|   person   | 95.44 | 97.73 |
+------------+-------+-------+
2023/05/20 17:33:50 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0500  mIoU: 93.8800  mAcc: 96.8200  data_time: 0.1513  time: 0.1724
2023/05/20 17:34:09 - mmengine - INFO - Iter(train) [11200/12000]  lr: 3.0444e-05  eta: 0:01:38  time: 0.1240  data_time: 0.0185  memory: 1104  loss: 0.1787  decode.loss_ce: 0.1787  decode.acc_seg: 95.7435
2023/05/20 17:34:21 - mmengine - INFO - per class results:
2023/05/20 17:34:21 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.39 | 95.79 |
|   person   | 95.48 | 97.84 |
+------------+-------+-------+
2023/05/20 17:34:21 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0800  mIoU: 93.9400  mAcc: 96.8100  data_time: 0.1151  time: 0.1393
2023/05/20 17:34:36 - mmengine - INFO - Iter(train) [11400/12000]  lr: 2.3499e-05  eta: 0:01:14  time: 0.1214  data_time: 0.0174  memory: 1104  loss: 0.1779  decode.loss_ce: 0.1779  decode.acc_seg: 89.9921
2023/05/20 17:34:54 - mmengine - INFO - per class results:
2023/05/20 17:34:54 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.37 | 95.61 |
|   person   | 95.48 | 97.94 |
+------------+-------+-------+
2023/05/20 17:34:54 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0800  mIoU: 93.9200  mAcc: 96.7800  data_time: 0.1481  time: 0.1723
2023/05/20 17:35:03 - mmengine - INFO - Iter(train) [11600/12000]  lr: 1.6315e-05  eta: 0:00:49  time: 0.1184  data_time: 0.0171  memory: 1104  loss: 0.1516  decode.loss_ce: 0.1516  decode.acc_seg: 91.1583
2023/05/20 17:35:25 - mmengine - INFO - per class results:
2023/05/20 17:35:25 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.21 | 95.82 |
|   person   | 95.37 | 97.71 |
+------------+-------+-------+
2023/05/20 17:35:25 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0100  mIoU: 93.7900  mAcc: 96.7600  data_time: 0.1447  time: 0.1661
2023/05/20 17:35:30 - mmengine - INFO - Iter(train) [11800/12000]  lr: 8.7428e-06  eta: 0:00:24  time: 0.1179  data_time: 0.0178  memory: 1104  loss: 0.1498  decode.loss_ce: 0.1498  decode.acc_seg: 94.8357
2023/05/20 17:35:54 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_170815
2023/05/20 17:35:54 - mmengine - INFO - Iter(train) [12000/12000]  lr: 0.0000e+00  eta: 0:00:00  time: 0.1138  data_time: 0.0159  memory: 1104  loss: 0.1721  decode.loss_ce: 0.1721  decode.acc_seg: 96.9406
2023/05/20 17:35:54 - mmengine - INFO - Saving checkpoint at 12000 iterations
2023/05/20 17:35:59 - mmengine - INFO - per class results:
2023/05/20 17:35:59 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.22 | 95.88 |
|   person   | 95.37 | 97.68 |
+------------+-------+-------+
2023/05/20 17:35:59 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0100  mIoU: 93.8000  mAcc: 96.7800  data_time: 0.1317  time: 0.1701
