2023/05/17 21:47:33 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.7 (default, Feb  5 2021, 16:56:08) [GCC 5.4.0 20160609]
    CUDA available: True
    numpy_random_seed: 304
    GPU 0,1,2,3,4,5,6,7,8,9: NVIDIA GeForce RTX 2080 Ti
    CUDA_HOME: /usr/local/cuda-11.3
    NVCC: Cuda compilation tools, release 11.3, V11.3.109
    GCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
    PyTorch: 1.12.1+cu113
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.13.1+cu113
    OpenCV: 4.6.0
    MMEngine: 0.7.2

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 304
    Distributed launcher: pytorch
    Distributed training: True
    GPU number: 4
------------------------------------------------------------

2023/05/17 21:47:34 - mmengine - INFO - Config:
dataset_type = 'PortraitDataset'
data_root = 'data/portrait'
crop_size = (512, 512)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', reduce_zero_label=False),
    dict(
        type='RandomResize',
        scale=(1024, 1024),
        ratio_range=(0.5, 1.5),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', scale=(1024, 512), keep_ratio=True),
    dict(type='LoadAnnotations', reduce_zero_label=False),
    dict(type='PackSegInputs')
]
img_ratios = [0.5, 0.75, 1.0, 1.25, 1.5, 1.75]
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale_factor': 0.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 0.75,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.0,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.25,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.75,
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 0.0,
                        'direction': 'horizontal'
                    }, {
                        'type': 'RandomFlip',
                        'prob': 1.0,
                        'direction': 'horizontal'
                    }], [{
                        'type': 'LoadAnnotations'
                    }], [{
                        'type': 'PackSegInputs'
                    }]])
]
train_dataloader = dict(
    batch_size=6,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='InfiniteSampler', shuffle=True),
    dataset=dict(
        type='PortraitDataset',
        data_root='data/portrait',
        data_prefix=dict(img_path='train/img', seg_map_path='train/ann'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', reduce_zero_label=False),
            dict(
                type='RandomResize',
                scale=(1024, 1024),
                ratio_range=(0.5, 1.5),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs')
        ]))
val_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='PortraitDataset',
        data_root='data/portrait',
        data_prefix=dict(img_path='val/img', seg_map_path='val/ann'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(1024, 512), keep_ratio=True),
            dict(type='LoadAnnotations', reduce_zero_label=False),
            dict(type='PackSegInputs')
        ]))
test_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='PortraitDataset',
        data_root='data/portrait',
        data_prefix=dict(img_path='val/img', seg_map_path='val/ann'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(1024, 512), keep_ratio=True),
            dict(type='LoadAnnotations', reduce_zero_label=False),
            dict(type='PackSegInputs')
        ]))
val_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
test_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(type='TensorboardVisBackend')
]
visualizer = dict(
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='TensorboardVisBackend')
    ],
    name='visualizer')
log_processor = dict(by_epoch=False)
log_level = 'INFO'
load_from = None
resume = False
tta_model = dict(type='SegTTAModel')
work_dir = 'workdirs/spag'
norm_cfg = dict(type='BN', requires_grad=True)
data_preprocessor = dict(
    type='SegDataPreProcessor',
    mean=[123.675, 116.28, 103.53],
    std=[58.395, 57.12, 57.375],
    bgr_to_rgb=True,
    pad_val=0,
    seg_pad_val=255,
    size=(512, 512))
model = dict(
    type='EncoderDecoder',
    data_preprocessor=dict(
        type='SegDataPreProcessor',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        bgr_to_rgb=True,
        pad_val=0,
        seg_pad_val=255,
        size=(512, 512)),
    pretrained='open-mmlab://contrib/mobilenet_v3_small',
    backbone=dict(
        type='MobileNetV3',
        arch='small',
        out_indices=(1, 8),
        norm_cfg=dict(type='BN', requires_grad=True)),
    decode_head=dict(
        type='testHead',
        neck=0,
        fuse=5,
        in_channels=(16, 48),
        in_index=(0, 1),
        channels=16,
        input_transform='multiple_select',
        num_classes=2,
        norm_cfg=dict(type='BN', requires_grad=True),
        act_cfg=dict(type='ReLU'),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
iters = 12000
param_scheduler = [
    dict(type='LinearLR', by_epoch=False, start_factor=0.1, begin=0, end=300),
    dict(
        type='PolyLR',
        eta_min=0.0001,
        power=0.9,
        begin=300,
        end=9000,
        by_epoch=False),
    dict(
        type='PolyLR',
        eta_min=0,
        power=0.9,
        begin=9000,
        end=12000,
        by_epoch=False)
]
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005))
train_cfg = dict(type='IterBasedTrainLoop', max_iters=12000, val_interval=240)
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=200, log_metric_by_epoch=False),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook',
        by_epoch=False,
        save_best='auto',
        max_keep_ckpts=2,
        interval=2400),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='SegVisualizationHook', draw=True))
randomness = dict(seed=304)
launcher = 'pytorch'

2023/05/17 21:47:35 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/05/17 21:47:36 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2023/05/17 21:47:37 - mmengine - INFO - load model from: open-mmlab://contrib/mobilenet_v3_small
2023/05/17 21:47:37 - mmengine - INFO - Loads checkpoint by openmmlab backend from path: open-mmlab://contrib/mobilenet_v3_small
2023/05/17 21:47:37 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: layer9.expand_conv.conv.weight, layer9.expand_conv.bn.weight, layer9.expand_conv.bn.bias, layer9.expand_conv.bn.running_mean, layer9.expand_conv.bn.running_var, layer9.expand_conv.bn.num_batches_tracked, layer9.depthwise_conv.conv.weight, layer9.depthwise_conv.bn.weight, layer9.depthwise_conv.bn.bias, layer9.depthwise_conv.bn.running_mean, layer9.depthwise_conv.bn.running_var, layer9.depthwise_conv.bn.num_batches_tracked, layer9.se.conv1.conv.weight, layer9.se.conv1.conv.bias, layer9.se.conv2.conv.weight, layer9.se.conv2.conv.bias, layer9.linear_conv.conv.weight, layer9.linear_conv.bn.weight, layer9.linear_conv.bn.bias, layer9.linear_conv.bn.running_mean, layer9.linear_conv.bn.running_var, layer9.linear_conv.bn.num_batches_tracked, layer10.expand_conv.conv.weight, layer10.expand_conv.bn.weight, layer10.expand_conv.bn.bias, layer10.expand_conv.bn.running_mean, layer10.expand_conv.bn.running_var, layer10.expand_conv.bn.num_batches_tracked, layer10.depthwise_conv.conv.weight, layer10.depthwise_conv.bn.weight, layer10.depthwise_conv.bn.bias, layer10.depthwise_conv.bn.running_mean, layer10.depthwise_conv.bn.running_var, layer10.depthwise_conv.bn.num_batches_tracked, layer10.se.conv1.conv.weight, layer10.se.conv1.conv.bias, layer10.se.conv2.conv.weight, layer10.se.conv2.conv.bias, layer10.linear_conv.conv.weight, layer10.linear_conv.bn.weight, layer10.linear_conv.bn.bias, layer10.linear_conv.bn.running_mean, layer10.linear_conv.bn.running_var, layer10.linear_conv.bn.num_batches_tracked, layer11.expand_conv.conv.weight, layer11.expand_conv.bn.weight, layer11.expand_conv.bn.bias, layer11.expand_conv.bn.running_mean, layer11.expand_conv.bn.running_var, layer11.expand_conv.bn.num_batches_tracked, layer11.depthwise_conv.conv.weight, layer11.depthwise_conv.bn.weight, layer11.depthwise_conv.bn.bias, layer11.depthwise_conv.bn.running_mean, layer11.depthwise_conv.bn.running_var, layer11.depthwise_conv.bn.num_batches_tracked, layer11.se.conv1.conv.weight, layer11.se.conv1.conv.bias, layer11.se.conv2.conv.weight, layer11.se.conv2.conv.bias, layer11.linear_conv.conv.weight, layer11.linear_conv.bn.weight, layer11.linear_conv.bn.bias, layer11.linear_conv.bn.running_mean, layer11.linear_conv.bn.running_var, layer11.linear_conv.bn.num_batches_tracked, layer12.conv.weight, layer12.bn.weight, layer12.bn.bias, layer12.bn.running_mean, layer12.bn.running_var, layer12.bn.num_batches_tracked

Name of parameter - Initialization information

backbone.layer0.conv.weight - torch.Size([16, 3, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer0.bn.weight - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer0.bn.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.depthwise_conv.conv.weight - torch.Size([16, 1, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.depthwise_conv.bn.weight - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.depthwise_conv.bn.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv1.conv.weight - torch.Size([8, 16, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv2.conv.weight - torch.Size([16, 8, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv2.conv.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.linear_conv.conv.weight - torch.Size([16, 16, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.linear_conv.bn.weight - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.linear_conv.bn.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.expand_conv.conv.weight - torch.Size([72, 16, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.expand_conv.bn.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.expand_conv.bn.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.depthwise_conv.conv.weight - torch.Size([72, 1, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.depthwise_conv.bn.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.depthwise_conv.bn.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.linear_conv.conv.weight - torch.Size([24, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.expand_conv.conv.weight - torch.Size([88, 24, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.expand_conv.bn.weight - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.expand_conv.bn.bias - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.depthwise_conv.conv.weight - torch.Size([88, 1, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.depthwise_conv.bn.weight - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.depthwise_conv.bn.bias - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.linear_conv.conv.weight - torch.Size([24, 88, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.expand_conv.conv.weight - torch.Size([96, 24, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.expand_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.expand_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.depthwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.depthwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv1.conv.weight - torch.Size([24, 96, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv2.conv.weight - torch.Size([96, 24, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv2.conv.bias - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.linear_conv.conv.weight - torch.Size([40, 96, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.linear_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.linear_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.expand_conv.conv.weight - torch.Size([240, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.expand_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.expand_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.depthwise_conv.conv.weight - torch.Size([240, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.depthwise_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.depthwise_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv1.conv.weight - torch.Size([64, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv1.conv.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv2.conv.weight - torch.Size([240, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv2.conv.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.linear_conv.conv.weight - torch.Size([40, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.linear_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.linear_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.expand_conv.conv.weight - torch.Size([240, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.expand_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.expand_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.depthwise_conv.conv.weight - torch.Size([240, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.depthwise_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.depthwise_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv1.conv.weight - torch.Size([64, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv1.conv.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv2.conv.weight - torch.Size([240, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv2.conv.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.linear_conv.conv.weight - torch.Size([40, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.linear_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.linear_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.expand_conv.conv.weight - torch.Size([120, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.expand_conv.bn.weight - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.expand_conv.bn.bias - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.depthwise_conv.conv.weight - torch.Size([120, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.depthwise_conv.bn.weight - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.depthwise_conv.bn.bias - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv1.conv.weight - torch.Size([32, 120, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv1.conv.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv2.conv.weight - torch.Size([120, 32, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv2.conv.bias - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.linear_conv.conv.weight - torch.Size([48, 120, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.expand_conv.conv.weight - torch.Size([144, 48, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.expand_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.expand_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.depthwise_conv.conv.weight - torch.Size([144, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.depthwise_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.depthwise_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv1.conv.weight - torch.Size([40, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv1.conv.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv2.conv.weight - torch.Size([144, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv2.conv.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.linear_conv.conv.weight - torch.Size([48, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

decode_head.conv_seg.weight - torch.Size([2, 16, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.fuse4.conv.conv.weight - torch.Size([16, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.fuse4.conv.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.conv.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.f_i.conv.weight - torch.Size([32, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.fuse4.f_i.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.f_i.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.f_p.conv.weight - torch.Size([32, 16, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.fuse4.f_p.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.f_p.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.0.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.0.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.0.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.1.1.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.1.1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.1.1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.2.1.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.2.1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.2.1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.3.1.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.3.1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.3.1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.4.1.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.4.1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.4.1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.processes.conv.weight - torch.Size([96, 24, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.processes.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.processes.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.compression.conv.weight - torch.Size([48, 120, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.compression.bn.weight - torch.Size([120]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.compression.bn.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.shortcut.conv.weight - torch.Size([48, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.shortcut.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.shortcut.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2023/05/17 21:47:37 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/05/17 21:47:37 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/05/17 21:47:37 - mmengine - INFO - Checkpoints will be saved to /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/spag.
2023/05/17 21:47:52 - mmengine - INFO - Iter(train) [  200/12000]  lr: 6.9900e-03  eta: 0:15:29  time: 0.0678  data_time: 0.0088  memory: 1334  loss: 0.4599  decode.loss_ce: 0.4599  decode.acc_seg: 81.0849
2023/05/17 21:48:02 - mmengine - INFO - per class results:
2023/05/17 21:48:02 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 73.36 | 83.86 |
|   person   | 83.68 |  91.6 |
+------------+-------+-------+
2023/05/17 21:48:02 - mmengine - INFO - Iter(val) [60/60]    aAcc: 88.7400  mIoU: 78.5200  mAcc: 87.7300  data_time: 0.0788  time: 0.1293
2023/05/17 21:48:03 - mmengine - INFO - The best checkpoint with 88.7400 aAcc at 240 iter is saved to best_aAcc_iter_240.pth.
2023/05/17 21:48:09 - mmengine - INFO - Exp name: mv3+pappm+cus_20230517_214730
2023/05/17 21:48:14 - mmengine - INFO - Iter(train) [  400/12000]  lr: 9.8985e-03  eta: 0:14:29  time: 0.0645  data_time: 0.0084  memory: 1273  loss: 0.3183  decode.loss_ce: 0.3183  decode.acc_seg: 88.0664
2023/05/17 21:48:21 - mmengine - INFO - per class results:
2023/05/17 21:48:21 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  81.9 | 92.12 |
|   person   | 88.59 | 92.68 |
+------------+-------+-------+
2023/05/17 21:48:21 - mmengine - INFO - Iter(val) [60/60]    aAcc: 92.4800  mIoU: 85.2500  mAcc: 92.4000  data_time: 0.0407  time: 0.0649
2023/05/17 21:48:21 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/spag/best_aAcc_iter_240.pth is removed
2023/05/17 21:48:21 - mmengine - INFO - The best checkpoint with 92.4800 aAcc at 480 iter is saved to best_aAcc_iter_480.pth.
2023/05/17 21:48:29 - mmengine - INFO - Iter(train) [  600/12000]  lr: 9.6932e-03  eta: 0:13:55  time: 0.0641  data_time: 0.0083  memory: 1126  loss: 0.2372  decode.loss_ce: 0.2372  decode.acc_seg: 88.8497
2023/05/17 21:48:39 - mmengine - INFO - per class results:
2023/05/17 21:48:39 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 84.38 | 92.52 |
|   person   | 90.38 | 94.35 |
+------------+-------+-------+
2023/05/17 21:48:39 - mmengine - INFO - Iter(val) [60/60]    aAcc: 93.6700  mIoU: 87.3800  mAcc: 93.4300  data_time: 0.0676  time: 0.0784
2023/05/17 21:48:39 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/spag/best_aAcc_iter_480.pth is removed
2023/05/17 21:48:39 - mmengine - INFO - The best checkpoint with 93.6700 aAcc at 720 iter is saved to best_aAcc_iter_720.pth.
2023/05/17 21:48:45 - mmengine - INFO - Iter(train) [  800/12000]  lr: 9.4874e-03  eta: 0:13:33  time: 0.0651  data_time: 0.0084  memory: 1126  loss: 0.2553  decode.loss_ce: 0.2553  decode.acc_seg: 92.0756
2023/05/17 21:48:57 - mmengine - INFO - per class results:
2023/05/17 21:48:57 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 87.18 | 93.47 |
|   person   | 92.24 | 95.77 |
+------------+-------+-------+
2023/05/17 21:48:57 - mmengine - INFO - Iter(val) [60/60]    aAcc: 94.9200  mIoU: 89.7100  mAcc: 94.6200  data_time: 0.0736  time: 0.0831
2023/05/17 21:48:57 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/spag/best_aAcc_iter_720.pth is removed
2023/05/17 21:48:58 - mmengine - INFO - The best checkpoint with 94.9200 aAcc at 960 iter is saved to best_aAcc_iter_960.pth.
2023/05/17 21:49:00 - mmengine - INFO - Exp name: mv3+pappm+cus_20230517_214730
2023/05/17 21:49:00 - mmengine - INFO - Iter(train) [ 1000/12000]  lr: 9.2811e-03  eta: 0:13:12  time: 0.0680  data_time: 0.0083  memory: 1126  loss: 0.2562  decode.loss_ce: 0.2562  decode.acc_seg: 85.0208
2023/05/17 21:49:13 - mmengine - INFO - Iter(train) [ 1200/12000]  lr: 9.0742e-03  eta: 0:12:47  time: 0.0697  data_time: 0.0129  memory: 1126  loss: 0.3033  decode.loss_ce: 0.3033  decode.acc_seg: 78.9373
2023/05/17 21:49:15 - mmengine - INFO - per class results:
2023/05/17 21:49:15 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 85.78 | 94.41 |
|   person   | 91.12 | 94.11 |
+------------+-------+-------+
2023/05/17 21:49:15 - mmengine - INFO - Iter(val) [60/60]    aAcc: 94.2200  mIoU: 88.4500  mAcc: 94.2600  data_time: 0.0700  time: 0.0794
2023/05/17 21:49:29 - mmengine - INFO - Iter(train) [ 1400/12000]  lr: 8.8669e-03  eta: 0:12:28  time: 0.0713  data_time: 0.0082  memory: 1126  loss: 0.1955  decode.loss_ce: 0.1955  decode.acc_seg: 91.2983
2023/05/17 21:49:33 - mmengine - INFO - per class results:
2023/05/17 21:49:33 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  86.0 | 95.29 |
|   person   | 91.15 | 93.66 |
+------------+-------+-------+
2023/05/17 21:49:33 - mmengine - INFO - Iter(val) [60/60]    aAcc: 94.2700  mIoU: 88.5800  mAcc: 94.4800  data_time: 0.0722  time: 0.0809
2023/05/17 21:49:43 - mmengine - INFO - Iter(train) [ 1600/12000]  lr: 8.6590e-03  eta: 0:12:09  time: 0.0679  data_time: 0.0100  memory: 1126  loss: 0.2166  decode.loss_ce: 0.2166  decode.acc_seg: 92.6766
2023/05/17 21:49:50 - mmengine - INFO - per class results:
2023/05/17 21:49:50 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.18 | 94.34 |
|   person   | 92.82 |  95.9 |
+------------+-------+-------+
2023/05/17 21:49:50 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.3200  mIoU: 90.5000  mAcc: 95.1200  data_time: 0.0684  time: 0.0778
2023/05/17 21:49:50 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/spag/best_aAcc_iter_960.pth is removed
2023/05/17 21:49:51 - mmengine - INFO - The best checkpoint with 95.3200 aAcc at 1680 iter is saved to best_aAcc_iter_1680.pth.
2023/05/17 21:49:59 - mmengine - INFO - Iter(train) [ 1800/12000]  lr: 8.4505e-03  eta: 0:11:55  time: 0.0663  data_time: 0.0080  memory: 1126  loss: 0.2378  decode.loss_ce: 0.2378  decode.acc_seg: 83.2455
2023/05/17 21:50:08 - mmengine - INFO - per class results:
2023/05/17 21:50:08 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.14 | 93.41 |
|   person   | 92.91 |  96.5 |
+------------+-------+-------+
2023/05/17 21:50:08 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.3600  mIoU: 90.5300  mAcc: 94.9500  data_time: 0.0562  time: 0.0656
2023/05/17 21:50:08 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/spag/best_aAcc_iter_1680.pth is removed
2023/05/17 21:50:09 - mmengine - INFO - The best checkpoint with 95.3600 aAcc at 1920 iter is saved to best_aAcc_iter_1920.pth.
2023/05/17 21:50:14 - mmengine - INFO - Exp name: mv3+pappm+cus_20230517_214730
2023/05/17 21:50:14 - mmengine - INFO - Iter(train) [ 2000/12000]  lr: 8.2414e-03  eta: 0:11:42  time: 0.0689  data_time: 0.0089  memory: 1126  loss: 0.2023  decode.loss_ce: 0.2023  decode.acc_seg: 83.5504
2023/05/17 21:50:26 - mmengine - INFO - per class results:
2023/05/17 21:50:26 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.04 |  95.5 |
|   person   | 93.28 | 95.75 |
+------------+-------+-------+
2023/05/17 21:50:26 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.6600  mIoU: 91.1600  mAcc: 95.6200  data_time: 0.0749  time: 0.0844
2023/05/17 21:50:26 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/spag/best_aAcc_iter_1920.pth is removed
2023/05/17 21:50:27 - mmengine - INFO - The best checkpoint with 95.6600 aAcc at 2160 iter is saved to best_aAcc_iter_2160.pth.
2023/05/17 21:50:30 - mmengine - INFO - Iter(train) [ 2200/12000]  lr: 8.0318e-03  eta: 0:11:27  time: 0.0647  data_time: 0.0083  memory: 1126  loss: 0.2293  decode.loss_ce: 0.2293  decode.acc_seg: 92.2845
2023/05/17 21:50:43 - mmengine - INFO - Iter(train) [ 2400/12000]  lr: 7.8215e-03  eta: 0:11:10  time: 0.0659  data_time: 0.0083  memory: 1126  loss: 0.1877  decode.loss_ce: 0.1877  decode.acc_seg: 91.2870
2023/05/17 21:50:43 - mmengine - INFO - Saving checkpoint at 2400 iterations
2023/05/17 21:50:45 - mmengine - INFO - per class results:
2023/05/17 21:50:45 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.84 | 95.08 |
|   person   |  93.2 | 95.89 |
+------------+-------+-------+
2023/05/17 21:50:45 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.5900  mIoU: 91.0200  mAcc: 95.4800  data_time: 0.0720  time: 0.0825
2023/05/17 21:50:59 - mmengine - INFO - Iter(train) [ 2600/12000]  lr: 7.6106e-03  eta: 0:10:54  time: 0.0695  data_time: 0.0081  memory: 1126  loss: 0.1973  decode.loss_ce: 0.1973  decode.acc_seg: 87.6239
2023/05/17 21:51:03 - mmengine - INFO - per class results:
2023/05/17 21:51:03 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.62 | 95.36 |
|   person   | 93.01 | 95.54 |
+------------+-------+-------+
2023/05/17 21:51:03 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.4700  mIoU: 90.8100  mAcc: 95.4500  data_time: 0.0729  time: 0.0821
2023/05/17 21:51:14 - mmengine - INFO - Iter(train) [ 2800/12000]  lr: 7.3990e-03  eta: 0:10:39  time: 0.0665  data_time: 0.0086  memory: 1126  loss: 0.2006  decode.loss_ce: 0.2006  decode.acc_seg: 97.6706
2023/05/17 21:51:20 - mmengine - INFO - per class results:
2023/05/17 21:51:20 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  88.7 | 95.98 |
|   person   | 92.99 | 95.19 |
+------------+-------+-------+
2023/05/17 21:51:20 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.4800  mIoU: 90.8400  mAcc: 95.5800  data_time: 0.0699  time: 0.0784
2023/05/17 21:51:28 - mmengine - INFO - Exp name: mv3+pappm+cus_20230517_214730
2023/05/17 21:51:28 - mmengine - INFO - Iter(train) [ 3000/12000]  lr: 7.1868e-03  eta: 0:10:23  time: 0.0659  data_time: 0.0076  memory: 1126  loss: 0.1567  decode.loss_ce: 0.1567  decode.acc_seg: 92.6778
2023/05/17 21:51:38 - mmengine - INFO - per class results:
2023/05/17 21:51:38 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.91 | 95.42 |
|   person   |  93.2 |  95.7 |
+------------+-------+-------+
2023/05/17 21:51:38 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.6000  mIoU: 91.0600  mAcc: 95.5600  data_time: 0.0705  time: 0.0808
2023/05/17 21:51:43 - mmengine - INFO - Iter(train) [ 3200/12000]  lr: 6.9738e-03  eta: 0:10:08  time: 0.0671  data_time: 0.0084  memory: 1126  loss: 0.2127  decode.loss_ce: 0.2127  decode.acc_seg: 85.3715
2023/05/17 21:51:56 - mmengine - INFO - per class results:
2023/05/17 21:51:56 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  90.2 | 93.98 |
|   person   | 94.22 | 97.55 |
+------------+-------+-------+
2023/05/17 21:51:56 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.2300  mIoU: 92.2100  mAcc: 95.7600  data_time: 0.0683  time: 0.0778
2023/05/17 21:51:56 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/spag/best_aAcc_iter_2160.pth is removed
2023/05/17 21:51:56 - mmengine - INFO - The best checkpoint with 96.2300 aAcc at 3360 iter is saved to best_aAcc_iter_3360.pth.
2023/05/17 21:51:59 - mmengine - INFO - Iter(train) [ 3400/12000]  lr: 6.7601e-03  eta: 0:09:56  time: 0.0667  data_time: 0.0081  memory: 1126  loss: 0.1860  decode.loss_ce: 0.1860  decode.acc_seg: 95.5908
2023/05/17 21:52:13 - mmengine - INFO - Iter(train) [ 3600/12000]  lr: 6.5457e-03  eta: 0:09:41  time: 0.0657  data_time: 0.0090  memory: 1126  loss: 0.1658  decode.loss_ce: 0.1658  decode.acc_seg: 90.9727
2023/05/17 21:52:14 - mmengine - INFO - per class results:
2023/05/17 21:52:14 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 90.99 | 95.11 |
|   person   | 94.63 | 97.35 |
+------------+-------+-------+
2023/05/17 21:52:14 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.5200  mIoU: 92.8100  mAcc: 96.2300  data_time: 0.0536  time: 0.0629
2023/05/17 21:52:14 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/spag/best_aAcc_iter_3360.pth is removed
2023/05/17 21:52:15 - mmengine - INFO - The best checkpoint with 96.5200 aAcc at 3600 iter is saved to best_aAcc_iter_3600.pth.
2023/05/17 21:52:28 - mmengine - INFO - Iter(train) [ 3800/12000]  lr: 6.3304e-03  eta: 0:09:28  time: 0.0691  data_time: 0.0085  memory: 1126  loss: 0.1702  decode.loss_ce: 0.1702  decode.acc_seg: 89.4428
2023/05/17 21:52:33 - mmengine - INFO - per class results:
2023/05/17 21:52:33 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.24 | 95.08 |
|   person   |  94.8 | 97.53 |
+------------+-------+-------+
2023/05/17 21:52:33 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.6200  mIoU: 93.0200  mAcc: 96.3100  data_time: 0.0658  time: 0.0749
2023/05/17 21:52:33 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/spag/best_aAcc_iter_3600.pth is removed
2023/05/17 21:52:33 - mmengine - INFO - The best checkpoint with 96.6200 aAcc at 3840 iter is saved to best_aAcc_iter_3840.pth.
2023/05/17 21:52:44 - mmengine - INFO - Exp name: mv3+pappm+cus_20230517_214730
2023/05/17 21:52:44 - mmengine - INFO - Iter(train) [ 4000/12000]  lr: 6.1143e-03  eta: 0:09:15  time: 0.0679  data_time: 0.0083  memory: 1126  loss: 0.2264  decode.loss_ce: 0.2264  decode.acc_seg: 94.7662
2023/05/17 21:52:51 - mmengine - INFO - per class results:
2023/05/17 21:52:51 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.08 | 94.58 |
|   person   | 94.73 | 97.75 |
+------------+-------+-------+
2023/05/17 21:52:51 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.5800  mIoU: 92.9100  mAcc: 96.1600  data_time: 0.0775  time: 0.0880
2023/05/17 21:52:59 - mmengine - INFO - Iter(train) [ 4200/12000]  lr: 5.8974e-03  eta: 0:09:01  time: 0.0671  data_time: 0.0090  memory: 1126  loss: 0.1947  decode.loss_ce: 0.1947  decode.acc_seg: 96.1826
2023/05/17 21:53:09 - mmengine - INFO - per class results:
2023/05/17 21:53:09 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 90.71 | 95.73 |
|   person   | 94.39 | 96.76 |
+------------+-------+-------+
2023/05/17 21:53:09 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.3800  mIoU: 92.5500  mAcc: 96.2400  data_time: 0.0602  time: 0.0860
2023/05/17 21:53:15 - mmengine - INFO - Iter(train) [ 4400/12000]  lr: 5.6795e-03  eta: 0:08:47  time: 0.0640  data_time: 0.0085  memory: 1126  loss: 0.1555  decode.loss_ce: 0.1555  decode.acc_seg: 94.6845
2023/05/17 21:53:27 - mmengine - INFO - per class results:
2023/05/17 21:53:27 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.94 | 95.71 |
|   person   |  95.2 | 97.59 |
+------------+-------+-------+
2023/05/17 21:53:27 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.9000  mIoU: 93.5700  mAcc: 96.6500  data_time: 0.0694  time: 0.0801
2023/05/17 21:53:27 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/spag/best_aAcc_iter_3840.pth is removed
2023/05/17 21:53:28 - mmengine - INFO - The best checkpoint with 96.9000 aAcc at 4560 iter is saved to best_aAcc_iter_4560.pth.
2023/05/17 21:53:30 - mmengine - INFO - Iter(train) [ 4600/12000]  lr: 5.4607e-03  eta: 0:08:34  time: 0.0666  data_time: 0.0085  memory: 1126  loss: 0.1794  decode.loss_ce: 0.1794  decode.acc_seg: 92.1708
2023/05/17 21:53:44 - mmengine - INFO - Iter(train) [ 4800/12000]  lr: 5.2409e-03  eta: 0:08:19  time: 0.0690  data_time: 0.0077  memory: 1126  loss: 0.2290  decode.loss_ce: 0.2290  decode.acc_seg: 93.9685
2023/05/17 21:53:44 - mmengine - INFO - Saving checkpoint at 4800 iterations
2023/05/17 21:53:46 - mmengine - INFO - per class results:
2023/05/17 21:53:46 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.25 | 96.27 |
|   person   |  94.7 | 96.78 |
+------------+-------+-------+
2023/05/17 21:53:46 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.5900  mIoU: 92.9800  mAcc: 96.5200  data_time: 0.0759  time: 0.0843
2023/05/17 21:54:00 - mmengine - INFO - Exp name: mv3+pappm+cus_20230517_214730
2023/05/17 21:54:00 - mmengine - INFO - Iter(train) [ 5000/12000]  lr: 5.0200e-03  eta: 0:08:05  time: 0.0700  data_time: 0.0082  memory: 1126  loss: 0.1480  decode.loss_ce: 0.1480  decode.acc_seg: 91.2620
2023/05/17 21:54:04 - mmengine - INFO - per class results:
2023/05/17 21:54:04 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.01 | 95.38 |
|   person   | 95.27 | 97.85 |
+------------+-------+-------+
2023/05/17 21:54:04 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.9400  mIoU: 93.6400  mAcc: 96.6100  data_time: 0.0690  time: 0.0786
2023/05/17 21:54:04 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/spag/best_aAcc_iter_4560.pth is removed
2023/05/17 21:54:05 - mmengine - INFO - The best checkpoint with 96.9400 aAcc at 5040 iter is saved to best_aAcc_iter_5040.pth.
2023/05/17 21:54:15 - mmengine - INFO - Iter(train) [ 5200/12000]  lr: 4.7981e-03  eta: 0:07:51  time: 0.0683  data_time: 0.0087  memory: 1126  loss: 0.1384  decode.loss_ce: 0.1384  decode.acc_seg: 96.0808
2023/05/17 21:54:23 - mmengine - INFO - per class results:
2023/05/17 21:54:23 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  91.9 | 94.93 |
|   person   | 95.24 | 98.07 |
+------------+-------+-------+
2023/05/17 21:54:23 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.9100  mIoU: 93.5700  mAcc: 96.5000  data_time: 0.0578  time: 0.0784
2023/05/17 21:54:31 - mmengine - INFO - Iter(train) [ 5400/12000]  lr: 4.5749e-03  eta: 0:07:37  time: 0.0683  data_time: 0.0102  memory: 1126  loss: 0.1723  decode.loss_ce: 0.1723  decode.acc_seg: 95.8454
2023/05/17 21:54:40 - mmengine - INFO - per class results:
2023/05/17 21:54:40 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  92.3 | 95.61 |
|   person   | 95.44 |  97.9 |
+------------+-------+-------+
2023/05/17 21:54:40 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0500  mIoU: 93.8700  mAcc: 96.7500  data_time: 0.0692  time: 0.0786
2023/05/17 21:54:40 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/spag/best_aAcc_iter_5040.pth is removed
2023/05/17 21:54:41 - mmengine - INFO - The best checkpoint with 97.0500 aAcc at 5520 iter is saved to best_aAcc_iter_5520.pth.
2023/05/17 21:54:46 - mmengine - INFO - Iter(train) [ 5600/12000]  lr: 4.3505e-03  eta: 0:07:24  time: 0.0685  data_time: 0.0109  memory: 1126  loss: 0.1791  decode.loss_ce: 0.1791  decode.acc_seg: 90.5038
2023/05/17 21:54:59 - mmengine - INFO - per class results:
2023/05/17 21:54:59 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.61 | 95.53 |
|   person   |  95.0 | 97.49 |
+------------+-------+-------+
2023/05/17 21:54:59 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.7700  mIoU: 93.3100  mAcc: 96.5100  data_time: 0.0720  time: 0.0815
2023/05/17 21:55:01 - mmengine - INFO - Iter(train) [ 5800/12000]  lr: 4.1248e-03  eta: 0:07:09  time: 0.0665  data_time: 0.0088  memory: 1126  loss: 0.2091  decode.loss_ce: 0.2091  decode.acc_seg: 88.9436
2023/05/17 21:55:15 - mmengine - INFO - Exp name: mv3+pappm+cus_20230517_214730
2023/05/17 21:55:15 - mmengine - INFO - Iter(train) [ 6000/12000]  lr: 3.8977e-03  eta: 0:06:55  time: 0.0682  data_time: 0.0089  memory: 1126  loss: 0.1281  decode.loss_ce: 0.1281  decode.acc_seg: 94.6344
2023/05/17 21:55:16 - mmengine - INFO - per class results:
2023/05/17 21:55:16 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.52 |  95.6 |
|   person   | 95.58 | 98.04 |
+------------+-------+-------+
2023/05/17 21:55:16 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.1400  mIoU: 94.0500  mAcc: 96.8200  data_time: 0.0533  time: 0.0753
2023/05/17 21:55:16 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/spag/best_aAcc_iter_5520.pth is removed
2023/05/17 21:55:17 - mmengine - INFO - The best checkpoint with 97.1400 aAcc at 6000 iter is saved to best_aAcc_iter_6000.pth.
2023/05/17 21:55:31 - mmengine - INFO - Iter(train) [ 6200/12000]  lr: 3.6691e-03  eta: 0:06:42  time: 0.0655  data_time: 0.0081  memory: 1126  loss: 0.1384  decode.loss_ce: 0.1384  decode.acc_seg: 91.7615
2023/05/17 21:55:35 - mmengine - INFO - per class results:
2023/05/17 21:55:35 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.67 |  95.6 |
|   person   | 95.03 | 97.49 |
+------------+-------+-------+
2023/05/17 21:55:35 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.7900  mIoU: 93.3500  mAcc: 96.5400  data_time: 0.0681  time: 0.0776
2023/05/17 21:55:46 - mmengine - INFO - Iter(train) [ 6400/12000]  lr: 3.4388e-03  eta: 0:06:28  time: 0.0666  data_time: 0.0078  memory: 1126  loss: 0.1476  decode.loss_ce: 0.1476  decode.acc_seg: 88.9207
2023/05/17 21:55:53 - mmengine - INFO - per class results:
2023/05/17 21:55:53 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.78 | 96.17 |
|   person   | 95.06 |  97.2 |
+------------+-------+-------+
2023/05/17 21:55:53 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.8200  mIoU: 93.4200  mAcc: 96.6800  data_time: 0.0699  time: 0.0804
2023/05/17 21:56:01 - mmengine - INFO - Iter(train) [ 6600/12000]  lr: 3.2067e-03  eta: 0:06:14  time: 0.0660  data_time: 0.0086  memory: 1126  loss: 0.1769  decode.loss_ce: 0.1769  decode.acc_seg: 90.2885
2023/05/17 21:56:11 - mmengine - INFO - per class results:
2023/05/17 21:56:11 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.09 | 96.09 |
|   person   | 95.27 | 97.45 |
+------------+-------+-------+
2023/05/17 21:56:11 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.9500  mIoU: 93.6800  mAcc: 96.7700  data_time: 0.0543  time: 0.0637
2023/05/17 21:56:16 - mmengine - INFO - Iter(train) [ 6800/12000]  lr: 2.9727e-03  eta: 0:06:00  time: 0.0693  data_time: 0.0088  memory: 1126  loss: 0.1895  decode.loss_ce: 0.1895  decode.acc_seg: 87.7912
2023/05/17 21:56:28 - mmengine - INFO - per class results:
2023/05/17 21:56:28 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  92.4 | 95.98 |
|   person   | 95.48 | 97.72 |
+------------+-------+-------+
2023/05/17 21:56:28 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0800  mIoU: 93.9400  mAcc: 96.8500  data_time: 0.0742  time: 0.0831
2023/05/17 21:56:31 - mmengine - INFO - Exp name: mv3+pappm+cus_20230517_214730
2023/05/17 21:56:31 - mmengine - INFO - Iter(train) [ 7000/12000]  lr: 2.7366e-03  eta: 0:05:46  time: 0.0696  data_time: 0.0106  memory: 1126  loss: 0.1568  decode.loss_ce: 0.1568  decode.acc_seg: 97.0134
2023/05/17 21:56:44 - mmengine - INFO - Iter(train) [ 7200/12000]  lr: 2.4980e-03  eta: 0:05:32  time: 0.0686  data_time: 0.0088  memory: 1126  loss: 0.1805  decode.loss_ce: 0.1805  decode.acc_seg: 96.9182
2023/05/17 21:56:44 - mmengine - INFO - Saving checkpoint at 7200 iterations
2023/05/17 21:56:47 - mmengine - INFO - per class results:
2023/05/17 21:56:47 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  92.3 | 95.74 |
|   person   | 95.43 | 97.81 |
+------------+-------+-------+
2023/05/17 21:56:47 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0500  mIoU: 93.8600  mAcc: 96.7800  data_time: 0.0469  time: 0.0681
2023/05/17 21:57:00 - mmengine - INFO - Iter(train) [ 7400/12000]  lr: 2.2569e-03  eta: 0:05:18  time: 0.0674  data_time: 0.0086  memory: 1126  loss: 0.1599  decode.loss_ce: 0.1599  decode.acc_seg: 89.9983
2023/05/17 21:57:05 - mmengine - INFO - per class results:
2023/05/17 21:57:05 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.52 | 95.76 |
|   person   | 95.57 | 97.95 |
+------------+-------+-------+
2023/05/17 21:57:05 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.1400  mIoU: 94.0500  mAcc: 96.8500  data_time: 0.0696  time: 0.0789
2023/05/17 21:57:16 - mmengine - INFO - Iter(train) [ 7600/12000]  lr: 2.0126e-03  eta: 0:05:04  time: 0.0686  data_time: 0.0081  memory: 1126  loss: 0.1347  decode.loss_ce: 0.1347  decode.acc_seg: 96.9825
2023/05/17 21:57:22 - mmengine - INFO - per class results:
2023/05/17 21:57:22 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  92.8 | 95.41 |
|   person   | 95.77 | 98.35 |
+------------+-------+-------+
2023/05/17 21:57:22 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2600  mIoU: 94.2900  mAcc: 96.8800  data_time: 0.0421  time: 0.0676
2023/05/17 21:57:22 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/spag/best_aAcc_iter_6000.pth is removed
2023/05/17 21:57:23 - mmengine - INFO - The best checkpoint with 97.2600 aAcc at 7680 iter is saved to best_aAcc_iter_7680.pth.
2023/05/17 21:57:31 - mmengine - INFO - Iter(train) [ 7800/12000]  lr: 1.7649e-03  eta: 0:04:50  time: 0.0674  data_time: 0.0094  memory: 1126  loss: 0.1272  decode.loss_ce: 0.1272  decode.acc_seg: 97.3010
2023/05/17 21:57:40 - mmengine - INFO - per class results:
2023/05/17 21:57:40 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.89 | 95.91 |
|   person   | 95.79 | 98.09 |
+------------+-------+-------+
2023/05/17 21:57:40 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2800  mIoU: 94.3400  mAcc: 97.0000  data_time: 0.0409  time: 0.0665
2023/05/17 21:57:40 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/spag/best_aAcc_iter_7680.pth is removed
2023/05/17 21:57:41 - mmengine - INFO - The best checkpoint with 97.2800 aAcc at 7920 iter is saved to best_aAcc_iter_7920.pth.
2023/05/17 21:57:46 - mmengine - INFO - Exp name: mv3+pappm+cus_20230517_214730
2023/05/17 21:57:46 - mmengine - INFO - Iter(train) [ 8000/12000]  lr: 1.5129e-03  eta: 0:04:37  time: 0.0670  data_time: 0.0082  memory: 1126  loss: 0.1539  decode.loss_ce: 0.1539  decode.acc_seg: 96.4764
2023/05/17 21:57:59 - mmengine - INFO - per class results:
2023/05/17 21:57:59 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.48 | 95.78 |
|   person   | 95.54 | 97.91 |
+------------+-------+-------+
2023/05/17 21:57:59 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.1200  mIoU: 94.0100  mAcc: 96.8400  data_time: 0.0544  time: 0.0783
2023/05/17 21:58:01 - mmengine - INFO - Iter(train) [ 8200/12000]  lr: 1.2558e-03  eta: 0:04:23  time: 0.0693  data_time: 0.0083  memory: 1126  loss: 0.1381  decode.loss_ce: 0.1381  decode.acc_seg: 95.9346
2023/05/17 21:58:15 - mmengine - INFO - Iter(train) [ 8400/12000]  lr: 9.9217e-04  eta: 0:04:09  time: 0.0655  data_time: 0.0085  memory: 1126  loss: 0.1539  decode.loss_ce: 0.1539  decode.acc_seg: 91.5489
2023/05/17 21:58:16 - mmengine - INFO - per class results:
2023/05/17 21:58:16 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.86 | 95.73 |
|   person   | 95.79 | 98.18 |
+------------+-------+-------+
2023/05/17 21:58:16 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2800  mIoU: 94.3200  mAcc: 96.9600  data_time: 0.0601  time: 0.0696
2023/05/17 21:58:30 - mmengine - INFO - Iter(train) [ 8600/12000]  lr: 7.1939e-04  eta: 0:03:55  time: 0.0650  data_time: 0.0087  memory: 1126  loss: 0.1364  decode.loss_ce: 0.1364  decode.acc_seg: 93.9333
2023/05/17 21:58:34 - mmengine - INFO - per class results:
2023/05/17 21:58:34 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.49 | 96.21 |
|   person   | 95.52 | 97.64 |
+------------+-------+-------+
2023/05/17 21:58:34 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.1100  mIoU: 94.0000  mAcc: 96.9200  data_time: 0.0559  time: 0.0649
2023/05/17 21:58:45 - mmengine - INFO - Iter(train) [ 8800/12000]  lr: 4.3192e-04  eta: 0:03:41  time: 0.0684  data_time: 0.0101  memory: 1126  loss: 0.1639  decode.loss_ce: 0.1639  decode.acc_seg: 94.6753
2023/05/17 21:58:52 - mmengine - INFO - per class results:
2023/05/17 21:58:52 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  92.7 | 95.81 |
|   person   | 95.68 | 98.03 |
+------------+-------+-------+
2023/05/17 21:58:52 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2100  mIoU: 94.1900  mAcc: 96.9200  data_time: 0.0397  time: 0.0579
2023/05/17 21:59:00 - mmengine - INFO - Exp name: mv3+pappm+cus_20230517_214730
2023/05/17 21:59:00 - mmengine - INFO - Iter(train) [ 9000/12000]  lr: 1.0000e-04  eta: 0:03:27  time: 0.0650  data_time: 0.0087  memory: 1126  loss: 0.1718  decode.loss_ce: 0.1718  decode.acc_seg: 96.4113
2023/05/17 21:59:09 - mmengine - INFO - per class results:
2023/05/17 21:59:09 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.78 | 95.85 |
|   person   | 95.73 | 98.06 |
+------------+-------+-------+
2023/05/17 21:59:09 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2400  mIoU: 94.2500  mAcc: 96.9500  data_time: 0.0558  time: 0.0653
2023/05/17 21:59:15 - mmengine - INFO - Iter(train) [ 9200/12000]  lr: 9.4008e-05  eta: 0:03:13  time: 0.0655  data_time: 0.0084  memory: 1126  loss: 0.1640  decode.loss_ce: 0.1640  decode.acc_seg: 89.8197
2023/05/17 21:59:27 - mmengine - INFO - per class results:
2023/05/17 21:59:27 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.66 | 96.04 |
|   person   | 95.64 | 97.86 |
+------------+-------+-------+
2023/05/17 21:59:27 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.1900  mIoU: 94.1500  mAcc: 96.9500  data_time: 0.0645  time: 0.0734
2023/05/17 21:59:30 - mmengine - INFO - Iter(train) [ 9400/12000]  lr: 8.7942e-05  eta: 0:02:59  time: 0.0686  data_time: 0.0088  memory: 1126  loss: 0.1225  decode.loss_ce: 0.1225  decode.acc_seg: 94.3266
2023/05/17 21:59:43 - mmengine - INFO - Iter(train) [ 9600/12000]  lr: 8.1830e-05  eta: 0:02:45  time: 0.0655  data_time: 0.0087  memory: 1126  loss: 0.1104  decode.loss_ce: 0.1104  decode.acc_seg: 95.3059
2023/05/17 21:59:43 - mmengine - INFO - Saving checkpoint at 9600 iterations
2023/05/17 21:59:46 - mmengine - INFO - per class results:
2023/05/17 21:59:46 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.76 |  95.9 |
|   person   | 95.72 | 98.02 |
+------------+-------+-------+
2023/05/17 21:59:46 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2300  mIoU: 94.2400  mAcc: 96.9600  data_time: 0.0477  time: 0.0733
2023/05/17 21:59:59 - mmengine - INFO - Iter(train) [ 9800/12000]  lr: 7.5666e-05  eta: 0:02:31  time: 0.0667  data_time: 0.0078  memory: 1126  loss: 0.1395  decode.loss_ce: 0.1395  decode.acc_seg: 92.7758
2023/05/17 22:00:03 - mmengine - INFO - per class results:
2023/05/17 22:00:03 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.54 | 96.05 |
|   person   | 95.56 | 97.78 |
+------------+-------+-------+
2023/05/17 22:00:03 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.1400  mIoU: 94.0500  mAcc: 96.9100  data_time: 0.0704  time: 0.0791
2023/05/17 22:00:14 - mmengine - INFO - Exp name: mv3+pappm+cus_20230517_214730
2023/05/17 22:00:14 - mmengine - INFO - Iter(train) [10000/12000]  lr: 6.9446e-05  eta: 0:02:17  time: 0.0668  data_time: 0.0089  memory: 1126  loss: 0.1498  decode.loss_ce: 0.1498  decode.acc_seg: 94.1133
2023/05/17 22:00:21 - mmengine - INFO - per class results:
2023/05/17 22:00:21 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.83 | 96.02 |
|   person   | 95.75 | 97.98 |
+------------+-------+-------+
2023/05/17 22:00:21 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2600  mIoU: 94.2900  mAcc: 97.0000  data_time: 0.0678  time: 0.0769
2023/05/17 22:00:29 - mmengine - INFO - Iter(train) [10200/12000]  lr: 6.3164e-05  eta: 0:02:04  time: 0.0679  data_time: 0.0109  memory: 1126  loss: 0.1248  decode.loss_ce: 0.1248  decode.acc_seg: 96.9830
2023/05/17 22:00:39 - mmengine - INFO - per class results:
2023/05/17 22:00:39 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.65 | 95.99 |
|   person   | 95.64 | 97.89 |
+------------+-------+-------+
2023/05/17 22:00:39 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.1800  mIoU: 94.1400  mAcc: 96.9400  data_time: 0.0572  time: 0.0809
2023/05/17 22:00:44 - mmengine - INFO - Iter(train) [10400/12000]  lr: 5.6811e-05  eta: 0:01:50  time: 0.0653  data_time: 0.0089  memory: 1126  loss: 0.1367  decode.loss_ce: 0.1367  decode.acc_seg: 95.2852
2023/05/17 22:00:57 - mmengine - INFO - per class results:
2023/05/17 22:00:57 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  92.7 | 96.06 |
|   person   | 95.66 | 97.87 |
+------------+-------+-------+
2023/05/17 22:00:57 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2000  mIoU: 94.1800  mAcc: 96.9700  data_time: 0.0716  time: 0.0806
2023/05/17 22:00:59 - mmengine - INFO - Iter(train) [10600/12000]  lr: 5.0377e-05  eta: 0:01:36  time: 0.0674  data_time: 0.0087  memory: 1126  loss: 0.1412  decode.loss_ce: 0.1412  decode.acc_seg: 95.2934
2023/05/17 22:01:13 - mmengine - INFO - Iter(train) [10800/12000]  lr: 4.3851e-05  eta: 0:01:22  time: 0.0661  data_time: 0.0085  memory: 1126  loss: 0.1459  decode.loss_ce: 0.1459  decode.acc_seg: 94.5872
2023/05/17 22:01:15 - mmengine - INFO - per class results:
2023/05/17 22:01:15 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.62 | 96.11 |
|   person   | 95.61 | 97.79 |
+------------+-------+-------+
2023/05/17 22:01:15 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.1700  mIoU: 94.1200  mAcc: 96.9500  data_time: 0.0758  time: 0.0862
2023/05/17 22:01:28 - mmengine - INFO - Exp name: mv3+pappm+cus_20230517_214730
2023/05/17 22:01:28 - mmengine - INFO - Iter(train) [11000/12000]  lr: 3.7215e-05  eta: 0:01:08  time: 0.0673  data_time: 0.0095  memory: 1126  loss: 0.1148  decode.loss_ce: 0.1148  decode.acc_seg: 92.3815
2023/05/17 22:01:32 - mmengine - INFO - per class results:
2023/05/17 22:01:32 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.78 | 96.08 |
|   person   | 95.72 | 97.92 |
+------------+-------+-------+
2023/05/17 22:01:32 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2400  mIoU: 94.2500  mAcc: 97.0000  data_time: 0.0411  time: 0.0603
2023/05/17 22:01:43 - mmengine - INFO - Iter(train) [11200/12000]  lr: 3.0444e-05  eta: 0:00:55  time: 0.0675  data_time: 0.0093  memory: 1126  loss: 0.1495  decode.loss_ce: 0.1495  decode.acc_seg: 96.3554
2023/05/17 22:01:50 - mmengine - INFO - per class results:
2023/05/17 22:01:50 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  92.8 | 95.97 |
|   person   | 95.73 |  98.0 |
+------------+-------+-------+
2023/05/17 22:01:50 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2500  mIoU: 94.2700  mAcc: 96.9800  data_time: 0.0723  time: 0.0829
2023/05/17 22:01:58 - mmengine - INFO - Iter(train) [11400/12000]  lr: 2.3499e-05  eta: 0:00:41  time: 0.0660  data_time: 0.0092  memory: 1126  loss: 0.1627  decode.loss_ce: 0.1627  decode.acc_seg: 90.7134
2023/05/17 22:02:08 - mmengine - INFO - per class results:
2023/05/17 22:02:08 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.77 | 95.81 |
|   person   | 95.72 | 98.07 |
+------------+-------+-------+
2023/05/17 22:02:08 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2400  mIoU: 94.2500  mAcc: 96.9400  data_time: 0.0673  time: 0.0777
2023/05/17 22:02:13 - mmengine - INFO - Iter(train) [11600/12000]  lr: 1.6315e-05  eta: 0:00:27  time: 0.0669  data_time: 0.0087  memory: 1126  loss: 0.1279  decode.loss_ce: 0.1279  decode.acc_seg: 92.8965
2023/05/17 22:02:26 - mmengine - INFO - per class results:
2023/05/17 22:02:26 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.67 | 96.02 |
|   person   | 95.65 | 97.88 |
+------------+-------+-------+
2023/05/17 22:02:26 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.1900  mIoU: 94.1600  mAcc: 96.9500  data_time: 0.0540  time: 0.0784
2023/05/17 22:02:28 - mmengine - INFO - Iter(train) [11800/12000]  lr: 8.7428e-06  eta: 0:00:13  time: 0.0657  data_time: 0.0081  memory: 1126  loss: 0.1352  decode.loss_ce: 0.1352  decode.acc_seg: 94.3191
2023/05/17 22:02:42 - mmengine - INFO - Exp name: mv3+pappm+cus_20230517_214730
2023/05/17 22:02:42 - mmengine - INFO - Iter(train) [12000/12000]  lr: 0.0000e+00  eta: 0:00:00  time: 0.0651  data_time: 0.0088  memory: 1126  loss: 0.1420  decode.loss_ce: 0.1420  decode.acc_seg: 96.5797
2023/05/17 22:02:42 - mmengine - INFO - Saving checkpoint at 12000 iterations
2023/05/17 22:02:44 - mmengine - INFO - per class results:
2023/05/17 22:02:44 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.68 | 96.05 |
|   person   | 95.65 | 97.87 |
+------------+-------+-------+
2023/05/17 22:02:44 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.1900  mIoU: 94.1600  mAcc: 96.9600  data_time: 0.0752  time: 0.0878
