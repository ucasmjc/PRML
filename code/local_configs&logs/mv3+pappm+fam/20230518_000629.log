2023/05/18 00:06:33 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.7 (default, Feb  5 2021, 16:56:08) [GCC 5.4.0 20160609]
    CUDA available: True
    numpy_random_seed: 304
    GPU 0,1,2,3,4,5,6,7,8,9: NVIDIA GeForce RTX 2080 Ti
    CUDA_HOME: /usr/local/cuda-11.3
    NVCC: Cuda compilation tools, release 11.3, V11.3.109
    GCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
    PyTorch: 1.12.1+cu113
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.13.1+cu113
    OpenCV: 4.6.0
    MMEngine: 0.7.2

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 304
    Distributed launcher: pytorch
    Distributed training: True
    GPU number: 4
------------------------------------------------------------

2023/05/18 00:06:33 - mmengine - INFO - Config:
dataset_type = 'PortraitDataset'
data_root = 'data/portrait'
crop_size = (512, 512)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', reduce_zero_label=False),
    dict(
        type='RandomResize',
        scale=(1024, 1024),
        ratio_range=(0.5, 1.5),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', scale=(1024, 512), keep_ratio=True),
    dict(type='LoadAnnotations', reduce_zero_label=False),
    dict(type='PackSegInputs')
]
img_ratios = [0.5, 0.75, 1.0, 1.25, 1.5, 1.75]
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale_factor': 0.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 0.75,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.0,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.25,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.75,
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 0.0,
                        'direction': 'horizontal'
                    }, {
                        'type': 'RandomFlip',
                        'prob': 1.0,
                        'direction': 'horizontal'
                    }], [{
                        'type': 'LoadAnnotations'
                    }], [{
                        'type': 'PackSegInputs'
                    }]])
]
train_dataloader = dict(
    batch_size=6,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='InfiniteSampler', shuffle=True),
    dataset=dict(
        type='PortraitDataset',
        data_root='data/portrait',
        data_prefix=dict(img_path='train/img', seg_map_path='train/ann'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', reduce_zero_label=False),
            dict(
                type='RandomResize',
                scale=(1024, 1024),
                ratio_range=(0.5, 1.5),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs')
        ]))
val_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='PortraitDataset',
        data_root='data/portrait',
        data_prefix=dict(img_path='val/img', seg_map_path='val/ann'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(1024, 512), keep_ratio=True),
            dict(type='LoadAnnotations', reduce_zero_label=False),
            dict(type='PackSegInputs')
        ]))
test_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='PortraitDataset',
        data_root='data/portrait',
        data_prefix=dict(img_path='val/img', seg_map_path='val/ann'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(1024, 512), keep_ratio=True),
            dict(type='LoadAnnotations', reduce_zero_label=False),
            dict(type='PackSegInputs')
        ]))
val_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
test_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(type='TensorboardVisBackend')
]
visualizer = dict(
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='TensorboardVisBackend')
    ],
    name='visualizer')
log_processor = dict(by_epoch=False)
log_level = 'INFO'
load_from = None
resume = False
tta_model = dict(type='SegTTAModel')
work_dir = 'workdirs/sfv1'
norm_cfg = dict(type='BN', requires_grad=True)
data_preprocessor = dict(
    type='SegDataPreProcessor',
    mean=[123.675, 116.28, 103.53],
    std=[58.395, 57.12, 57.375],
    bgr_to_rgb=True,
    pad_val=0,
    seg_pad_val=255,
    size=(512, 512))
model = dict(
    type='EncoderDecoder',
    data_preprocessor=dict(
        type='SegDataPreProcessor',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        bgr_to_rgb=True,
        pad_val=0,
        seg_pad_val=255,
        size=(512, 512)),
    pretrained='open-mmlab://contrib/mobilenet_v3_small',
    backbone=dict(
        type='MobileNetV3',
        arch='small',
        out_indices=(1, 8),
        norm_cfg=dict(type='BN', requires_grad=True)),
    decode_head=dict(
        type='testHead',
        neck=0,
        fuse=6,
        in_channels=(16, 48),
        in_index=(0, 1),
        channels=48,
        input_transform='multiple_select',
        num_classes=2,
        norm_cfg=dict(type='BN', requires_grad=True),
        act_cfg=dict(type='ReLU'),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
iters = 12000
param_scheduler = [
    dict(type='LinearLR', by_epoch=False, start_factor=0.1, begin=0, end=300),
    dict(
        type='PolyLR',
        eta_min=0.0001,
        power=0.9,
        begin=300,
        end=9000,
        by_epoch=False),
    dict(
        type='PolyLR',
        eta_min=0,
        power=0.9,
        begin=9000,
        end=12000,
        by_epoch=False)
]
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005))
train_cfg = dict(type='IterBasedTrainLoop', max_iters=12000, val_interval=240)
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=200, log_metric_by_epoch=False),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook',
        by_epoch=False,
        save_best='auto',
        max_keep_ckpts=2,
        interval=2400),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='SegVisualizationHook', draw=True))
randomness = dict(seed=304)
launcher = 'pytorch'

2023/05/18 00:06:34 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/05/18 00:06:35 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2023/05/18 00:06:36 - mmengine - INFO - load model from: open-mmlab://contrib/mobilenet_v3_small
2023/05/18 00:06:36 - mmengine - INFO - Loads checkpoint by openmmlab backend from path: open-mmlab://contrib/mobilenet_v3_small
2023/05/18 00:06:36 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: layer9.expand_conv.conv.weight, layer9.expand_conv.bn.weight, layer9.expand_conv.bn.bias, layer9.expand_conv.bn.running_mean, layer9.expand_conv.bn.running_var, layer9.expand_conv.bn.num_batches_tracked, layer9.depthwise_conv.conv.weight, layer9.depthwise_conv.bn.weight, layer9.depthwise_conv.bn.bias, layer9.depthwise_conv.bn.running_mean, layer9.depthwise_conv.bn.running_var, layer9.depthwise_conv.bn.num_batches_tracked, layer9.se.conv1.conv.weight, layer9.se.conv1.conv.bias, layer9.se.conv2.conv.weight, layer9.se.conv2.conv.bias, layer9.linear_conv.conv.weight, layer9.linear_conv.bn.weight, layer9.linear_conv.bn.bias, layer9.linear_conv.bn.running_mean, layer9.linear_conv.bn.running_var, layer9.linear_conv.bn.num_batches_tracked, layer10.expand_conv.conv.weight, layer10.expand_conv.bn.weight, layer10.expand_conv.bn.bias, layer10.expand_conv.bn.running_mean, layer10.expand_conv.bn.running_var, layer10.expand_conv.bn.num_batches_tracked, layer10.depthwise_conv.conv.weight, layer10.depthwise_conv.bn.weight, layer10.depthwise_conv.bn.bias, layer10.depthwise_conv.bn.running_mean, layer10.depthwise_conv.bn.running_var, layer10.depthwise_conv.bn.num_batches_tracked, layer10.se.conv1.conv.weight, layer10.se.conv1.conv.bias, layer10.se.conv2.conv.weight, layer10.se.conv2.conv.bias, layer10.linear_conv.conv.weight, layer10.linear_conv.bn.weight, layer10.linear_conv.bn.bias, layer10.linear_conv.bn.running_mean, layer10.linear_conv.bn.running_var, layer10.linear_conv.bn.num_batches_tracked, layer11.expand_conv.conv.weight, layer11.expand_conv.bn.weight, layer11.expand_conv.bn.bias, layer11.expand_conv.bn.running_mean, layer11.expand_conv.bn.running_var, layer11.expand_conv.bn.num_batches_tracked, layer11.depthwise_conv.conv.weight, layer11.depthwise_conv.bn.weight, layer11.depthwise_conv.bn.bias, layer11.depthwise_conv.bn.running_mean, layer11.depthwise_conv.bn.running_var, layer11.depthwise_conv.bn.num_batches_tracked, layer11.se.conv1.conv.weight, layer11.se.conv1.conv.bias, layer11.se.conv2.conv.weight, layer11.se.conv2.conv.bias, layer11.linear_conv.conv.weight, layer11.linear_conv.bn.weight, layer11.linear_conv.bn.bias, layer11.linear_conv.bn.running_mean, layer11.linear_conv.bn.running_var, layer11.linear_conv.bn.num_batches_tracked, layer12.conv.weight, layer12.bn.weight, layer12.bn.bias, layer12.bn.running_mean, layer12.bn.running_var, layer12.bn.num_batches_tracked

Name of parameter - Initialization information

backbone.layer0.conv.weight - torch.Size([16, 3, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer0.bn.weight - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer0.bn.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.depthwise_conv.conv.weight - torch.Size([16, 1, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.depthwise_conv.bn.weight - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.depthwise_conv.bn.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv1.conv.weight - torch.Size([8, 16, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv2.conv.weight - torch.Size([16, 8, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv2.conv.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.linear_conv.conv.weight - torch.Size([16, 16, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.linear_conv.bn.weight - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.linear_conv.bn.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.expand_conv.conv.weight - torch.Size([72, 16, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.expand_conv.bn.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.expand_conv.bn.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.depthwise_conv.conv.weight - torch.Size([72, 1, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.depthwise_conv.bn.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.depthwise_conv.bn.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.linear_conv.conv.weight - torch.Size([24, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.expand_conv.conv.weight - torch.Size([88, 24, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.expand_conv.bn.weight - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.expand_conv.bn.bias - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.depthwise_conv.conv.weight - torch.Size([88, 1, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.depthwise_conv.bn.weight - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.depthwise_conv.bn.bias - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.linear_conv.conv.weight - torch.Size([24, 88, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.expand_conv.conv.weight - torch.Size([96, 24, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.expand_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.expand_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.depthwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.depthwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv1.conv.weight - torch.Size([24, 96, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv2.conv.weight - torch.Size([96, 24, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv2.conv.bias - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.linear_conv.conv.weight - torch.Size([40, 96, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.linear_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.linear_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.expand_conv.conv.weight - torch.Size([240, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.expand_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.expand_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.depthwise_conv.conv.weight - torch.Size([240, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.depthwise_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.depthwise_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv1.conv.weight - torch.Size([64, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv1.conv.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv2.conv.weight - torch.Size([240, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv2.conv.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.linear_conv.conv.weight - torch.Size([40, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.linear_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.linear_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.expand_conv.conv.weight - torch.Size([240, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.expand_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.expand_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.depthwise_conv.conv.weight - torch.Size([240, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.depthwise_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.depthwise_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv1.conv.weight - torch.Size([64, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv1.conv.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv2.conv.weight - torch.Size([240, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv2.conv.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.linear_conv.conv.weight - torch.Size([40, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.linear_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.linear_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.expand_conv.conv.weight - torch.Size([120, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.expand_conv.bn.weight - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.expand_conv.bn.bias - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.depthwise_conv.conv.weight - torch.Size([120, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.depthwise_conv.bn.weight - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.depthwise_conv.bn.bias - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv1.conv.weight - torch.Size([32, 120, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv1.conv.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv2.conv.weight - torch.Size([120, 32, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv2.conv.bias - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.linear_conv.conv.weight - torch.Size([48, 120, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.expand_conv.conv.weight - torch.Size([144, 48, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.expand_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.expand_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.depthwise_conv.conv.weight - torch.Size([144, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.depthwise_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.depthwise_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv1.conv.weight - torch.Size([40, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv1.conv.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv2.conv.weight - torch.Size([144, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv2.conv.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.linear_conv.conv.weight - torch.Size([48, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

decode_head.conv_seg.weight - torch.Size([2, 48, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.fuse4.neck.weight - torch.Size([48, 16, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.down_h.weight - torch.Size([32, 48, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.down_l.weight - torch.Size([32, 48, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.flow_make.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.0.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.0.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.0.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.1.1.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.1.1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.1.1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.2.1.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.2.1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.2.1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.3.1.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.3.1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.3.1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.4.1.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.4.1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.4.1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.processes.conv.weight - torch.Size([96, 24, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.processes.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.processes.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.compression.conv.weight - torch.Size([48, 120, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.compression.bn.weight - torch.Size([120]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.compression.bn.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.shortcut.conv.weight - torch.Size([48, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.shortcut.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.shortcut.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2023/05/18 00:06:36 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/05/18 00:06:36 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/05/18 00:06:36 - mmengine - INFO - Checkpoints will be saved to /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/sfv1.
2023/05/18 00:06:52 - mmengine - INFO - Iter(train) [  200/12000]  lr: 6.9900e-03  eta: 0:15:40  time: 0.0683  data_time: 0.0098  memory: 1334  loss: 0.3548  decode.loss_ce: 0.3548  decode.acc_seg: 88.5199
2023/05/18 00:07:02 - mmengine - INFO - per class results:
2023/05/18 00:07:02 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 79.18 | 87.39 |
|   person   | 87.45 | 93.92 |
+------------+-------+-------+
2023/05/18 00:07:02 - mmengine - INFO - Iter(val) [60/60]    aAcc: 91.5100  mIoU: 83.3200  mAcc: 90.6500  data_time: 0.0690  time: 0.1244
2023/05/18 00:07:03 - mmengine - INFO - The best checkpoint with 91.5100 aAcc at 240 iter is saved to best_aAcc_iter_240.pth.
2023/05/18 00:07:09 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_000629
2023/05/18 00:07:14 - mmengine - INFO - Iter(train) [  400/12000]  lr: 9.8985e-03  eta: 0:14:36  time: 0.0681  data_time: 0.0088  memory: 1273  loss: 0.2802  decode.loss_ce: 0.2802  decode.acc_seg: 91.3286
2023/05/18 00:07:21 - mmengine - INFO - per class results:
2023/05/18 00:07:21 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 83.59 | 91.33 |
|   person   | 89.99 | 94.57 |
+------------+-------+-------+
2023/05/18 00:07:21 - mmengine - INFO - Iter(val) [60/60]    aAcc: 93.3700  mIoU: 86.7900  mAcc: 92.9500  data_time: 0.0763  time: 0.0855
2023/05/18 00:07:21 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/sfv1/best_aAcc_iter_240.pth is removed
2023/05/18 00:07:22 - mmengine - INFO - The best checkpoint with 93.3700 aAcc at 480 iter is saved to best_aAcc_iter_480.pth.
2023/05/18 00:07:30 - mmengine - INFO - Iter(train) [  600/12000]  lr: 9.6932e-03  eta: 0:14:06  time: 0.0673  data_time: 0.0091  memory: 1111  loss: 0.2199  decode.loss_ce: 0.2199  decode.acc_seg: 87.7602
2023/05/18 00:07:39 - mmengine - INFO - per class results:
2023/05/18 00:07:39 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 86.26 | 91.61 |
|   person   | 91.85 | 96.36 |
+------------+-------+-------+
2023/05/18 00:07:39 - mmengine - INFO - Iter(val) [60/60]    aAcc: 94.6100  mIoU: 89.0500  mAcc: 93.9900  data_time: 0.0520  time: 0.0627
2023/05/18 00:07:39 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/sfv1/best_aAcc_iter_480.pth is removed
2023/05/18 00:07:40 - mmengine - INFO - The best checkpoint with 94.6100 aAcc at 720 iter is saved to best_aAcc_iter_720.pth.
2023/05/18 00:07:45 - mmengine - INFO - Iter(train) [  800/12000]  lr: 9.4874e-03  eta: 0:13:42  time: 0.0649  data_time: 0.0088  memory: 1111  loss: 0.2332  decode.loss_ce: 0.2332  decode.acc_seg: 91.4449
2023/05/18 00:07:58 - mmengine - INFO - per class results:
2023/05/18 00:07:58 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.58 | 93.87 |
|   person   | 93.15 |  96.5 |
+------------+-------+-------+
2023/05/18 00:07:58 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.5300  mIoU: 90.8600  mAcc: 95.1800  data_time: 0.0778  time: 0.0887
2023/05/18 00:07:58 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/sfv1/best_aAcc_iter_720.pth is removed
2023/05/18 00:07:58 - mmengine - INFO - The best checkpoint with 95.5300 aAcc at 960 iter is saved to best_aAcc_iter_960.pth.
2023/05/18 00:08:01 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_000629
2023/05/18 00:08:01 - mmengine - INFO - Iter(train) [ 1000/12000]  lr: 9.2811e-03  eta: 0:13:21  time: 0.0682  data_time: 0.0080  memory: 1111  loss: 0.2312  decode.loss_ce: 0.2312  decode.acc_seg: 87.4990
2023/05/18 00:08:14 - mmengine - INFO - Iter(train) [ 1200/12000]  lr: 9.0742e-03  eta: 0:12:57  time: 0.0676  data_time: 0.0083  memory: 1110  loss: 0.2807  decode.loss_ce: 0.2807  decode.acc_seg: 78.8152
2023/05/18 00:08:16 - mmengine - INFO - per class results:
2023/05/18 00:08:16 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.72 | 94.29 |
|   person   | 93.87 | 97.01 |
+------------+-------+-------+
2023/05/18 00:08:16 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.0100  mIoU: 91.7900  mAcc: 95.6500  data_time: 0.0698  time: 0.0807
2023/05/18 00:08:16 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/sfv1/best_aAcc_iter_960.pth is removed
2023/05/18 00:08:17 - mmengine - INFO - The best checkpoint with 96.0100 aAcc at 1200 iter is saved to best_aAcc_iter_1200.pth.
2023/05/18 00:08:30 - mmengine - INFO - Iter(train) [ 1400/12000]  lr: 8.8669e-03  eta: 0:12:43  time: 0.0677  data_time: 0.0089  memory: 1111  loss: 0.1813  decode.loss_ce: 0.1813  decode.acc_seg: 91.9985
2023/05/18 00:08:35 - mmengine - INFO - per class results:
2023/05/18 00:08:35 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.21 | 94.93 |
|   person   | 92.77 | 95.53 |
+------------+-------+-------+
2023/05/18 00:08:35 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.3100  mIoU: 90.4900  mAcc: 95.2300  data_time: 0.0746  time: 0.0838
2023/05/18 00:08:46 - mmengine - INFO - Iter(train) [ 1600/12000]  lr: 8.6590e-03  eta: 0:12:24  time: 0.0671  data_time: 0.0090  memory: 1111  loss: 0.1946  decode.loss_ce: 0.1946  decode.acc_seg: 94.0949
2023/05/18 00:08:53 - mmengine - INFO - per class results:
2023/05/18 00:08:53 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 90.55 |  94.1 |
|   person   | 94.44 | 97.71 |
+------------+-------+-------+
2023/05/18 00:08:53 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.3700  mIoU: 92.5000  mAcc: 95.9000  data_time: 0.0637  time: 0.0728
2023/05/18 00:08:53 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/sfv1/best_aAcc_iter_1200.pth is removed
2023/05/18 00:08:53 - mmengine - INFO - The best checkpoint with 96.3700 aAcc at 1680 iter is saved to best_aAcc_iter_1680.pth.
2023/05/18 00:09:01 - mmengine - INFO - Iter(train) [ 1800/12000]  lr: 8.4505e-03  eta: 0:12:09  time: 0.0672  data_time: 0.0084  memory: 1111  loss: 0.2268  decode.loss_ce: 0.2268  decode.acc_seg: 85.5957
2023/05/18 00:09:11 - mmengine - INFO - per class results:
2023/05/18 00:09:11 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.57 | 92.59 |
|   person   | 93.94 | 98.02 |
+------------+-------+-------+
2023/05/18 00:09:11 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.0100  mIoU: 91.7500  mAcc: 95.3100  data_time: 0.0604  time: 0.0854
2023/05/18 00:09:16 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_000629
2023/05/18 00:09:16 - mmengine - INFO - Iter(train) [ 2000/12000]  lr: 8.2414e-03  eta: 0:11:51  time: 0.0651  data_time: 0.0071  memory: 1111  loss: 0.1989  decode.loss_ce: 0.1989  decode.acc_seg: 80.3420
2023/05/18 00:09:29 - mmengine - INFO - per class results:
2023/05/18 00:09:29 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 90.78 |  95.6 |
|   person   | 94.45 | 96.89 |
+------------+-------+-------+
2023/05/18 00:09:29 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.4100  mIoU: 92.6200  mAcc: 96.2400  data_time: 0.0763  time: 0.0851
2023/05/18 00:09:29 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/sfv1/best_aAcc_iter_1680.pth is removed
2023/05/18 00:09:29 - mmengine - INFO - The best checkpoint with 96.4100 aAcc at 2160 iter is saved to best_aAcc_iter_2160.pth.
2023/05/18 00:09:32 - mmengine - INFO - Iter(train) [ 2200/12000]  lr: 8.0318e-03  eta: 0:11:37  time: 0.0682  data_time: 0.0086  memory: 1111  loss: 0.2292  decode.loss_ce: 0.2292  decode.acc_seg: 92.6998
2023/05/18 00:09:46 - mmengine - INFO - Iter(train) [ 2400/12000]  lr: 7.8215e-03  eta: 0:11:20  time: 0.0661  data_time: 0.0094  memory: 1111  loss: 0.1923  decode.loss_ce: 0.1923  decode.acc_seg: 91.5262
2023/05/18 00:09:46 - mmengine - INFO - Saving checkpoint at 2400 iterations
2023/05/18 00:09:48 - mmengine - INFO - per class results:
2023/05/18 00:09:48 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 90.98 |  95.3 |
|   person   | 94.61 | 97.22 |
+------------+-------+-------+
2023/05/18 00:09:48 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.5100  mIoU: 92.8000  mAcc: 96.2600  data_time: 0.0746  time: 0.0843
2023/05/18 00:09:48 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/sfv1/best_aAcc_iter_2160.pth is removed
2023/05/18 00:09:49 - mmengine - INFO - The best checkpoint with 96.5100 aAcc at 2400 iter is saved to best_aAcc_iter_2400.pth.
2023/05/18 00:10:02 - mmengine - INFO - Iter(train) [ 2600/12000]  lr: 7.6106e-03  eta: 0:11:06  time: 0.0678  data_time: 0.0098  memory: 1111  loss: 0.1880  decode.loss_ce: 0.1880  decode.acc_seg: 86.4759
2023/05/18 00:10:07 - mmengine - INFO - per class results:
2023/05/18 00:10:07 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 90.37 |  95.9 |
|   person   | 94.15 | 96.41 |
+------------+-------+-------+
2023/05/18 00:10:07 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.2200  mIoU: 92.2600  mAcc: 96.1600  data_time: 0.0734  time: 0.0827
2023/05/18 00:10:18 - mmengine - INFO - Iter(train) [ 2800/12000]  lr: 7.3990e-03  eta: 0:10:51  time: 0.0718  data_time: 0.0082  memory: 1111  loss: 0.1775  decode.loss_ce: 0.1775  decode.acc_seg: 97.1069
2023/05/18 00:10:25 - mmengine - INFO - per class results:
2023/05/18 00:10:25 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 90.46 | 95.85 |
|   person   | 94.22 | 96.51 |
+------------+-------+-------+
2023/05/18 00:10:25 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.2700  mIoU: 92.3400  mAcc: 96.1800  data_time: 0.0729  time: 0.0825
2023/05/18 00:10:33 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_000629
2023/05/18 00:10:33 - mmengine - INFO - Iter(train) [ 3000/12000]  lr: 7.1868e-03  eta: 0:10:35  time: 0.0653  data_time: 0.0088  memory: 1111  loss: 0.1496  decode.loss_ce: 0.1496  decode.acc_seg: 94.3427
2023/05/18 00:10:42 - mmengine - INFO - per class results:
2023/05/18 00:10:42 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 90.94 | 94.83 |
|   person   | 94.62 | 97.49 |
+------------+-------+-------+
2023/05/18 00:10:42 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.5100  mIoU: 92.7800  mAcc: 96.1600  data_time: 0.0545  time: 0.0641
2023/05/18 00:10:48 - mmengine - INFO - Iter(train) [ 3200/12000]  lr: 6.9738e-03  eta: 0:10:20  time: 0.0679  data_time: 0.0085  memory: 1111  loss: 0.2048  decode.loss_ce: 0.2048  decode.acc_seg: 87.6178
2023/05/18 00:11:00 - mmengine - INFO - per class results:
2023/05/18 00:11:00 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.97 | 95.08 |
|   person   | 95.27 | 98.02 |
+------------+-------+-------+
2023/05/18 00:11:00 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.9300  mIoU: 93.6200  mAcc: 96.5500  data_time: 0.0678  time: 0.0774
2023/05/18 00:11:00 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/sfv1/best_aAcc_iter_2400.pth is removed
2023/05/18 00:11:01 - mmengine - INFO - The best checkpoint with 96.9300 aAcc at 3360 iter is saved to best_aAcc_iter_3360.pth.
2023/05/18 00:11:03 - mmengine - INFO - Iter(train) [ 3400/12000]  lr: 6.7601e-03  eta: 0:10:06  time: 0.0661  data_time: 0.0080  memory: 1111  loss: 0.1766  decode.loss_ce: 0.1766  decode.acc_seg: 95.7795
2023/05/18 00:11:17 - mmengine - INFO - Iter(train) [ 3600/12000]  lr: 6.5457e-03  eta: 0:09:50  time: 0.0718  data_time: 0.0089  memory: 1111  loss: 0.1581  decode.loss_ce: 0.1581  decode.acc_seg: 91.0784
2023/05/18 00:11:18 - mmengine - INFO - per class results:
2023/05/18 00:11:18 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.02 | 95.32 |
|   person   | 95.28 |  97.9 |
+------------+-------+-------+
2023/05/18 00:11:18 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.9400  mIoU: 93.6500  mAcc: 96.6100  data_time: 0.0585  time: 0.0689
2023/05/18 00:11:18 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/sfv1/best_aAcc_iter_3360.pth is removed
2023/05/18 00:11:19 - mmengine - INFO - The best checkpoint with 96.9400 aAcc at 3600 iter is saved to best_aAcc_iter_3600.pth.
2023/05/18 00:11:33 - mmengine - INFO - Iter(train) [ 3800/12000]  lr: 6.3304e-03  eta: 0:09:37  time: 0.0689  data_time: 0.0090  memory: 1111  loss: 0.1674  decode.loss_ce: 0.1674  decode.acc_seg: 91.2806
2023/05/18 00:11:37 - mmengine - INFO - per class results:
2023/05/18 00:11:37 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.63 | 95.23 |
|   person   | 95.68 | 98.35 |
+------------+-------+-------+
2023/05/18 00:11:37 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2000  mIoU: 94.1500  mAcc: 96.7900  data_time: 0.0537  time: 0.0627
2023/05/18 00:11:37 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/sfv1/best_aAcc_iter_3600.pth is removed
2023/05/18 00:11:37 - mmengine - INFO - The best checkpoint with 97.2000 aAcc at 3840 iter is saved to best_aAcc_iter_3840.pth.
2023/05/18 00:11:48 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_000629
2023/05/18 00:11:48 - mmengine - INFO - Iter(train) [ 4000/12000]  lr: 6.1143e-03  eta: 0:09:23  time: 0.0670  data_time: 0.0081  memory: 1111  loss: 0.2052  decode.loss_ce: 0.2052  decode.acc_seg: 94.4438
2023/05/18 00:11:55 - mmengine - INFO - per class results:
2023/05/18 00:11:55 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.86 | 94.45 |
|   person   | 95.25 | 98.35 |
+------------+-------+-------+
2023/05/18 00:11:55 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.9100  mIoU: 93.5500  mAcc: 96.4000  data_time: 0.0387  time: 0.0625
2023/05/18 00:12:03 - mmengine - INFO - Iter(train) [ 4200/12000]  lr: 5.8974e-03  eta: 0:09:08  time: 0.0664  data_time: 0.0089  memory: 1111  loss: 0.1857  decode.loss_ce: 0.1857  decode.acc_seg: 96.4561
2023/05/18 00:12:13 - mmengine - INFO - per class results:
2023/05/18 00:12:13 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.08 | 95.97 |
|   person   | 95.27 | 97.52 |
+------------+-------+-------+
2023/05/18 00:12:13 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.9500  mIoU: 93.6800  mAcc: 96.7500  data_time: 0.0605  time: 0.0850
2023/05/18 00:12:18 - mmengine - INFO - Iter(train) [ 4400/12000]  lr: 5.6795e-03  eta: 0:08:54  time: 0.0685  data_time: 0.0091  memory: 1111  loss: 0.1450  decode.loss_ce: 0.1450  decode.acc_seg: 95.1149
2023/05/18 00:12:31 - mmengine - INFO - per class results:
2023/05/18 00:12:31 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.62 | 95.77 |
|   person   | 95.63 | 98.01 |
+------------+-------+-------+
2023/05/18 00:12:31 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.1800  mIoU: 94.1300  mAcc: 96.8900  data_time: 0.0738  time: 0.0834
2023/05/18 00:12:34 - mmengine - INFO - Iter(train) [ 4600/12000]  lr: 5.4607e-03  eta: 0:08:39  time: 0.0662  data_time: 0.0090  memory: 1111  loss: 0.1833  decode.loss_ce: 0.1833  decode.acc_seg: 94.0040
2023/05/18 00:12:47 - mmengine - INFO - Iter(train) [ 4800/12000]  lr: 5.2409e-03  eta: 0:08:24  time: 0.0668  data_time: 0.0081  memory: 1111  loss: 0.2075  decode.loss_ce: 0.2075  decode.acc_seg: 94.3271
2023/05/18 00:12:47 - mmengine - INFO - Saving checkpoint at 4800 iterations
2023/05/18 00:12:49 - mmengine - INFO - per class results:
2023/05/18 00:12:49 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.81 | 96.17 |
|   person   | 95.73 | 97.88 |
+------------+-------+-------+
2023/05/18 00:12:49 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2500  mIoU: 94.2700  mAcc: 97.0200  data_time: 0.0385  time: 0.0630
2023/05/18 00:12:49 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/sfv1/best_aAcc_iter_3840.pth is removed
2023/05/18 00:12:50 - mmengine - INFO - The best checkpoint with 97.2500 aAcc at 4800 iter is saved to best_aAcc_iter_4800.pth.
2023/05/18 00:13:03 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_000629
2023/05/18 00:13:03 - mmengine - INFO - Iter(train) [ 5000/12000]  lr: 5.0200e-03  eta: 0:08:10  time: 0.0677  data_time: 0.0085  memory: 1111  loss: 0.1433  decode.loss_ce: 0.1433  decode.acc_seg: 92.0513
2023/05/18 00:13:07 - mmengine - INFO - per class results:
2023/05/18 00:13:07 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.31 | 95.82 |
|   person   | 95.43 | 97.77 |
+------------+-------+-------+
2023/05/18 00:13:07 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0500  mIoU: 93.8700  mAcc: 96.8000  data_time: 0.0595  time: 0.0684
2023/05/18 00:13:18 - mmengine - INFO - Iter(train) [ 5200/12000]  lr: 4.7981e-03  eta: 0:07:56  time: 0.0663  data_time: 0.0090  memory: 1111  loss: 0.1254  decode.loss_ce: 0.1254  decode.acc_seg: 96.2639
2023/05/18 00:13:25 - mmengine - INFO - per class results:
2023/05/18 00:13:25 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.85 | 95.61 |
|   person   | 95.79 | 98.26 |
+------------+-------+-------+
2023/05/18 00:13:25 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2800  mIoU: 94.3200  mAcc: 96.9300  data_time: 0.0681  time: 0.0778
2023/05/18 00:13:25 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/sfv1/best_aAcc_iter_4800.pth is removed
2023/05/18 00:13:26 - mmengine - INFO - The best checkpoint with 97.2800 aAcc at 5280 iter is saved to best_aAcc_iter_5280.pth.
2023/05/18 00:13:34 - mmengine - INFO - Iter(train) [ 5400/12000]  lr: 4.5749e-03  eta: 0:07:42  time: 0.0681  data_time: 0.0086  memory: 1111  loss: 0.1566  decode.loss_ce: 0.1566  decode.acc_seg: 95.7575
2023/05/18 00:13:44 - mmengine - INFO - per class results:
2023/05/18 00:13:44 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.75 | 96.08 |
|   person   |  95.7 |  97.9 |
+------------+-------+-------+
2023/05/18 00:13:44 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2300  mIoU: 94.2300  mAcc: 96.9900  data_time: 0.0649  time: 0.0742
2023/05/18 00:13:49 - mmengine - INFO - Iter(train) [ 5600/12000]  lr: 4.3505e-03  eta: 0:07:28  time: 0.0690  data_time: 0.0085  memory: 1111  loss: 0.1677  decode.loss_ce: 0.1677  decode.acc_seg: 90.4928
2023/05/18 00:14:02 - mmengine - INFO - per class results:
2023/05/18 00:14:02 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.32 | 96.15 |
|   person   | 95.42 | 97.57 |
+------------+-------+-------+
2023/05/18 00:14:02 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0400  mIoU: 93.8700  mAcc: 96.8600  data_time: 0.0554  time: 0.0649
2023/05/18 00:14:04 - mmengine - INFO - Iter(train) [ 5800/12000]  lr: 4.1248e-03  eta: 0:07:14  time: 0.0667  data_time: 0.0087  memory: 1111  loss: 0.2097  decode.loss_ce: 0.2097  decode.acc_seg: 91.8626
2023/05/18 00:14:18 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_000629
2023/05/18 00:14:18 - mmengine - INFO - Iter(train) [ 6000/12000]  lr: 3.8977e-03  eta: 0:06:59  time: 0.0685  data_time: 0.0087  memory: 1111  loss: 0.1237  decode.loss_ce: 0.1237  decode.acc_seg: 93.6707
2023/05/18 00:14:20 - mmengine - INFO - per class results:
2023/05/18 00:14:20 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.24 | 95.77 |
|   person   | 96.03 | 98.41 |
+------------+-------+-------+
2023/05/18 00:14:20 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.4300  mIoU: 94.6300  mAcc: 97.0900  data_time: 0.0647  time: 0.0743
2023/05/18 00:14:20 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/sfv1/best_aAcc_iter_5280.pth is removed
2023/05/18 00:14:20 - mmengine - INFO - The best checkpoint with 97.4300 aAcc at 6000 iter is saved to best_aAcc_iter_6000.pth.
2023/05/18 00:14:34 - mmengine - INFO - Iter(train) [ 6200/12000]  lr: 3.6691e-03  eta: 0:06:46  time: 0.0706  data_time: 0.0108  memory: 1111  loss: 0.1346  decode.loss_ce: 0.1346  decode.acc_seg: 92.4830
2023/05/18 00:14:38 - mmengine - INFO - per class results:
2023/05/18 00:14:38 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.41 | 96.02 |
|   person   | 95.48 | 97.71 |
+------------+-------+-------+
2023/05/18 00:14:38 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0900  mIoU: 93.9500  mAcc: 96.8700  data_time: 0.0562  time: 0.0728
2023/05/18 00:14:49 - mmengine - INFO - Iter(train) [ 6400/12000]  lr: 3.4388e-03  eta: 0:06:32  time: 0.0673  data_time: 0.0090  memory: 1111  loss: 0.1441  decode.loss_ce: 0.1441  decode.acc_seg: 90.1406
2023/05/18 00:14:56 - mmengine - INFO - per class results:
2023/05/18 00:14:56 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.87 | 96.39 |
|   person   | 95.75 | 97.78 |
+------------+-------+-------+
2023/05/18 00:14:56 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2700  mIoU: 94.3100  mAcc: 97.0800  data_time: 0.0714  time: 0.0804
2023/05/18 00:15:05 - mmengine - INFO - Iter(train) [ 6600/12000]  lr: 3.2067e-03  eta: 0:06:17  time: 0.0661  data_time: 0.0085  memory: 1111  loss: 0.1711  decode.loss_ce: 0.1711  decode.acc_seg: 91.6627
2023/05/18 00:15:14 - mmengine - INFO - per class results:
2023/05/18 00:15:14 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.15 | 96.12 |
|   person   | 95.95 | 98.13 |
+------------+-------+-------+
2023/05/18 00:15:14 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.3900  mIoU: 94.5500  mAcc: 97.1300  data_time: 0.0667  time: 0.0771
2023/05/18 00:15:20 - mmengine - INFO - Iter(train) [ 6800/12000]  lr: 2.9727e-03  eta: 0:06:03  time: 0.0702  data_time: 0.0088  memory: 1111  loss: 0.1833  decode.loss_ce: 0.1833  decode.acc_seg: 89.7970
2023/05/18 00:15:32 - mmengine - INFO - per class results:
2023/05/18 00:15:32 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.11 | 96.15 |
|   person   | 95.92 | 98.09 |
+------------+-------+-------+
2023/05/18 00:15:32 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.3700  mIoU: 94.5200  mAcc: 97.1200  data_time: 0.0617  time: 0.0876
2023/05/18 00:15:35 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_000629
2023/05/18 00:15:35 - mmengine - INFO - Iter(train) [ 7000/12000]  lr: 2.7366e-03  eta: 0:05:49  time: 0.0667  data_time: 0.0087  memory: 1111  loss: 0.1471  decode.loss_ce: 0.1471  decode.acc_seg: 97.2654
2023/05/18 00:15:48 - mmengine - INFO - Iter(train) [ 7200/12000]  lr: 2.4980e-03  eta: 0:05:35  time: 0.0674  data_time: 0.0084  memory: 1111  loss: 0.1912  decode.loss_ce: 0.1912  decode.acc_seg: 97.5580
2023/05/18 00:15:48 - mmengine - INFO - Saving checkpoint at 7200 iterations
2023/05/18 00:15:51 - mmengine - INFO - per class results:
2023/05/18 00:15:51 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.65 | 96.03 |
|   person   | 95.63 | 97.86 |
+------------+-------+-------+
2023/05/18 00:15:51 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.1800  mIoU: 94.1400  mAcc: 96.9500  data_time: 0.0661  time: 0.0771
2023/05/18 00:16:04 - mmengine - INFO - Iter(train) [ 7400/12000]  lr: 2.2569e-03  eta: 0:05:20  time: 0.0668  data_time: 0.0089  memory: 1111  loss: 0.1602  decode.loss_ce: 0.1602  decode.acc_seg: 90.4982
2023/05/18 00:16:09 - mmengine - INFO - per class results:
2023/05/18 00:16:09 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.26 | 95.71 |
|   person   | 96.04 | 98.46 |
+------------+-------+-------+
2023/05/18 00:16:09 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.4400  mIoU: 94.6500  mAcc: 97.0900  data_time: 0.0753  time: 0.0864
2023/05/18 00:16:09 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/sfv1/best_aAcc_iter_6000.pth is removed
2023/05/18 00:16:09 - mmengine - INFO - The best checkpoint with 97.4400 aAcc at 7440 iter is saved to best_aAcc_iter_7440.pth.
2023/05/18 00:16:20 - mmengine - INFO - Iter(train) [ 7600/12000]  lr: 2.0126e-03  eta: 0:05:07  time: 0.0670  data_time: 0.0079  memory: 1111  loss: 0.1320  decode.loss_ce: 0.1320  decode.acc_seg: 97.3063
2023/05/18 00:16:27 - mmengine - INFO - per class results:
2023/05/18 00:16:27 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  93.4 | 95.75 |
|   person   | 96.13 | 98.52 |
+------------+-------+-------+
2023/05/18 00:16:27 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5000  mIoU: 94.7700  mAcc: 97.1400  data_time: 0.0765  time: 0.0874
2023/05/18 00:16:27 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/sfv1/best_aAcc_iter_7440.pth is removed
2023/05/18 00:16:28 - mmengine - INFO - The best checkpoint with 97.5000 aAcc at 7680 iter is saved to best_aAcc_iter_7680.pth.
2023/05/18 00:16:36 - mmengine - INFO - Iter(train) [ 7800/12000]  lr: 1.7649e-03  eta: 0:04:53  time: 0.0672  data_time: 0.0074  memory: 1111  loss: 0.1290  decode.loss_ce: 0.1290  decode.acc_seg: 96.9288
2023/05/18 00:16:46 - mmengine - INFO - per class results:
2023/05/18 00:16:46 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.51 | 96.27 |
|   person   | 96.16 | 98.27 |
+------------+-------+-------+
2023/05/18 00:16:46 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5300  mIoU: 94.8400  mAcc: 97.2700  data_time: 0.0777  time: 0.0887
2023/05/18 00:16:46 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/sfv1/best_aAcc_iter_7680.pth is removed
2023/05/18 00:16:47 - mmengine - INFO - The best checkpoint with 97.5300 aAcc at 7920 iter is saved to best_aAcc_iter_7920.pth.
2023/05/18 00:16:52 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_000629
2023/05/18 00:16:52 - mmengine - INFO - Iter(train) [ 8000/12000]  lr: 1.5129e-03  eta: 0:04:39  time: 0.0657  data_time: 0.0084  memory: 1111  loss: 0.1477  decode.loss_ce: 0.1477  decode.acc_seg: 96.5267
2023/05/18 00:17:05 - mmengine - INFO - per class results:
2023/05/18 00:17:05 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.12 | 95.83 |
|   person   | 95.95 |  98.3 |
+------------+-------+-------+
2023/05/18 00:17:05 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.3800  mIoU: 94.5400  mAcc: 97.0600  data_time: 0.0736  time: 0.0831
2023/05/18 00:17:08 - mmengine - INFO - Iter(train) [ 8200/12000]  lr: 1.2558e-03  eta: 0:04:25  time: 0.0668  data_time: 0.0082  memory: 1111  loss: 0.1290  decode.loss_ce: 0.1290  decode.acc_seg: 96.0031
2023/05/18 00:17:21 - mmengine - INFO - Iter(train) [ 8400/12000]  lr: 9.9217e-04  eta: 0:04:11  time: 0.0700  data_time: 0.0089  memory: 1111  loss: 0.1487  decode.loss_ce: 0.1487  decode.acc_seg: 92.6420
2023/05/18 00:17:23 - mmengine - INFO - per class results:
2023/05/18 00:17:23 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.43 | 96.05 |
|   person   | 96.13 | 98.35 |
+------------+-------+-------+
2023/05/18 00:17:23 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5000  mIoU: 94.7800  mAcc: 97.2000  data_time: 0.0761  time: 0.0871
2023/05/18 00:17:37 - mmengine - INFO - Iter(train) [ 8600/12000]  lr: 7.1939e-04  eta: 0:03:57  time: 0.0675  data_time: 0.0073  memory: 1111  loss: 0.1275  decode.loss_ce: 0.1275  decode.acc_seg: 95.1190
2023/05/18 00:17:41 - mmengine - INFO - per class results:
2023/05/18 00:17:41 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.17 | 96.47 |
|   person   | 95.94 | 97.92 |
+------------+-------+-------+
2023/05/18 00:17:41 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.3900  mIoU: 94.5600  mAcc: 97.2000  data_time: 0.0716  time: 0.0810
2023/05/18 00:17:52 - mmengine - INFO - Iter(train) [ 8800/12000]  lr: 4.3192e-04  eta: 0:03:43  time: 0.0687  data_time: 0.0092  memory: 1111  loss: 0.1618  decode.loss_ce: 0.1618  decode.acc_seg: 93.4971
2023/05/18 00:17:59 - mmengine - INFO - per class results:
2023/05/18 00:17:59 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.35 | 96.04 |
|   person   | 96.08 | 98.31 |
+------------+-------+-------+
2023/05/18 00:17:59 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.4700  mIoU: 94.7100  mAcc: 97.1700  data_time: 0.0489  time: 0.0584
2023/05/18 00:18:07 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_000629
2023/05/18 00:18:07 - mmengine - INFO - Iter(train) [ 9000/12000]  lr: 1.0000e-04  eta: 0:03:29  time: 0.0664  data_time: 0.0077  memory: 1111  loss: 0.1645  decode.loss_ce: 0.1645  decode.acc_seg: 96.3325
2023/05/18 00:18:17 - mmengine - INFO - per class results:
2023/05/18 00:18:17 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.38 |  96.1 |
|   person   |  96.1 | 98.29 |
+------------+-------+-------+
2023/05/18 00:18:17 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.4800  mIoU: 94.7400  mAcc: 97.2000  data_time: 0.0583  time: 0.0675
2023/05/18 00:18:22 - mmengine - INFO - Iter(train) [ 9200/12000]  lr: 9.4008e-05  eta: 0:03:15  time: 0.0685  data_time: 0.0083  memory: 1111  loss: 0.1554  decode.loss_ce: 0.1554  decode.acc_seg: 90.9007
2023/05/18 00:18:35 - mmengine - INFO - per class results:
2023/05/18 00:18:35 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.23 | 96.26 |
|   person   | 95.99 |  98.1 |
+------------+-------+-------+
2023/05/18 00:18:35 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.4200  mIoU: 94.6100  mAcc: 97.1800  data_time: 0.0740  time: 0.0850
2023/05/18 00:18:38 - mmengine - INFO - Iter(train) [ 9400/12000]  lr: 8.7942e-05  eta: 0:03:01  time: 0.0699  data_time: 0.0097  memory: 1111  loss: 0.1210  decode.loss_ce: 0.1210  decode.acc_seg: 94.0650
2023/05/18 00:18:51 - mmengine - INFO - Iter(train) [ 9600/12000]  lr: 8.1830e-05  eta: 0:02:47  time: 0.0677  data_time: 0.0085  memory: 1111  loss: 0.1089  decode.loss_ce: 0.1089  decode.acc_seg: 95.6641
2023/05/18 00:18:51 - mmengine - INFO - Saving checkpoint at 9600 iterations
2023/05/18 00:18:53 - mmengine - INFO - per class results:
2023/05/18 00:18:53 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.37 | 96.13 |
|   person   | 96.08 | 98.26 |
+------------+-------+-------+
2023/05/18 00:18:53 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.4700  mIoU: 94.7200  mAcc: 97.2000  data_time: 0.0385  time: 0.0564
2023/05/18 00:19:07 - mmengine - INFO - Iter(train) [ 9800/12000]  lr: 7.5666e-05  eta: 0:02:33  time: 0.0684  data_time: 0.0080  memory: 1111  loss: 0.1307  decode.loss_ce: 0.1307  decode.acc_seg: 92.8670
2023/05/18 00:19:11 - mmengine - INFO - per class results:
2023/05/18 00:19:11 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.23 | 96.28 |
|   person   | 95.99 | 98.08 |
+------------+-------+-------+
2023/05/18 00:19:11 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.4200  mIoU: 94.6100  mAcc: 97.1800  data_time: 0.0696  time: 0.0783
2023/05/18 00:19:22 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_000629
2023/05/18 00:19:22 - mmengine - INFO - Iter(train) [10000/12000]  lr: 6.9446e-05  eta: 0:02:19  time: 0.0694  data_time: 0.0094  memory: 1111  loss: 0.1470  decode.loss_ce: 0.1470  decode.acc_seg: 94.2993
2023/05/18 00:19:29 - mmengine - INFO - per class results:
2023/05/18 00:19:29 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.42 | 96.25 |
|   person   | 96.11 | 98.22 |
+------------+-------+-------+
2023/05/18 00:19:29 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.4900  mIoU: 94.7600  mAcc: 97.2400  data_time: 0.0681  time: 0.0779
2023/05/18 00:19:37 - mmengine - INFO - Iter(train) [10200/12000]  lr: 6.3164e-05  eta: 0:02:05  time: 0.0707  data_time: 0.0089  memory: 1111  loss: 0.1252  decode.loss_ce: 0.1252  decode.acc_seg: 96.8998
2023/05/18 00:19:47 - mmengine - INFO - per class results:
2023/05/18 00:19:47 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.33 | 96.26 |
|   person   | 96.05 | 98.16 |
+------------+-------+-------+
2023/05/18 00:19:47 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.4600  mIoU: 94.6900  mAcc: 97.2100  data_time: 0.0534  time: 0.0633
2023/05/18 00:19:52 - mmengine - INFO - Iter(train) [10400/12000]  lr: 5.6811e-05  eta: 0:01:51  time: 0.0686  data_time: 0.0087  memory: 1111  loss: 0.1318  decode.loss_ce: 0.1318  decode.acc_seg: 95.6657
2023/05/18 00:20:05 - mmengine - INFO - per class results:
2023/05/18 00:20:05 - mmengine - INFO - 
+------------+------+-------+
|   Class    | IoU  |  Acc  |
+------------+------+-------+
| background | 93.4 | 96.24 |
|   person   | 96.1 | 98.22 |
+------------+------+-------+
2023/05/18 00:20:05 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.4900  mIoU: 94.7500  mAcc: 97.2300  data_time: 0.0713  time: 0.0824
2023/05/18 00:20:08 - mmengine - INFO - Iter(train) [10600/12000]  lr: 5.0377e-05  eta: 0:01:37  time: 0.0695  data_time: 0.0092  memory: 1111  loss: 0.1351  decode.loss_ce: 0.1351  decode.acc_seg: 95.5167
2023/05/18 00:20:21 - mmengine - INFO - Iter(train) [10800/12000]  lr: 4.3851e-05  eta: 0:01:23  time: 0.0684  data_time: 0.0087  memory: 1111  loss: 0.1409  decode.loss_ce: 0.1409  decode.acc_seg: 96.3362
2023/05/18 00:20:23 - mmengine - INFO - per class results:
2023/05/18 00:20:23 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.32 | 96.35 |
|   person   | 96.04 | 98.09 |
+------------+-------+-------+
2023/05/18 00:20:23 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.4500  mIoU: 94.6800  mAcc: 97.2200  data_time: 0.0726  time: 0.0821
2023/05/18 00:20:37 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_000629
2023/05/18 00:20:37 - mmengine - INFO - Iter(train) [11000/12000]  lr: 3.7215e-05  eta: 0:01:09  time: 0.0667  data_time: 0.0078  memory: 1111  loss: 0.1135  decode.loss_ce: 0.1135  decode.acc_seg: 92.5571
2023/05/18 00:20:41 - mmengine - INFO - per class results:
2023/05/18 00:20:41 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.49 | 96.31 |
|   person   | 96.15 | 98.23 |
+------------+-------+-------+
2023/05/18 00:20:41 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5200  mIoU: 94.8200  mAcc: 97.2700  data_time: 0.0602  time: 0.0862
2023/05/18 00:20:52 - mmengine - INFO - Iter(train) [11200/12000]  lr: 3.0444e-05  eta: 0:00:55  time: 0.0659  data_time: 0.0094  memory: 1111  loss: 0.1525  decode.loss_ce: 0.1525  decode.acc_seg: 95.8924
2023/05/18 00:20:59 - mmengine - INFO - per class results:
2023/05/18 00:20:59 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.46 | 96.23 |
|   person   | 96.14 | 98.26 |
+------------+-------+-------+
2023/05/18 00:20:59 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5100  mIoU: 94.8000  mAcc: 97.2500  data_time: 0.0752  time: 0.0879
2023/05/18 00:21:08 - mmengine - INFO - Iter(train) [11400/12000]  lr: 2.3499e-05  eta: 0:00:41  time: 0.0661  data_time: 0.0085  memory: 1111  loss: 0.1649  decode.loss_ce: 0.1649  decode.acc_seg: 90.5292
2023/05/18 00:21:17 - mmengine - INFO - per class results:
2023/05/18 00:21:17 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.48 | 96.15 |
|   person   | 96.15 | 98.32 |
+------------+-------+-------+
2023/05/18 00:21:17 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5200  mIoU: 94.8200  mAcc: 97.2400  data_time: 0.0721  time: 0.0814
2023/05/18 00:21:23 - mmengine - INFO - Iter(train) [11600/12000]  lr: 1.6315e-05  eta: 0:00:27  time: 0.0672  data_time: 0.0090  memory: 1111  loss: 0.1277  decode.loss_ce: 0.1277  decode.acc_seg: 92.8029
2023/05/18 00:21:35 - mmengine - INFO - per class results:
2023/05/18 00:21:35 - mmengine - INFO - 
+------------+------+-------+
|   Class    | IoU  |  Acc  |
+------------+------+-------+
| background | 93.4 | 96.24 |
|   person   | 96.1 | 98.22 |
+------------+------+-------+
2023/05/18 00:21:35 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.4900  mIoU: 94.7500  mAcc: 97.2300  data_time: 0.0509  time: 0.0612
2023/05/18 00:21:38 - mmengine - INFO - Iter(train) [11800/12000]  lr: 8.7428e-06  eta: 0:00:13  time: 0.0697  data_time: 0.0080  memory: 1111  loss: 0.1273  decode.loss_ce: 0.1273  decode.acc_seg: 95.1060
2023/05/18 00:21:52 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_000629
2023/05/18 00:21:52 - mmengine - INFO - Iter(train) [12000/12000]  lr: 0.0000e+00  eta: 0:00:00  time: 0.0686  data_time: 0.0075  memory: 1111  loss: 0.1400  decode.loss_ce: 0.1400  decode.acc_seg: 96.4690
2023/05/18 00:21:52 - mmengine - INFO - Saving checkpoint at 12000 iterations
2023/05/18 00:21:54 - mmengine - INFO - per class results:
2023/05/18 00:21:54 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.44 | 96.33 |
|   person   | 96.12 | 98.18 |
+------------+-------+-------+
2023/05/18 00:21:54 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5000  mIoU: 94.7800  mAcc: 97.2600  data_time: 0.0391  time: 0.0658
