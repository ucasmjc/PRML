2023/05/18 17:30:57 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.7 (default, Feb  5 2021, 16:56:08) [GCC 5.4.0 20160609]
    CUDA available: True
    numpy_random_seed: 304
    GPU 0,1,2,3,4,5,6,7,8,9: NVIDIA GeForce RTX 2080 Ti
    CUDA_HOME: /usr/local/cuda-11.3
    NVCC: Cuda compilation tools, release 11.3, V11.3.109
    GCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
    PyTorch: 1.12.1+cu113
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.13.1+cu113
    OpenCV: 4.6.0
    MMEngine: 0.7.2

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 304
    Distributed launcher: pytorch
    Distributed training: True
    GPU number: 4
------------------------------------------------------------

2023/05/18 17:30:57 - mmengine - INFO - Config:
dataset_type = 'PortraitDataset'
data_root = 'data/portrait'
crop_size = (512, 512)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', reduce_zero_label=False),
    dict(
        type='RandomResize',
        scale=(1024, 1024),
        ratio_range=(0.5, 1.5),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', scale=(1024, 512), keep_ratio=True),
    dict(type='LoadAnnotations', reduce_zero_label=False),
    dict(type='PackSegInputs')
]
img_ratios = [0.5, 0.75, 1.0, 1.25, 1.5, 1.75]
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale_factor': 0.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 0.75,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.0,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.25,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.75,
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 0.0,
                        'direction': 'horizontal'
                    }, {
                        'type': 'RandomFlip',
                        'prob': 1.0,
                        'direction': 'horizontal'
                    }], [{
                        'type': 'LoadAnnotations'
                    }], [{
                        'type': 'PackSegInputs'
                    }]])
]
train_dataloader = dict(
    batch_size=6,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='InfiniteSampler', shuffle=True),
    dataset=dict(
        type='PortraitDataset',
        data_root='data/portrait',
        data_prefix=dict(img_path='train/img', seg_map_path='train/ann'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', reduce_zero_label=False),
            dict(
                type='RandomResize',
                scale=(1024, 1024),
                ratio_range=(0.5, 1.5),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs')
        ]))
val_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='PortraitDataset',
        data_root='data/portrait',
        data_prefix=dict(img_path='val/img', seg_map_path='val/ann'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(1024, 512), keep_ratio=True),
            dict(type='LoadAnnotations', reduce_zero_label=False),
            dict(type='PackSegInputs')
        ]))
test_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='PortraitDataset',
        data_root='data/portrait',
        data_prefix=dict(img_path='val/img', seg_map_path='val/ann'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(1024, 512), keep_ratio=True),
            dict(type='LoadAnnotations', reduce_zero_label=False),
            dict(type='PackSegInputs')
        ]))
val_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
test_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(type='TensorboardVisBackend')
]
visualizer = dict(
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='TensorboardVisBackend')
    ],
    name='visualizer')
log_processor = dict(by_epoch=False)
log_level = 'INFO'
load_from = None
resume = False
tta_model = dict(type='SegTTAModel')
work_dir = 'workdirs/cusneck'
norm_cfg = dict(type='BN', requires_grad=True)
data_preprocessor = dict(
    type='SegDataPreProcessor',
    mean=[123.675, 116.28, 103.53],
    std=[58.395, 57.12, 57.375],
    bgr_to_rgb=True,
    pad_val=0,
    seg_pad_val=255,
    size=(512, 512))
model = dict(
    type='EncoderDecoder',
    data_preprocessor=dict(
        type='SegDataPreProcessor',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        bgr_to_rgb=True,
        pad_val=0,
        seg_pad_val=255,
        size=(512, 512)),
    pretrained='open-mmlab://contrib/mobilenet_v3_small',
    backbone=dict(
        type='MobileNetV3',
        arch='small',
        out_indices=(1, 8),
        norm_cfg=dict(type='BN', requires_grad=True)),
    decode_head=dict(
        type='testHead',
        neck=3,
        fuse=10,
        in_channels=(16, 48),
        in_index=(0, 1),
        channels=48,
        input_transform='multiple_select',
        num_classes=2,
        norm_cfg=dict(type='BN', requires_grad=True),
        act_cfg=dict(type='ReLU'),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
iters = 12000
param_scheduler = [
    dict(type='LinearLR', by_epoch=False, start_factor=0.1, begin=0, end=300),
    dict(
        type='PolyLR',
        eta_min=0.0001,
        power=0.9,
        begin=300,
        end=9000,
        by_epoch=False),
    dict(
        type='PolyLR',
        eta_min=0,
        power=0.9,
        begin=9000,
        end=12000,
        by_epoch=False)
]
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005))
train_cfg = dict(type='IterBasedTrainLoop', max_iters=12000, val_interval=240)
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=200, log_metric_by_epoch=False),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook',
        by_epoch=False,
        save_best='auto',
        max_keep_ckpts=2,
        interval=2400),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='SegVisualizationHook', draw=True))
randomness = dict(seed=304)
launcher = 'pytorch'

2023/05/18 17:30:58 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/05/18 17:30:59 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2023/05/18 17:31:00 - mmengine - INFO - load model from: open-mmlab://contrib/mobilenet_v3_small
2023/05/18 17:31:00 - mmengine - INFO - Loads checkpoint by openmmlab backend from path: open-mmlab://contrib/mobilenet_v3_small
2023/05/18 17:31:00 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: layer9.expand_conv.conv.weight, layer9.expand_conv.bn.weight, layer9.expand_conv.bn.bias, layer9.expand_conv.bn.running_mean, layer9.expand_conv.bn.running_var, layer9.expand_conv.bn.num_batches_tracked, layer9.depthwise_conv.conv.weight, layer9.depthwise_conv.bn.weight, layer9.depthwise_conv.bn.bias, layer9.depthwise_conv.bn.running_mean, layer9.depthwise_conv.bn.running_var, layer9.depthwise_conv.bn.num_batches_tracked, layer9.se.conv1.conv.weight, layer9.se.conv1.conv.bias, layer9.se.conv2.conv.weight, layer9.se.conv2.conv.bias, layer9.linear_conv.conv.weight, layer9.linear_conv.bn.weight, layer9.linear_conv.bn.bias, layer9.linear_conv.bn.running_mean, layer9.linear_conv.bn.running_var, layer9.linear_conv.bn.num_batches_tracked, layer10.expand_conv.conv.weight, layer10.expand_conv.bn.weight, layer10.expand_conv.bn.bias, layer10.expand_conv.bn.running_mean, layer10.expand_conv.bn.running_var, layer10.expand_conv.bn.num_batches_tracked, layer10.depthwise_conv.conv.weight, layer10.depthwise_conv.bn.weight, layer10.depthwise_conv.bn.bias, layer10.depthwise_conv.bn.running_mean, layer10.depthwise_conv.bn.running_var, layer10.depthwise_conv.bn.num_batches_tracked, layer10.se.conv1.conv.weight, layer10.se.conv1.conv.bias, layer10.se.conv2.conv.weight, layer10.se.conv2.conv.bias, layer10.linear_conv.conv.weight, layer10.linear_conv.bn.weight, layer10.linear_conv.bn.bias, layer10.linear_conv.bn.running_mean, layer10.linear_conv.bn.running_var, layer10.linear_conv.bn.num_batches_tracked, layer11.expand_conv.conv.weight, layer11.expand_conv.bn.weight, layer11.expand_conv.bn.bias, layer11.expand_conv.bn.running_mean, layer11.expand_conv.bn.running_var, layer11.expand_conv.bn.num_batches_tracked, layer11.depthwise_conv.conv.weight, layer11.depthwise_conv.bn.weight, layer11.depthwise_conv.bn.bias, layer11.depthwise_conv.bn.running_mean, layer11.depthwise_conv.bn.running_var, layer11.depthwise_conv.bn.num_batches_tracked, layer11.se.conv1.conv.weight, layer11.se.conv1.conv.bias, layer11.se.conv2.conv.weight, layer11.se.conv2.conv.bias, layer11.linear_conv.conv.weight, layer11.linear_conv.bn.weight, layer11.linear_conv.bn.bias, layer11.linear_conv.bn.running_mean, layer11.linear_conv.bn.running_var, layer11.linear_conv.bn.num_batches_tracked, layer12.conv.weight, layer12.bn.weight, layer12.bn.bias, layer12.bn.running_mean, layer12.bn.running_var, layer12.bn.num_batches_tracked

Name of parameter - Initialization information

backbone.layer0.conv.weight - torch.Size([16, 3, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer0.bn.weight - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer0.bn.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.depthwise_conv.conv.weight - torch.Size([16, 1, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.depthwise_conv.bn.weight - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.depthwise_conv.bn.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv1.conv.weight - torch.Size([8, 16, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv2.conv.weight - torch.Size([16, 8, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv2.conv.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.linear_conv.conv.weight - torch.Size([16, 16, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.linear_conv.bn.weight - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.linear_conv.bn.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.expand_conv.conv.weight - torch.Size([72, 16, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.expand_conv.bn.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.expand_conv.bn.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.depthwise_conv.conv.weight - torch.Size([72, 1, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.depthwise_conv.bn.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.depthwise_conv.bn.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.linear_conv.conv.weight - torch.Size([24, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.expand_conv.conv.weight - torch.Size([88, 24, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.expand_conv.bn.weight - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.expand_conv.bn.bias - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.depthwise_conv.conv.weight - torch.Size([88, 1, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.depthwise_conv.bn.weight - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.depthwise_conv.bn.bias - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.linear_conv.conv.weight - torch.Size([24, 88, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.expand_conv.conv.weight - torch.Size([96, 24, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.expand_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.expand_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.depthwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.depthwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv1.conv.weight - torch.Size([24, 96, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv2.conv.weight - torch.Size([96, 24, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv2.conv.bias - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.linear_conv.conv.weight - torch.Size([40, 96, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.linear_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.linear_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.expand_conv.conv.weight - torch.Size([240, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.expand_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.expand_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.depthwise_conv.conv.weight - torch.Size([240, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.depthwise_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.depthwise_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv1.conv.weight - torch.Size([64, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv1.conv.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv2.conv.weight - torch.Size([240, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv2.conv.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.linear_conv.conv.weight - torch.Size([40, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.linear_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.linear_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.expand_conv.conv.weight - torch.Size([240, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.expand_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.expand_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.depthwise_conv.conv.weight - torch.Size([240, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.depthwise_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.depthwise_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv1.conv.weight - torch.Size([64, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv1.conv.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv2.conv.weight - torch.Size([240, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv2.conv.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.linear_conv.conv.weight - torch.Size([40, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.linear_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.linear_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.expand_conv.conv.weight - torch.Size([120, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.expand_conv.bn.weight - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.expand_conv.bn.bias - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.depthwise_conv.conv.weight - torch.Size([120, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.depthwise_conv.bn.weight - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.depthwise_conv.bn.bias - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv1.conv.weight - torch.Size([32, 120, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv1.conv.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv2.conv.weight - torch.Size([120, 32, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv2.conv.bias - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.linear_conv.conv.weight - torch.Size([48, 120, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.expand_conv.conv.weight - torch.Size([144, 48, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.expand_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.expand_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.depthwise_conv.conv.weight - torch.Size([144, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.depthwise_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.depthwise_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv1.conv.weight - torch.Size([40, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv1.conv.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv2.conv.weight - torch.Size([144, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv2.conv.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.linear_conv.conv.weight - torch.Size([48, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

decode_head.conv_seg.weight - torch.Size([2, 48, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.fuse4.neck.weight - torch.Size([48, 16, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.down_h.weight - torch.Size([32, 48, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.down_l.weight - torch.Size([32, 48, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.flow_make.weight - torch.Size([4, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.flow_gate.0.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.se.conv1.conv.weight - torch.Size([8, 48, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.se.conv1.conv.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.se.conv2.conv.weight - torch.Size([48, 8, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.se.conv2.conv.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.0.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.0.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.0.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.1.1.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.1.1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.1.1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.2.1.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.2.1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.2.1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.3.1.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.3.1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.3.1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.4.1.conv.weight - torch.Size([24, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.scales.4.1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.scales.4.1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.processes.conv.weight - torch.Size([96, 24, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.processes.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.processes.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.compression.conv.weight - torch.Size([48, 120, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.compression.bn.weight - torch.Size([120]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.compression.bn.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.shortcut.conv.weight - torch.Size([48, 48, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.neck.shortcut.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.shortcut.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2023/05/18 17:31:00 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/05/18 17:31:00 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/05/18 17:31:00 - mmengine - INFO - Checkpoints will be saved to /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/cusneck.
2023/05/18 17:31:16 - mmengine - INFO - Iter(train) [  200/12000]  lr: 6.9900e-03  eta: 0:16:10  time: 0.0723  data_time: 0.0095  memory: 1330  loss: 0.4061  decode.loss_ce: 0.4061  decode.acc_seg: 81.5231
2023/05/18 17:31:27 - mmengine - INFO - per class results:
2023/05/18 17:31:27 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 75.68 | 84.45 |
|   person   | 85.41 |  93.2 |
+------------+-------+-------+
2023/05/18 17:31:27 - mmengine - INFO - Iter(val) [60/60]    aAcc: 89.9700  mIoU: 80.5500  mAcc: 88.8300  data_time: 0.0711  time: 0.1286
2023/05/18 17:31:28 - mmengine - INFO - The best checkpoint with 89.9700 aAcc at 240 iter is saved to best_aAcc_iter_240.pth.
2023/05/18 17:31:34 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_173053
2023/05/18 17:31:39 - mmengine - INFO - Iter(train) [  400/12000]  lr: 9.8985e-03  eta: 0:15:08  time: 0.0728  data_time: 0.0106  memory: 1273  loss: 0.2953  decode.loss_ce: 0.2953  decode.acc_seg: 88.9591
2023/05/18 17:31:46 - mmengine - INFO - per class results:
2023/05/18 17:31:46 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 84.49 | 92.43 |
|   person   | 90.47 | 94.48 |
+------------+-------+-------+
2023/05/18 17:31:46 - mmengine - INFO - Iter(val) [60/60]    aAcc: 93.7300  mIoU: 87.4800  mAcc: 93.4600  data_time: 0.0537  time: 0.0640
2023/05/18 17:31:46 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/cusneck/best_aAcc_iter_240.pth is removed
2023/05/18 17:31:46 - mmengine - INFO - The best checkpoint with 93.7300 aAcc at 480 iter is saved to best_aAcc_iter_480.pth.
2023/05/18 17:31:55 - mmengine - INFO - Iter(train) [  600/12000]  lr: 9.6932e-03  eta: 0:14:37  time: 0.0699  data_time: 0.0084  memory: 1187  loss: 0.2125  decode.loss_ce: 0.2125  decode.acc_seg: 90.0767
2023/05/18 17:32:05 - mmengine - INFO - per class results:
2023/05/18 17:32:05 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 85.78 | 91.57 |
|   person   | 91.52 | 96.04 |
+------------+-------+-------+
2023/05/18 17:32:05 - mmengine - INFO - Iter(val) [60/60]    aAcc: 94.3900  mIoU: 88.6500  mAcc: 93.8100  data_time: 0.0737  time: 0.0862
2023/05/18 17:32:05 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/cusneck/best_aAcc_iter_480.pth is removed
2023/05/18 17:32:06 - mmengine - INFO - The best checkpoint with 94.3900 aAcc at 720 iter is saved to best_aAcc_iter_720.pth.
2023/05/18 17:32:11 - mmengine - INFO - Iter(train) [  800/12000]  lr: 9.4874e-03  eta: 0:14:11  time: 0.0684  data_time: 0.0087  memory: 1187  loss: 0.2291  decode.loss_ce: 0.2291  decode.acc_seg: 92.0069
2023/05/18 17:32:24 - mmengine - INFO - per class results:
2023/05/18 17:32:24 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.27 | 92.66 |
|   person   | 93.08 | 97.08 |
+------------+-------+-------+
2023/05/18 17:32:24 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.4500  mIoU: 90.6700  mAcc: 94.8700  data_time: 0.0697  time: 0.0816
2023/05/18 17:32:24 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/cusneck/best_aAcc_iter_720.pth is removed
2023/05/18 17:32:25 - mmengine - INFO - The best checkpoint with 95.4500 aAcc at 960 iter is saved to best_aAcc_iter_960.pth.
2023/05/18 17:32:27 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_173053
2023/05/18 17:32:27 - mmengine - INFO - Iter(train) [ 1000/12000]  lr: 9.2811e-03  eta: 0:13:49  time: 0.0704  data_time: 0.0085  memory: 1187  loss: 0.2449  decode.loss_ce: 0.2449  decode.acc_seg: 84.4948
2023/05/18 17:32:42 - mmengine - INFO - Iter(train) [ 1200/12000]  lr: 9.0742e-03  eta: 0:13:24  time: 0.0698  data_time: 0.0098  memory: 1187  loss: 0.2825  decode.loss_ce: 0.2825  decode.acc_seg: 80.8113
2023/05/18 17:32:43 - mmengine - INFO - per class results:
2023/05/18 17:32:43 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.29 | 94.51 |
|   person   | 93.56 | 96.57 |
+------------+-------+-------+
2023/05/18 17:32:43 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.8100  mIoU: 91.4200  mAcc: 95.5400  data_time: 0.0706  time: 0.0810
2023/05/18 17:32:43 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/cusneck/best_aAcc_iter_960.pth is removed
2023/05/18 17:32:44 - mmengine - INFO - The best checkpoint with 95.8100 aAcc at 1200 iter is saved to best_aAcc_iter_1200.pth.
2023/05/18 17:32:58 - mmengine - INFO - Iter(train) [ 1400/12000]  lr: 8.8669e-03  eta: 0:13:08  time: 0.0701  data_time: 0.0096  memory: 1187  loss: 0.1779  decode.loss_ce: 0.1779  decode.acc_seg: 92.6416
2023/05/18 17:33:02 - mmengine - INFO - per class results:
2023/05/18 17:33:02 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.12 | 95.46 |
|   person   | 93.34 | 95.83 |
+------------+-------+-------+
2023/05/18 17:33:02 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.6900  mIoU: 91.2300  mAcc: 95.6400  data_time: 0.0705  time: 0.0810
2023/05/18 17:33:14 - mmengine - INFO - Iter(train) [ 1600/12000]  lr: 8.6590e-03  eta: 0:12:48  time: 0.0688  data_time: 0.0090  memory: 1187  loss: 0.2010  decode.loss_ce: 0.2010  decode.acc_seg: 94.8154
2023/05/18 17:33:21 - mmengine - INFO - per class results:
2023/05/18 17:33:21 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 90.46 | 94.85 |
|   person   |  94.3 | 97.15 |
+------------+-------+-------+
2023/05/18 17:33:21 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.3000  mIoU: 92.3800  mAcc: 96.0000  data_time: 0.0723  time: 0.0831
2023/05/18 17:33:21 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/cusneck/best_aAcc_iter_1200.pth is removed
2023/05/18 17:33:21 - mmengine - INFO - The best checkpoint with 96.3000 aAcc at 1680 iter is saved to best_aAcc_iter_1680.pth.
2023/05/18 17:33:30 - mmengine - INFO - Iter(train) [ 1800/12000]  lr: 8.4505e-03  eta: 0:12:33  time: 0.0691  data_time: 0.0084  memory: 1187  loss: 0.2251  decode.loss_ce: 0.2251  decode.acc_seg: 85.2654
2023/05/18 17:33:40 - mmengine - INFO - per class results:
2023/05/18 17:33:40 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.98 | 93.62 |
|   person   | 93.45 | 96.94 |
+------------+-------+-------+
2023/05/18 17:33:40 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.7100  mIoU: 91.2100  mAcc: 95.2800  data_time: 0.0421  time: 0.0689
2023/05/18 17:33:45 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_173053
2023/05/18 17:33:45 - mmengine - INFO - Iter(train) [ 2000/12000]  lr: 8.2414e-03  eta: 0:12:15  time: 0.0714  data_time: 0.0084  memory: 1187  loss: 0.1830  decode.loss_ce: 0.1830  decode.acc_seg: 80.9368
2023/05/18 17:33:58 - mmengine - INFO - per class results:
2023/05/18 17:33:58 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.48 | 95.58 |
|   person   | 94.91 | 97.37 |
+------------+-------+-------+
2023/05/18 17:33:58 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.7100  mIoU: 93.2000  mAcc: 96.4800  data_time: 0.0722  time: 0.0821
2023/05/18 17:33:58 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/cusneck/best_aAcc_iter_1680.pth is removed
2023/05/18 17:33:59 - mmengine - INFO - The best checkpoint with 96.7100 aAcc at 2160 iter is saved to best_aAcc_iter_2160.pth.
2023/05/18 17:34:02 - mmengine - INFO - Iter(train) [ 2200/12000]  lr: 8.0318e-03  eta: 0:12:00  time: 0.0678  data_time: 0.0074  memory: 1187  loss: 0.2184  decode.loss_ce: 0.2184  decode.acc_seg: 92.8172
2023/05/18 17:34:16 - mmengine - INFO - Iter(train) [ 2400/12000]  lr: 7.8215e-03  eta: 0:11:42  time: 0.0705  data_time: 0.0091  memory: 1187  loss: 0.1893  decode.loss_ce: 0.1893  decode.acc_seg: 90.9213
2023/05/18 17:34:16 - mmengine - INFO - Saving checkpoint at 2400 iterations
2023/05/18 17:34:18 - mmengine - INFO - per class results:
2023/05/18 17:34:18 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 90.76 | 95.45 |
|   person   | 94.45 | 96.97 |
+------------+-------+-------+
2023/05/18 17:34:18 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.4100  mIoU: 92.6000  mAcc: 96.2100  data_time: 0.0762  time: 0.0877
2023/05/18 17:34:32 - mmengine - INFO - Iter(train) [ 2600/12000]  lr: 7.6106e-03  eta: 0:11:26  time: 0.0725  data_time: 0.0085  memory: 1187  loss: 0.1893  decode.loss_ce: 0.1893  decode.acc_seg: 86.5550
2023/05/18 17:34:37 - mmengine - INFO - per class results:
2023/05/18 17:34:37 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.29 | 95.91 |
|   person   | 94.76 | 97.03 |
+------------+-------+-------+
2023/05/18 17:34:37 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.6200  mIoU: 93.0300  mAcc: 96.4700  data_time: 0.0762  time: 0.0881
2023/05/18 17:34:48 - mmengine - INFO - Iter(train) [ 2800/12000]  lr: 7.3990e-03  eta: 0:11:10  time: 0.0687  data_time: 0.0079  memory: 1187  loss: 0.1703  decode.loss_ce: 0.1703  decode.acc_seg: 97.5136
2023/05/18 17:34:55 - mmengine - INFO - per class results:
2023/05/18 17:34:55 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 91.31 | 95.97 |
|   person   | 94.77 | 97.01 |
+------------+-------+-------+
2023/05/18 17:34:55 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.6200  mIoU: 93.0400  mAcc: 96.4900  data_time: 0.0769  time: 0.0870
2023/05/18 17:35:04 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_173053
2023/05/18 17:35:04 - mmengine - INFO - Iter(train) [ 3000/12000]  lr: 7.1868e-03  eta: 0:10:54  time: 0.0711  data_time: 0.0093  memory: 1187  loss: 0.1529  decode.loss_ce: 0.1529  decode.acc_seg: 93.2117
2023/05/18 17:35:13 - mmengine - INFO - per class results:
2023/05/18 17:35:13 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.01 |  95.6 |
|   person   | 95.26 | 97.71 |
+------------+-------+-------+
2023/05/18 17:35:13 - mmengine - INFO - Iter(val) [60/60]    aAcc: 96.9300  mIoU: 93.6400  mAcc: 96.6600  data_time: 0.0534  time: 0.0654
2023/05/18 17:35:13 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/cusneck/best_aAcc_iter_2160.pth is removed
2023/05/18 17:35:14 - mmengine - INFO - The best checkpoint with 96.9300 aAcc at 3120 iter is saved to best_aAcc_iter_3120.pth.
2023/05/18 17:35:20 - mmengine - INFO - Iter(train) [ 3200/12000]  lr: 6.9738e-03  eta: 0:10:40  time: 0.0686  data_time: 0.0079  memory: 1187  loss: 0.1955  decode.loss_ce: 0.1955  decode.acc_seg: 86.9826
2023/05/18 17:35:33 - mmengine - INFO - per class results:
2023/05/18 17:35:33 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.56 | 95.37 |
|   person   | 95.62 | 98.22 |
+------------+-------+-------+
2023/05/18 17:35:33 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.1700  mIoU: 94.0900  mAcc: 96.7900  data_time: 0.0700  time: 0.0801
2023/05/18 17:35:33 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/cusneck/best_aAcc_iter_3120.pth is removed
2023/05/18 17:35:33 - mmengine - INFO - The best checkpoint with 97.1700 aAcc at 3360 iter is saved to best_aAcc_iter_3360.pth.
2023/05/18 17:35:36 - mmengine - INFO - Iter(train) [ 3400/12000]  lr: 6.7601e-03  eta: 0:10:26  time: 0.0705  data_time: 0.0088  memory: 1187  loss: 0.1570  decode.loss_ce: 0.1570  decode.acc_seg: 96.8284
2023/05/18 17:35:50 - mmengine - INFO - Iter(train) [ 3600/12000]  lr: 6.5457e-03  eta: 0:10:10  time: 0.0736  data_time: 0.0086  memory: 1187  loss: 0.1640  decode.loss_ce: 0.1640  decode.acc_seg: 90.7626
2023/05/18 17:35:52 - mmengine - INFO - per class results:
2023/05/18 17:35:52 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.61 | 96.03 |
|   person   | 95.61 | 97.84 |
+------------+-------+-------+
2023/05/18 17:35:52 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.1700  mIoU: 94.1100  mAcc: 96.9300  data_time: 0.0544  time: 0.0649
2023/05/18 17:36:06 - mmengine - INFO - Iter(train) [ 3800/12000]  lr: 6.3304e-03  eta: 0:09:55  time: 0.0708  data_time: 0.0092  memory: 1187  loss: 0.1638  decode.loss_ce: 0.1638  decode.acc_seg: 90.9876
2023/05/18 17:36:10 - mmengine - INFO - per class results:
2023/05/18 17:36:10 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  92.8 | 96.08 |
|   person   | 95.73 | 97.93 |
+------------+-------+-------+
2023/05/18 17:36:10 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2400  mIoU: 94.2600  mAcc: 97.0000  data_time: 0.0718  time: 0.0837
2023/05/18 17:36:10 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/cusneck/best_aAcc_iter_3360.pth is removed
2023/05/18 17:36:11 - mmengine - INFO - The best checkpoint with 97.2400 aAcc at 3840 iter is saved to best_aAcc_iter_3840.pth.
2023/05/18 17:36:22 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_173053
2023/05/18 17:36:22 - mmengine - INFO - Iter(train) [ 4000/12000]  lr: 6.1143e-03  eta: 0:09:41  time: 0.0693  data_time: 0.0075  memory: 1187  loss: 0.2061  decode.loss_ce: 0.2061  decode.acc_seg: 93.1070
2023/05/18 17:36:29 - mmengine - INFO - per class results:
2023/05/18 17:36:29 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.68 | 95.25 |
|   person   | 95.71 | 98.38 |
+------------+-------+-------+
2023/05/18 17:36:29 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2200  mIoU: 94.2000  mAcc: 96.8100  data_time: 0.0532  time: 0.0777
2023/05/18 17:36:38 - mmengine - INFO - Iter(train) [ 4200/12000]  lr: 5.8974e-03  eta: 0:09:26  time: 0.0715  data_time: 0.0087  memory: 1187  loss: 0.1974  decode.loss_ce: 0.1974  decode.acc_seg: 95.5963
2023/05/18 17:36:48 - mmengine - INFO - per class results:
2023/05/18 17:36:48 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.35 | 95.86 |
|   person   | 95.45 | 97.77 |
+------------+-------+-------+
2023/05/18 17:36:48 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.0600  mIoU: 93.9000  mAcc: 96.8200  data_time: 0.0671  time: 0.0775
2023/05/18 17:36:54 - mmengine - INFO - Iter(train) [ 4400/12000]  lr: 5.6795e-03  eta: 0:09:11  time: 0.0695  data_time: 0.0089  memory: 1187  loss: 0.1491  decode.loss_ce: 0.1491  decode.acc_seg: 95.2632
2023/05/18 17:37:06 - mmengine - INFO - per class results:
2023/05/18 17:37:06 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.43 | 96.28 |
|   person   | 96.12 | 98.22 |
+------------+-------+-------+
2023/05/18 17:37:06 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5000  mIoU: 94.7700  mAcc: 97.2500  data_time: 0.0632  time: 0.0742
2023/05/18 17:37:06 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/cusneck/best_aAcc_iter_3840.pth is removed
2023/05/18 17:37:07 - mmengine - INFO - The best checkpoint with 97.5000 aAcc at 4560 iter is saved to best_aAcc_iter_4560.pth.
2023/05/18 17:37:10 - mmengine - INFO - Iter(train) [ 4600/12000]  lr: 5.4607e-03  eta: 0:08:57  time: 0.0692  data_time: 0.0087  memory: 1187  loss: 0.1750  decode.loss_ce: 0.1750  decode.acc_seg: 93.6711
2023/05/18 17:37:24 - mmengine - INFO - Iter(train) [ 4800/12000]  lr: 5.2409e-03  eta: 0:08:42  time: 0.0688  data_time: 0.0086  memory: 1187  loss: 0.2078  decode.loss_ce: 0.2078  decode.acc_seg: 92.9165
2023/05/18 17:37:24 - mmengine - INFO - Saving checkpoint at 4800 iterations
2023/05/18 17:37:27 - mmengine - INFO - per class results:
2023/05/18 17:37:27 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.23 | 96.33 |
|   person   | 95.98 | 98.05 |
+------------+-------+-------+
2023/05/18 17:37:27 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.4100  mIoU: 94.6100  mAcc: 97.1900  data_time: 0.0674  time: 0.0794
2023/05/18 17:37:41 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_173053
2023/05/18 17:37:41 - mmengine - INFO - Iter(train) [ 5000/12000]  lr: 5.0200e-03  eta: 0:08:26  time: 0.0697  data_time: 0.0080  memory: 1187  loss: 0.1372  decode.loss_ce: 0.1372  decode.acc_seg: 91.6657
2023/05/18 17:37:45 - mmengine - INFO - per class results:
2023/05/18 17:37:45 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.23 |  96.3 |
|   person   | 95.99 | 98.07 |
+------------+-------+-------+
2023/05/18 17:37:45 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.4200  mIoU: 94.6100  mAcc: 97.1900  data_time: 0.0583  time: 0.0858
2023/05/18 17:37:56 - mmengine - INFO - Iter(train) [ 5200/12000]  lr: 4.7981e-03  eta: 0:08:12  time: 0.0687  data_time: 0.0086  memory: 1187  loss: 0.1222  decode.loss_ce: 0.1222  decode.acc_seg: 97.0675
2023/05/18 17:38:04 - mmengine - INFO - per class results:
2023/05/18 17:38:04 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 92.67 | 95.81 |
|   person   | 95.66 | 98.01 |
+------------+-------+-------+
2023/05/18 17:38:04 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.2000  mIoU: 94.1700  mAcc: 96.9100  data_time: 0.0753  time: 0.0861
2023/05/18 17:38:12 - mmengine - INFO - Iter(train) [ 5400/12000]  lr: 4.5749e-03  eta: 0:07:57  time: 0.0699  data_time: 0.0085  memory: 1187  loss: 0.1631  decode.loss_ce: 0.1631  decode.acc_seg: 95.3210
2023/05/18 17:38:22 - mmengine - INFO - per class results:
2023/05/18 17:38:22 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.03 | 96.22 |
|   person   | 95.87 | 97.99 |
+------------+-------+-------+
2023/05/18 17:38:22 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.3400  mIoU: 94.4500  mAcc: 97.1100  data_time: 0.0742  time: 0.0861
2023/05/18 17:38:28 - mmengine - INFO - Iter(train) [ 5600/12000]  lr: 4.3505e-03  eta: 0:07:42  time: 0.0736  data_time: 0.0078  memory: 1187  loss: 0.1718  decode.loss_ce: 0.1718  decode.acc_seg: 89.3212
2023/05/18 17:38:41 - mmengine - INFO - per class results:
2023/05/18 17:38:41 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.08 | 96.24 |
|   person   | 95.89 | 98.01 |
+------------+-------+-------+
2023/05/18 17:38:41 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.3500  mIoU: 94.4800  mAcc: 97.1200  data_time: 0.0754  time: 0.0858
2023/05/18 17:38:44 - mmengine - INFO - Iter(train) [ 5800/12000]  lr: 4.1248e-03  eta: 0:07:27  time: 0.0698  data_time: 0.0084  memory: 1187  loss: 0.2017  decode.loss_ce: 0.2017  decode.acc_seg: 90.6856
2023/05/18 17:38:58 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_173053
2023/05/18 17:38:58 - mmengine - INFO - Iter(train) [ 6000/12000]  lr: 3.8977e-03  eta: 0:07:13  time: 0.0691  data_time: 0.0085  memory: 1187  loss: 0.1276  decode.loss_ce: 0.1276  decode.acc_seg: 92.3651
2023/05/18 17:38:59 - mmengine - INFO - per class results:
2023/05/18 17:38:59 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.41 | 95.94 |
|   person   | 96.12 | 98.41 |
+------------+-------+-------+
2023/05/18 17:38:59 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5000  mIoU: 94.7600  mAcc: 97.1700  data_time: 0.0490  time: 0.0596
2023/05/18 17:39:13 - mmengine - INFO - Iter(train) [ 6200/12000]  lr: 3.6691e-03  eta: 0:06:58  time: 0.0676  data_time: 0.0077  memory: 1187  loss: 0.1321  decode.loss_ce: 0.1321  decode.acc_seg: 92.2851
2023/05/18 17:39:18 - mmengine - INFO - per class results:
2023/05/18 17:39:18 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.17 | 96.18 |
|   person   | 95.96 | 98.11 |
+------------+-------+-------+
2023/05/18 17:39:18 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.3900  mIoU: 94.5600  mAcc: 97.1400  data_time: 0.0576  time: 0.0699
2023/05/18 17:39:29 - mmengine - INFO - Iter(train) [ 6400/12000]  lr: 3.4388e-03  eta: 0:06:43  time: 0.0698  data_time: 0.0070  memory: 1187  loss: 0.1381  decode.loss_ce: 0.1381  decode.acc_seg: 91.5634
2023/05/18 17:39:36 - mmengine - INFO - per class results:
2023/05/18 17:39:36 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.11 | 96.49 |
|   person   |  95.9 | 97.87 |
+------------+-------+-------+
2023/05/18 17:39:36 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.3600  mIoU: 94.5000  mAcc: 97.1800  data_time: 0.0548  time: 0.0663
2023/05/18 17:39:45 - mmengine - INFO - Iter(train) [ 6600/12000]  lr: 3.2067e-03  eta: 0:06:29  time: 0.0680  data_time: 0.0087  memory: 1187  loss: 0.1797  decode.loss_ce: 0.1797  decode.acc_seg: 90.4181
2023/05/18 17:39:54 - mmengine - INFO - per class results:
2023/05/18 17:39:54 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.45 | 95.96 |
|   person   | 96.15 | 98.43 |
+------------+-------+-------+
2023/05/18 17:39:54 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5100  mIoU: 94.8000  mAcc: 97.1900  data_time: 0.0406  time: 0.0648
2023/05/18 17:39:54 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/cusneck/best_aAcc_iter_4560.pth is removed
2023/05/18 17:39:55 - mmengine - INFO - The best checkpoint with 97.5100 aAcc at 6720 iter is saved to best_aAcc_iter_6720.pth.
2023/05/18 17:40:01 - mmengine - INFO - Iter(train) [ 6800/12000]  lr: 2.9727e-03  eta: 0:06:14  time: 0.0742  data_time: 0.0094  memory: 1187  loss: 0.1790  decode.loss_ce: 0.1790  decode.acc_seg: 91.1362
2023/05/18 17:40:14 - mmengine - INFO - per class results:
2023/05/18 17:40:14 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.48 | 96.29 |
|   person   | 96.15 | 98.24 |
+------------+-------+-------+
2023/05/18 17:40:14 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5200  mIoU: 94.8100  mAcc: 97.2600  data_time: 0.0763  time: 0.0883
2023/05/18 17:40:14 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/cusneck/best_aAcc_iter_6720.pth is removed
2023/05/18 17:40:14 - mmengine - INFO - The best checkpoint with 97.5200 aAcc at 6960 iter is saved to best_aAcc_iter_6960.pth.
2023/05/18 17:40:17 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_173053
2023/05/18 17:40:17 - mmengine - INFO - Iter(train) [ 7000/12000]  lr: 2.7366e-03  eta: 0:06:00  time: 0.0727  data_time: 0.0088  memory: 1187  loss: 0.1510  decode.loss_ce: 0.1510  decode.acc_seg: 97.1290
2023/05/18 17:40:31 - mmengine - INFO - Iter(train) [ 7200/12000]  lr: 2.4980e-03  eta: 0:05:46  time: 0.0701  data_time: 0.0069  memory: 1187  loss: 0.1950  decode.loss_ce: 0.1950  decode.acc_seg: 96.9818
2023/05/18 17:40:31 - mmengine - INFO - Saving checkpoint at 7200 iterations
2023/05/18 17:40:34 - mmengine - INFO - per class results:
2023/05/18 17:40:34 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.32 | 95.99 |
|   person   | 96.06 | 98.32 |
+------------+-------+-------+
2023/05/18 17:40:34 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.4600  mIoU: 94.6900  mAcc: 97.1600  data_time: 0.0743  time: 0.0847
2023/05/18 17:40:48 - mmengine - INFO - Iter(train) [ 7400/12000]  lr: 2.2569e-03  eta: 0:05:31  time: 0.0710  data_time: 0.0101  memory: 1187  loss: 0.1578  decode.loss_ce: 0.1578  decode.acc_seg: 90.1634
2023/05/18 17:40:52 - mmengine - INFO - per class results:
2023/05/18 17:40:52 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.43 | 96.28 |
|   person   | 96.11 | 98.21 |
+------------+-------+-------+
2023/05/18 17:40:52 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5000  mIoU: 94.7700  mAcc: 97.2500  data_time: 0.0689  time: 0.0813
2023/05/18 17:41:04 - mmengine - INFO - Iter(train) [ 7600/12000]  lr: 2.0126e-03  eta: 0:05:17  time: 0.0709  data_time: 0.0083  memory: 1187  loss: 0.1291  decode.loss_ce: 0.1291  decode.acc_seg: 97.2609
2023/05/18 17:41:11 - mmengine - INFO - per class results:
2023/05/18 17:41:11 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.45 |  96.1 |
|   person   | 96.14 | 98.34 |
+------------+-------+-------+
2023/05/18 17:41:11 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5100  mIoU: 94.7900  mAcc: 97.2200  data_time: 0.0616  time: 0.0907
2023/05/18 17:41:20 - mmengine - INFO - Iter(train) [ 7800/12000]  lr: 1.7649e-03  eta: 0:05:02  time: 0.0698  data_time: 0.0081  memory: 1187  loss: 0.1238  decode.loss_ce: 0.1238  decode.acc_seg: 97.3384
2023/05/18 17:41:30 - mmengine - INFO - per class results:
2023/05/18 17:41:30 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.78 | 96.46 |
|   person   | 96.32 | 98.32 |
+------------+-------+-------+
2023/05/18 17:41:30 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.6300  mIoU: 95.0500  mAcc: 97.3900  data_time: 0.0413  time: 0.0673
2023/05/18 17:41:30 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/cusneck/best_aAcc_iter_6960.pth is removed
2023/05/18 17:41:30 - mmengine - INFO - The best checkpoint with 97.6300 aAcc at 7920 iter is saved to best_aAcc_iter_7920.pth.
2023/05/18 17:41:36 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_173053
2023/05/18 17:41:36 - mmengine - INFO - Iter(train) [ 8000/12000]  lr: 1.5129e-03  eta: 0:04:48  time: 0.0705  data_time: 0.0094  memory: 1187  loss: 0.1446  decode.loss_ce: 0.1446  decode.acc_seg: 96.4106
2023/05/18 17:41:49 - mmengine - INFO - per class results:
2023/05/18 17:41:49 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.59 | 95.99 |
|   person   | 96.23 | 98.49 |
+------------+-------+-------+
2023/05/18 17:41:49 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5700  mIoU: 94.9100  mAcc: 97.2400  data_time: 0.0526  time: 0.0631
2023/05/18 17:41:52 - mmengine - INFO - Iter(train) [ 8200/12000]  lr: 1.2558e-03  eta: 0:04:34  time: 0.0729  data_time: 0.0087  memory: 1187  loss: 0.1249  decode.loss_ce: 0.1249  decode.acc_seg: 94.9419
2023/05/18 17:42:06 - mmengine - INFO - Iter(train) [ 8400/12000]  lr: 9.9217e-04  eta: 0:04:19  time: 0.0716  data_time: 0.0098  memory: 1187  loss: 0.1427  decode.loss_ce: 0.1427  decode.acc_seg: 91.7780
2023/05/18 17:42:08 - mmengine - INFO - per class results:
2023/05/18 17:42:08 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.69 | 96.34 |
|   person   | 96.28 | 98.35 |
+------------+-------+-------+
2023/05/18 17:42:08 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.6000  mIoU: 94.9900  mAcc: 97.3400  data_time: 0.0588  time: 0.0824
2023/05/18 17:42:22 - mmengine - INFO - Iter(train) [ 8600/12000]  lr: 7.1939e-04  eta: 0:04:05  time: 0.0680  data_time: 0.0088  memory: 1187  loss: 0.1301  decode.loss_ce: 0.1301  decode.acc_seg: 94.2421
2023/05/18 17:42:27 - mmengine - INFO - per class results:
2023/05/18 17:42:27 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.56 |  96.5 |
|   person   | 96.18 | 98.16 |
+------------+-------+-------+
2023/05/18 17:42:27 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5500  mIoU: 94.8700  mAcc: 97.3300  data_time: 0.0606  time: 0.0860
2023/05/18 17:42:38 - mmengine - INFO - Iter(train) [ 8800/12000]  lr: 4.3192e-04  eta: 0:03:50  time: 0.0704  data_time: 0.0090  memory: 1187  loss: 0.1556  decode.loss_ce: 0.1556  decode.acc_seg: 93.4046
2023/05/18 17:42:45 - mmengine - INFO - per class results:
2023/05/18 17:42:45 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.67 | 96.15 |
|   person   | 96.27 | 98.44 |
+------------+-------+-------+
2023/05/18 17:42:45 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.6000  mIoU: 94.9700  mAcc: 97.3000  data_time: 0.0573  time: 0.0682
2023/05/18 17:42:54 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_173053
2023/05/18 17:42:54 - mmengine - INFO - Iter(train) [ 9000/12000]  lr: 1.0000e-04  eta: 0:03:36  time: 0.0699  data_time: 0.0093  memory: 1187  loss: 0.1648  decode.loss_ce: 0.1648  decode.acc_seg: 96.6642
2023/05/18 17:43:04 - mmengine - INFO - per class results:
2023/05/18 17:43:04 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  93.7 | 96.22 |
|   person   | 96.29 | 98.42 |
+------------+-------+-------+
2023/05/18 17:43:04 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.6100  mIoU: 95.0000  mAcc: 97.3200  data_time: 0.0732  time: 0.0829
2023/05/18 17:43:09 - mmengine - INFO - Iter(train) [ 9200/12000]  lr: 9.4008e-05  eta: 0:03:21  time: 0.0708  data_time: 0.0102  memory: 1187  loss: 0.1661  decode.loss_ce: 0.1661  decode.acc_seg: 91.4253
2023/05/18 17:43:23 - mmengine - INFO - per class results:
2023/05/18 17:43:23 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.54 | 96.32 |
|   person   | 96.18 | 98.26 |
+------------+-------+-------+
2023/05/18 17:43:23 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5400  mIoU: 94.8600  mAcc: 97.2900  data_time: 0.0585  time: 0.0817
2023/05/18 17:43:25 - mmengine - INFO - Iter(train) [ 9400/12000]  lr: 8.7942e-05  eta: 0:03:07  time: 0.0725  data_time: 0.0124  memory: 1187  loss: 0.1219  decode.loss_ce: 0.1219  decode.acc_seg: 94.5663
2023/05/18 17:43:40 - mmengine - INFO - Iter(train) [ 9600/12000]  lr: 8.1830e-05  eta: 0:02:52  time: 0.0703  data_time: 0.0083  memory: 1187  loss: 0.1116  decode.loss_ce: 0.1116  decode.acc_seg: 95.3332
2023/05/18 17:43:40 - mmengine - INFO - Saving checkpoint at 9600 iterations
2023/05/18 17:43:42 - mmengine - INFO - per class results:
2023/05/18 17:43:42 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.67 | 96.25 |
|   person   | 96.27 | 98.38 |
+------------+-------+-------+
2023/05/18 17:43:42 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5900  mIoU: 94.9700  mAcc: 97.3200  data_time: 0.0669  time: 0.0773
2023/05/18 17:43:56 - mmengine - INFO - Iter(train) [ 9800/12000]  lr: 7.5666e-05  eta: 0:02:38  time: 0.0702  data_time: 0.0087  memory: 1187  loss: 0.1352  decode.loss_ce: 0.1352  decode.acc_seg: 92.7899
2023/05/18 17:44:00 - mmengine - INFO - per class results:
2023/05/18 17:44:00 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.62 | 96.43 |
|   person   | 96.23 | 98.24 |
+------------+-------+-------+
2023/05/18 17:44:00 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5700  mIoU: 94.9300  mAcc: 97.3400  data_time: 0.0552  time: 0.0694
2023/05/18 17:44:12 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_173053
2023/05/18 17:44:12 - mmengine - INFO - Iter(train) [10000/12000]  lr: 6.9446e-05  eta: 0:02:23  time: 0.0683  data_time: 0.0081  memory: 1187  loss: 0.1535  decode.loss_ce: 0.1535  decode.acc_seg: 93.5410
2023/05/18 17:44:19 - mmengine - INFO - per class results:
2023/05/18 17:44:19 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.65 | 96.37 |
|   person   | 96.25 | 98.29 |
+------------+-------+-------+
2023/05/18 17:44:19 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5800  mIoU: 94.9500  mAcc: 97.3300  data_time: 0.0744  time: 0.0839
2023/05/18 17:44:27 - mmengine - INFO - Iter(train) [10200/12000]  lr: 6.3164e-05  eta: 0:02:09  time: 0.0707  data_time: 0.0098  memory: 1187  loss: 0.1207  decode.loss_ce: 0.1207  decode.acc_seg: 97.7714
2023/05/18 17:44:38 - mmengine - INFO - per class results:
2023/05/18 17:44:38 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.65 | 96.36 |
|   person   | 96.25 | 98.31 |
+------------+-------+-------+
2023/05/18 17:44:38 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5900  mIoU: 94.9500  mAcc: 97.3300  data_time: 0.0402  time: 0.0668
2023/05/18 17:44:43 - mmengine - INFO - Iter(train) [10400/12000]  lr: 5.6811e-05  eta: 0:01:55  time: 0.0735  data_time: 0.0085  memory: 1187  loss: 0.1283  decode.loss_ce: 0.1283  decode.acc_seg: 95.6990
2023/05/18 17:44:57 - mmengine - INFO - per class results:
2023/05/18 17:44:57 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.63 | 96.32 |
|   person   | 96.24 | 98.32 |
+------------+-------+-------+
2023/05/18 17:44:57 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5800  mIoU: 94.9400  mAcc: 97.3200  data_time: 0.0755  time: 0.0875
2023/05/18 17:44:59 - mmengine - INFO - Iter(train) [10600/12000]  lr: 5.0377e-05  eta: 0:01:40  time: 0.0697  data_time: 0.0089  memory: 1187  loss: 0.1321  decode.loss_ce: 0.1321  decode.acc_seg: 95.8507
2023/05/18 17:45:14 - mmengine - INFO - Iter(train) [10800/12000]  lr: 4.3851e-05  eta: 0:01:26  time: 0.0686  data_time: 0.0089  memory: 1187  loss: 0.1487  decode.loss_ce: 0.1487  decode.acc_seg: 95.4775
2023/05/18 17:45:15 - mmengine - INFO - per class results:
2023/05/18 17:45:15 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.43 | 96.49 |
|   person   |  96.1 | 98.08 |
+------------+-------+-------+
2023/05/18 17:45:15 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.4900  mIoU: 94.7700  mAcc: 97.2900  data_time: 0.0541  time: 0.0655
2023/05/18 17:45:29 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_173053
2023/05/18 17:45:29 - mmengine - INFO - Iter(train) [11000/12000]  lr: 3.7215e-05  eta: 0:01:11  time: 0.0746  data_time: 0.0095  memory: 1187  loss: 0.1153  decode.loss_ce: 0.1153  decode.acc_seg: 92.4835
2023/05/18 17:45:34 - mmengine - INFO - per class results:
2023/05/18 17:45:34 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.72 | 96.37 |
|   person   | 96.29 | 98.34 |
+------------+-------+-------+
2023/05/18 17:45:34 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.6100  mIoU: 95.0100  mAcc: 97.3600  data_time: 0.0715  time: 0.0835
2023/05/18 17:45:45 - mmengine - INFO - Iter(train) [11200/12000]  lr: 3.0444e-05  eta: 0:00:57  time: 0.0691  data_time: 0.0086  memory: 1187  loss: 0.1514  decode.loss_ce: 0.1514  decode.acc_seg: 95.9634
2023/05/18 17:45:52 - mmengine - INFO - per class results:
2023/05/18 17:45:52 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.72 | 96.26 |
|   person   |  96.3 | 98.41 |
+------------+-------+-------+
2023/05/18 17:45:52 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.6100  mIoU: 95.0100  mAcc: 97.3300  data_time: 0.0584  time: 0.0687
2023/05/18 17:46:01 - mmengine - INFO - Iter(train) [11400/12000]  lr: 2.3499e-05  eta: 0:00:43  time: 0.0744  data_time: 0.0086  memory: 1187  loss: 0.1823  decode.loss_ce: 0.1823  decode.acc_seg: 90.7589
2023/05/18 17:46:11 - mmengine - INFO - per class results:
2023/05/18 17:46:11 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.69 | 96.28 |
|   person   | 96.28 | 98.38 |
+------------+-------+-------+
2023/05/18 17:46:11 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.6000  mIoU: 94.9900  mAcc: 97.3300  data_time: 0.0749  time: 0.0869
2023/05/18 17:46:17 - mmengine - INFO - Iter(train) [11600/12000]  lr: 1.6315e-05  eta: 0:00:28  time: 0.0719  data_time: 0.0100  memory: 1187  loss: 0.1250  decode.loss_ce: 0.1250  decode.acc_seg: 93.8131
2023/05/18 17:46:30 - mmengine - INFO - per class results:
2023/05/18 17:46:30 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.65 | 96.39 |
|   person   | 96.24 | 98.28 |
+------------+-------+-------+
2023/05/18 17:46:30 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5800  mIoU: 94.9500  mAcc: 97.3400  data_time: 0.0400  time: 0.0594
2023/05/18 17:46:33 - mmengine - INFO - Iter(train) [11800/12000]  lr: 8.7428e-06  eta: 0:00:14  time: 0.0707  data_time: 0.0093  memory: 1187  loss: 0.1383  decode.loss_ce: 0.1383  decode.acc_seg: 92.9391
2023/05/18 17:46:47 - mmengine - INFO - Exp name: mv3+pappm+cus_20230518_173053
2023/05/18 17:46:47 - mmengine - INFO - Iter(train) [12000/12000]  lr: 0.0000e+00  eta: 0:00:00  time: 0.0746  data_time: 0.0093  memory: 1187  loss: 0.1329  decode.loss_ce: 0.1329  decode.acc_seg: 96.9471
2023/05/18 17:46:47 - mmengine - INFO - Saving checkpoint at 12000 iterations
2023/05/18 17:46:49 - mmengine - INFO - per class results:
2023/05/18 17:46:49 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 93.67 | 96.38 |
|   person   | 96.26 |  98.3 |
+------------+-------+-------+
2023/05/18 17:46:49 - mmengine - INFO - Iter(val) [60/60]    aAcc: 97.5900  mIoU: 94.9600  mAcc: 97.3400  data_time: 0.0691  time: 0.0813
