2023/05/20 12:43:19 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.7 (default, Feb  5 2021, 16:56:08) [GCC 5.4.0 20160609]
    CUDA available: True
    numpy_random_seed: 304
    GPU 0,1,2,3,4,5,6,7,8,9: NVIDIA GeForce RTX 2080 Ti
    CUDA_HOME: /usr/local/cuda-11.3
    NVCC: Cuda compilation tools, release 11.3, V11.3.109
    GCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
    PyTorch: 1.12.1+cu113
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.13.1+cu113
    OpenCV: 4.6.0
    MMEngine: 0.7.2

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 304
    Distributed launcher: pytorch
    Distributed training: True
    GPU number: 4
------------------------------------------------------------

2023/05/20 12:43:20 - mmengine - INFO - Config:
dataset_type = 'PortraitDataset'
data_root = 'data/portrait'
crop_size = (512, 512)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', reduce_zero_label=False),
    dict(
        type='RandomResize',
        scale=(1024, 1024),
        ratio_range=(0.5, 1.5),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', scale=(1024, 512), keep_ratio=True),
    dict(type='LoadAnnotations', reduce_zero_label=False),
    dict(type='PackSegInputs')
]
img_ratios = [0.5, 0.75, 1.0, 1.25, 1.5, 1.75]
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale_factor': 0.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 0.75,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.0,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.25,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.75,
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 0.0,
                        'direction': 'horizontal'
                    }, {
                        'type': 'RandomFlip',
                        'prob': 1.0,
                        'direction': 'horizontal'
                    }], [{
                        'type': 'LoadAnnotations'
                    }], [{
                        'type': 'PackSegInputs'
                    }]])
]
train_dataloader = dict(
    batch_size=6,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='InfiniteSampler', shuffle=True),
    dataset=dict(
        type='PortraitDataset',
        data_root='data/portrait',
        data_prefix=dict(img_path='train/img', seg_map_path='train/ann'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', reduce_zero_label=False),
            dict(
                type='RandomResize',
                scale=(1024, 1024),
                ratio_range=(0.5, 1.5),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs')
        ]))
val_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='PortraitDataset',
        data_root='data/portrait',
        data_prefix=dict(img_path='val/img', seg_map_path='val/ann'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(1024, 512), keep_ratio=True),
            dict(type='LoadAnnotations', reduce_zero_label=False),
            dict(type='PackSegInputs')
        ]))
test_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='PortraitDataset',
        data_root='data/portrait',
        data_prefix=dict(img_path='val/img', seg_map_path='val/ann'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(1024, 512), keep_ratio=True),
            dict(type='LoadAnnotations', reduce_zero_label=False),
            dict(type='PackSegInputs')
        ]))
val_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
test_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(type='TensorboardVisBackend')
]
visualizer = dict(
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='TensorboardVisBackend')
    ],
    name='visualizer')
log_processor = dict(by_epoch=False)
log_level = 'INFO'
load_from = None
resume = False
tta_model = dict(type='SegTTAModel')
work_dir = 'workdirs/ppm'
norm_cfg = dict(type='SyncBN', requires_grad=True)
data_preprocessor = dict(
    type='SegDataPreProcessor',
    mean=[123.675, 116.28, 103.53],
    std=[58.395, 57.12, 57.375],
    bgr_to_rgb=True,
    pad_val=0,
    seg_pad_val=255,
    size=(512, 512))
model = dict(
    type='EncoderDecoder',
    data_preprocessor=dict(
        type='SegDataPreProcessor',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        bgr_to_rgb=True,
        pad_val=0,
        seg_pad_val=255,
        size=(512, 512)),
    pretrained='open-mmlab://contrib/mobilenet_v3_small',
    backbone=dict(
        type='MobileNetV3',
        arch='small',
        out_indices=(1, 8),
        norm_cfg=dict(type='SyncBN', requires_grad=True)),
    decode_head=dict(
        type='testHead',
        neck=2,
        fuse=1,
        in_channels=(16, 48),
        in_index=(0, 1),
        channels=32,
        input_transform='multiple_select',
        num_classes=2,
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        act_cfg=dict(type='ReLU'),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
iters = 12000
param_scheduler = [
    dict(type='LinearLR', by_epoch=False, start_factor=0.1, begin=0, end=300),
    dict(
        type='PolyLR',
        eta_min=0.0001,
        power=0.9,
        begin=300,
        end=9000,
        by_epoch=False),
    dict(
        type='PolyLR',
        eta_min=0,
        power=0.9,
        begin=9000,
        end=12000,
        by_epoch=False)
]
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005))
train_cfg = dict(type='IterBasedTrainLoop', max_iters=12000, val_interval=240)
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=200, log_metric_by_epoch=False),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook',
        by_epoch=False,
        save_best='auto',
        max_keep_ckpts=2,
        interval=2400),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='SegVisualizationHook', draw=True))
randomness = dict(seed=304)
launcher = 'pytorch'

2023/05/20 12:43:23 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/05/20 12:43:24 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2023/05/20 12:43:25 - mmengine - INFO - load model from: open-mmlab://contrib/mobilenet_v3_small
2023/05/20 12:43:25 - mmengine - INFO - Loads checkpoint by openmmlab backend from path: open-mmlab://contrib/mobilenet_v3_small
2023/05/20 12:43:26 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: layer9.expand_conv.conv.weight, layer9.expand_conv.bn.weight, layer9.expand_conv.bn.bias, layer9.expand_conv.bn.running_mean, layer9.expand_conv.bn.running_var, layer9.expand_conv.bn.num_batches_tracked, layer9.depthwise_conv.conv.weight, layer9.depthwise_conv.bn.weight, layer9.depthwise_conv.bn.bias, layer9.depthwise_conv.bn.running_mean, layer9.depthwise_conv.bn.running_var, layer9.depthwise_conv.bn.num_batches_tracked, layer9.se.conv1.conv.weight, layer9.se.conv1.conv.bias, layer9.se.conv2.conv.weight, layer9.se.conv2.conv.bias, layer9.linear_conv.conv.weight, layer9.linear_conv.bn.weight, layer9.linear_conv.bn.bias, layer9.linear_conv.bn.running_mean, layer9.linear_conv.bn.running_var, layer9.linear_conv.bn.num_batches_tracked, layer10.expand_conv.conv.weight, layer10.expand_conv.bn.weight, layer10.expand_conv.bn.bias, layer10.expand_conv.bn.running_mean, layer10.expand_conv.bn.running_var, layer10.expand_conv.bn.num_batches_tracked, layer10.depthwise_conv.conv.weight, layer10.depthwise_conv.bn.weight, layer10.depthwise_conv.bn.bias, layer10.depthwise_conv.bn.running_mean, layer10.depthwise_conv.bn.running_var, layer10.depthwise_conv.bn.num_batches_tracked, layer10.se.conv1.conv.weight, layer10.se.conv1.conv.bias, layer10.se.conv2.conv.weight, layer10.se.conv2.conv.bias, layer10.linear_conv.conv.weight, layer10.linear_conv.bn.weight, layer10.linear_conv.bn.bias, layer10.linear_conv.bn.running_mean, layer10.linear_conv.bn.running_var, layer10.linear_conv.bn.num_batches_tracked, layer11.expand_conv.conv.weight, layer11.expand_conv.bn.weight, layer11.expand_conv.bn.bias, layer11.expand_conv.bn.running_mean, layer11.expand_conv.bn.running_var, layer11.expand_conv.bn.num_batches_tracked, layer11.depthwise_conv.conv.weight, layer11.depthwise_conv.bn.weight, layer11.depthwise_conv.bn.bias, layer11.depthwise_conv.bn.running_mean, layer11.depthwise_conv.bn.running_var, layer11.depthwise_conv.bn.num_batches_tracked, layer11.se.conv1.conv.weight, layer11.se.conv1.conv.bias, layer11.se.conv2.conv.weight, layer11.se.conv2.conv.bias, layer11.linear_conv.conv.weight, layer11.linear_conv.bn.weight, layer11.linear_conv.bn.bias, layer11.linear_conv.bn.running_mean, layer11.linear_conv.bn.running_var, layer11.linear_conv.bn.num_batches_tracked, layer12.conv.weight, layer12.bn.weight, layer12.bn.bias, layer12.bn.running_mean, layer12.bn.running_var, layer12.bn.num_batches_tracked

Name of parameter - Initialization information

backbone.layer0.conv.weight - torch.Size([16, 3, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer0.bn.weight - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer0.bn.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.depthwise_conv.conv.weight - torch.Size([16, 1, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.depthwise_conv.bn.weight - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.depthwise_conv.bn.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv1.conv.weight - torch.Size([8, 16, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv1.conv.bias - torch.Size([8]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv2.conv.weight - torch.Size([16, 8, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.se.conv2.conv.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.linear_conv.conv.weight - torch.Size([16, 16, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.linear_conv.bn.weight - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer1.linear_conv.bn.bias - torch.Size([16]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.expand_conv.conv.weight - torch.Size([72, 16, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.expand_conv.bn.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.expand_conv.bn.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.depthwise_conv.conv.weight - torch.Size([72, 1, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.depthwise_conv.bn.weight - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.depthwise_conv.bn.bias - torch.Size([72]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.linear_conv.conv.weight - torch.Size([24, 72, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer2.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.expand_conv.conv.weight - torch.Size([88, 24, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.expand_conv.bn.weight - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.expand_conv.bn.bias - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.depthwise_conv.conv.weight - torch.Size([88, 1, 3, 3]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.depthwise_conv.bn.weight - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.depthwise_conv.bn.bias - torch.Size([88]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.linear_conv.conv.weight - torch.Size([24, 88, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.linear_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer3.linear_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.expand_conv.conv.weight - torch.Size([96, 24, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.expand_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.expand_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.depthwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.depthwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv1.conv.weight - torch.Size([24, 96, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv1.conv.bias - torch.Size([24]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv2.conv.weight - torch.Size([96, 24, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.se.conv2.conv.bias - torch.Size([96]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.linear_conv.conv.weight - torch.Size([40, 96, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.linear_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer4.linear_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.expand_conv.conv.weight - torch.Size([240, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.expand_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.expand_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.depthwise_conv.conv.weight - torch.Size([240, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.depthwise_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.depthwise_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv1.conv.weight - torch.Size([64, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv1.conv.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv2.conv.weight - torch.Size([240, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.se.conv2.conv.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.linear_conv.conv.weight - torch.Size([40, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.linear_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer5.linear_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.expand_conv.conv.weight - torch.Size([240, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.expand_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.expand_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.depthwise_conv.conv.weight - torch.Size([240, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.depthwise_conv.bn.weight - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.depthwise_conv.bn.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv1.conv.weight - torch.Size([64, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv1.conv.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv2.conv.weight - torch.Size([240, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.se.conv2.conv.bias - torch.Size([240]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.linear_conv.conv.weight - torch.Size([40, 240, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.linear_conv.bn.weight - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer6.linear_conv.bn.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.expand_conv.conv.weight - torch.Size([120, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.expand_conv.bn.weight - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.expand_conv.bn.bias - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.depthwise_conv.conv.weight - torch.Size([120, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.depthwise_conv.bn.weight - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.depthwise_conv.bn.bias - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv1.conv.weight - torch.Size([32, 120, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv1.conv.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv2.conv.weight - torch.Size([120, 32, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.se.conv2.conv.bias - torch.Size([120]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.linear_conv.conv.weight - torch.Size([48, 120, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer7.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.expand_conv.conv.weight - torch.Size([144, 48, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.expand_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.expand_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.depthwise_conv.conv.weight - torch.Size([144, 1, 5, 5]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.depthwise_conv.bn.weight - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.depthwise_conv.bn.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv1.conv.weight - torch.Size([40, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv1.conv.bias - torch.Size([40]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv2.conv.weight - torch.Size([144, 40, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.se.conv2.conv.bias - torch.Size([144]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.linear_conv.conv.weight - torch.Size([48, 144, 1, 1]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.linear_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

backbone.layer8.linear_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from open-mmlab://contrib/mobilenet_v3_small 

decode_head.conv_seg.weight - torch.Size([2, 32, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.fuse4.local_embedding.conv.weight - torch.Size([32, 16, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.local_embedding.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.local_embedding.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.global_act.conv.weight - torch.Size([32, 48, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.global_act.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fuse4.global_act.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.0.1.conv.weight - torch.Size([24, 48, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.0.1.bn.weight - torch.Size([24]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.0.1.bn.bias - torch.Size([24]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.1.1.conv.weight - torch.Size([12, 48, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.1.1.bn.weight - torch.Size([12]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.1.1.bn.bias - torch.Size([12]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.2.1.conv.weight - torch.Size([8, 48, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.2.1.bn.weight - torch.Size([8]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.2.1.bn.bias - torch.Size([8]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.3.1.conv.weight - torch.Size([4, 48, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.3.1.bn.weight - torch.Size([4]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.neck.3.1.bn.bias - torch.Size([4]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2023/05/20 12:43:26 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/05/20 12:43:26 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/05/20 12:43:26 - mmengine - INFO - Checkpoints will be saved to /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm.
2023/05/20 12:44:04 - mmengine - INFO - Iter(train) [  200/12000]  lr: 6.9900e-03  eta: 0:37:41  time: 0.1701  data_time: 0.0077  memory: 1135  loss: 0.5746  decode.loss_ce: 0.5746  decode.acc_seg: 70.4313
2023/05/20 12:44:18 - mmengine - INFO - per class results:
2023/05/20 12:44:18 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 52.73 | 64.87 |
|   person   | 71.73 | 86.51 |
+------------+-------+-------+
2023/05/20 12:44:18 - mmengine - INFO - Iter(val) [60/60]    aAcc: 78.5100  mIoU: 62.2300  mAcc: 75.6900  data_time: 0.0873  time: 0.1346
2023/05/20 12:44:19 - mmengine - INFO - The best checkpoint with 78.5100 aAcc at 240 iter is saved to best_aAcc_iter_240.pth.
2023/05/20 12:44:33 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_124313
2023/05/20 12:44:46 - mmengine - INFO - Iter(train) [  400/12000]  lr: 9.8985e-03  eta: 0:35:16  time: 0.1759  data_time: 0.0073  memory: 1272  loss: 0.4968  decode.loss_ce: 0.4968  decode.acc_seg: 79.5666
2023/05/20 12:45:01 - mmengine - INFO - per class results:
2023/05/20 12:45:01 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 56.47 | 65.18 |
|   person   | 75.54 | 90.96 |
+------------+-------+-------+
2023/05/20 12:45:01 - mmengine - INFO - Iter(val) [60/60]    aAcc: 81.4300  mIoU: 66.0100  mAcc: 78.0700  data_time: 0.0779  time: 0.0916
2023/05/20 12:45:01 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_240.pth is removed
2023/05/20 12:45:01 - mmengine - INFO - The best checkpoint with 81.4300 aAcc at 480 iter is saved to best_aAcc_iter_480.pth.
2023/05/20 12:45:21 - mmengine - INFO - Iter(train) [  600/12000]  lr: 9.6932e-03  eta: 0:33:55  time: 0.1744  data_time: 0.0091  memory: 1051  loss: 0.4677  decode.loss_ce: 0.4677  decode.acc_seg: 78.1897
2023/05/20 12:45:43 - mmengine - INFO - per class results:
2023/05/20 12:45:43 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 64.19 |  74.4 |
|   person   | 78.84 | 90.68 |
+------------+-------+-------+
2023/05/20 12:45:43 - mmengine - INFO - Iter(val) [60/60]    aAcc: 84.6600  mIoU: 71.5200  mAcc: 82.5400  data_time: 0.0735  time: 0.0851
2023/05/20 12:45:43 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_480.pth is removed
2023/05/20 12:45:44 - mmengine - INFO - The best checkpoint with 84.6600 aAcc at 720 iter is saved to best_aAcc_iter_720.pth.
2023/05/20 12:45:57 - mmengine - INFO - Iter(train) [  800/12000]  lr: 9.4874e-03  eta: 0:32:58  time: 0.1521  data_time: 0.0076  memory: 1051  loss: 0.4620  decode.loss_ce: 0.4620  decode.acc_seg: 81.7095
2023/05/20 12:46:26 - mmengine - INFO - per class results:
2023/05/20 12:46:26 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  69.6 | 81.03 |
|   person   | 81.33 | 90.37 |
+------------+-------+-------+
2023/05/20 12:46:26 - mmengine - INFO - Iter(val) [60/60]    aAcc: 86.9200  mIoU: 75.4600  mAcc: 85.7000  data_time: 0.0540  time: 0.0666
2023/05/20 12:46:26 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_720.pth is removed
2023/05/20 12:46:26 - mmengine - INFO - The best checkpoint with 86.9200 aAcc at 960 iter is saved to best_aAcc_iter_960.pth.
2023/05/20 12:46:33 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_124313
2023/05/20 12:46:33 - mmengine - INFO - Iter(train) [ 1000/12000]  lr: 9.2811e-03  eta: 0:32:15  time: 0.1720  data_time: 0.0071  memory: 1051  loss: 0.4278  decode.loss_ce: 0.4278  decode.acc_seg: 84.7630
2023/05/20 12:47:07 - mmengine - INFO - Iter(train) [ 1200/12000]  lr: 9.0742e-03  eta: 0:31:23  time: 0.1842  data_time: 0.0078  memory: 1051  loss: 0.4510  decode.loss_ce: 0.4510  decode.acc_seg: 89.3573
2023/05/20 12:47:08 - mmengine - INFO - per class results:
2023/05/20 12:47:08 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 75.07 | 82.91 |
|   person   | 85.33 | 93.88 |
+------------+-------+-------+
2023/05/20 12:47:08 - mmengine - INFO - Iter(val) [60/60]    aAcc: 89.8200  mIoU: 80.2000  mAcc: 88.3900  data_time: 0.0644  time: 0.0745
2023/05/20 12:47:08 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_960.pth is removed
2023/05/20 12:47:09 - mmengine - INFO - The best checkpoint with 89.8200 aAcc at 1200 iter is saved to best_aAcc_iter_1200.pth.
2023/05/20 12:47:42 - mmengine - INFO - Iter(train) [ 1400/12000]  lr: 8.8669e-03  eta: 0:30:38  time: 0.1502  data_time: 0.0069  memory: 1051  loss: 0.3617  decode.loss_ce: 0.3617  decode.acc_seg: 78.1451
2023/05/20 12:47:50 - mmengine - INFO - per class results:
2023/05/20 12:47:50 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 76.57 | 84.94 |
|   person   |  86.0 | 93.59 |
+------------+-------+-------+
2023/05/20 12:47:50 - mmengine - INFO - Iter(val) [60/60]    aAcc: 90.3900  mIoU: 81.2900  mAcc: 89.2700  data_time: 0.0599  time: 0.0725
2023/05/20 12:47:50 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_1200.pth is removed
2023/05/20 12:47:51 - mmengine - INFO - The best checkpoint with 90.3900 aAcc at 1440 iter is saved to best_aAcc_iter_1440.pth.
2023/05/20 12:48:18 - mmengine - INFO - Iter(train) [ 1600/12000]  lr: 8.6590e-03  eta: 0:30:06  time: 0.1696  data_time: 0.0068  memory: 1051  loss: 0.3813  decode.loss_ce: 0.3813  decode.acc_seg: 81.3215
2023/05/20 12:48:33 - mmengine - INFO - per class results:
2023/05/20 12:48:33 - mmengine - INFO - 
+------------+-------+------+
|   Class    |  IoU  | Acc  |
+------------+-------+------+
| background | 77.44 | 81.8 |
|   person   | 87.38 | 96.7 |
+------------+-------+------+
2023/05/20 12:48:33 - mmengine - INFO - Iter(val) [60/60]    aAcc: 91.1900  mIoU: 82.4100  mAcc: 89.2500  data_time: 0.0680  time: 0.0782
2023/05/20 12:48:33 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_1440.pth is removed
2023/05/20 12:48:34 - mmengine - INFO - The best checkpoint with 91.1900 aAcc at 1680 iter is saved to best_aAcc_iter_1680.pth.
2023/05/20 12:48:54 - mmengine - INFO - Iter(train) [ 1800/12000]  lr: 8.4505e-03  eta: 0:29:29  time: 0.1519  data_time: 0.0080  memory: 1051  loss: 0.3733  decode.loss_ce: 0.3733  decode.acc_seg: 80.6009
2023/05/20 12:49:15 - mmengine - INFO - per class results:
2023/05/20 12:49:15 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 78.44 | 82.94 |
|   person   | 87.85 | 96.64 |
+------------+-------+-------+
2023/05/20 12:49:15 - mmengine - INFO - Iter(val) [60/60]    aAcc: 91.5800  mIoU: 83.1500  mAcc: 89.7900  data_time: 0.0718  time: 0.0878
2023/05/20 12:49:15 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_1680.pth is removed
2023/05/20 12:49:16 - mmengine - INFO - The best checkpoint with 91.5800 aAcc at 1920 iter is saved to best_aAcc_iter_1920.pth.
2023/05/20 12:49:30 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_124313
2023/05/20 12:49:30 - mmengine - INFO - Iter(train) [ 2000/12000]  lr: 8.2414e-03  eta: 0:28:50  time: 0.1692  data_time: 0.0077  memory: 1051  loss: 0.3065  decode.loss_ce: 0.3065  decode.acc_seg: 84.8949
2023/05/20 12:49:58 - mmengine - INFO - per class results:
2023/05/20 12:49:58 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 80.66 | 84.26 |
|   person   | 89.16 | 97.39 |
+------------+-------+-------+
2023/05/20 12:49:58 - mmengine - INFO - Iter(val) [60/60]    aAcc: 92.5300  mIoU: 84.9100  mAcc: 90.8200  data_time: 0.0716  time: 0.0822
2023/05/20 12:49:58 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_1920.pth is removed
2023/05/20 12:49:58 - mmengine - INFO - The best checkpoint with 92.5300 aAcc at 2160 iter is saved to best_aAcc_iter_2160.pth.
2023/05/20 12:50:05 - mmengine - INFO - Iter(train) [ 2200/12000]  lr: 8.0318e-03  eta: 0:28:13  time: 0.1553  data_time: 0.0080  memory: 1051  loss: 0.3438  decode.loss_ce: 0.3438  decode.acc_seg: 79.7485
2023/05/20 12:50:39 - mmengine - INFO - Iter(train) [ 2400/12000]  lr: 7.8215e-03  eta: 0:27:34  time: 0.1746  data_time: 0.0073  memory: 1051  loss: 0.2762  decode.loss_ce: 0.2762  decode.acc_seg: 87.2547
2023/05/20 12:50:39 - mmengine - INFO - Saving checkpoint at 2400 iterations
2023/05/20 12:50:41 - mmengine - INFO - per class results:
2023/05/20 12:50:41 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 83.65 | 88.07 |
|   person   | 90.57 | 96.91 |
+------------+-------+-------+
2023/05/20 12:50:41 - mmengine - INFO - Iter(val) [60/60]    aAcc: 93.6400  mIoU: 87.1100  mAcc: 92.4900  data_time: 0.0752  time: 0.0855
2023/05/20 12:50:41 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_2160.pth is removed
2023/05/20 12:50:42 - mmengine - INFO - The best checkpoint with 93.6400 aAcc at 2400 iter is saved to best_aAcc_iter_2400.pth.
2023/05/20 12:51:16 - mmengine - INFO - Iter(train) [ 2600/12000]  lr: 7.6106e-03  eta: 0:26:59  time: 0.1706  data_time: 0.0070  memory: 1051  loss: 0.3049  decode.loss_ce: 0.3049  decode.acc_seg: 78.6320
2023/05/20 12:51:24 - mmengine - INFO - per class results:
2023/05/20 12:51:24 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 84.41 | 88.14 |
|   person   | 91.07 | 97.41 |
+------------+-------+-------+
2023/05/20 12:51:24 - mmengine - INFO - Iter(val) [60/60]    aAcc: 93.9800  mIoU: 87.7400  mAcc: 92.7700  data_time: 0.0747  time: 0.0853
2023/05/20 12:51:24 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_2400.pth is removed
2023/05/20 12:51:24 - mmengine - INFO - The best checkpoint with 93.9800 aAcc at 2640 iter is saved to best_aAcc_iter_2640.pth.
2023/05/20 12:51:51 - mmengine - INFO - Iter(train) [ 2800/12000]  lr: 7.3990e-03  eta: 0:26:24  time: 0.1542  data_time: 0.0067  memory: 1051  loss: 0.2870  decode.loss_ce: 0.2870  decode.acc_seg: 87.4640
2023/05/20 12:52:06 - mmengine - INFO - per class results:
2023/05/20 12:52:06 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  85.7 | 90.98 |
|   person   | 91.55 | 96.39 |
+------------+-------+-------+
2023/05/20 12:52:06 - mmengine - INFO - Iter(val) [60/60]    aAcc: 94.3900  mIoU: 88.6200  mAcc: 93.6800  data_time: 0.0711  time: 0.0811
2023/05/20 12:52:06 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_2640.pth is removed
2023/05/20 12:52:07 - mmengine - INFO - The best checkpoint with 94.3900 aAcc at 2880 iter is saved to best_aAcc_iter_2880.pth.
2023/05/20 12:52:27 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_124313
2023/05/20 12:52:27 - mmengine - INFO - Iter(train) [ 3000/12000]  lr: 7.1868e-03  eta: 0:25:49  time: 0.1587  data_time: 0.0073  memory: 1051  loss: 0.2634  decode.loss_ce: 0.2634  decode.acc_seg: 90.9213
2023/05/20 12:52:49 - mmengine - INFO - per class results:
2023/05/20 12:52:49 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 84.29 | 90.96 |
|   person   | 90.56 | 95.36 |
+------------+-------+-------+
2023/05/20 12:52:49 - mmengine - INFO - Iter(val) [60/60]    aAcc: 93.7400  mIoU: 87.4300  mAcc: 93.1600  data_time: 0.0743  time: 0.0887
2023/05/20 12:53:03 - mmengine - INFO - Iter(train) [ 3200/12000]  lr: 6.9738e-03  eta: 0:25:13  time: 0.1693  data_time: 0.0083  memory: 1051  loss: 0.2835  decode.loss_ce: 0.2835  decode.acc_seg: 83.2396
2023/05/20 12:53:31 - mmengine - INFO - per class results:
2023/05/20 12:53:31 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 86.64 | 92.08 |
|   person   | 92.04 | 96.32 |
+------------+-------+-------+
2023/05/20 12:53:31 - mmengine - INFO - Iter(val) [60/60]    aAcc: 94.7500  mIoU: 89.3400  mAcc: 94.2000  data_time: 0.0700  time: 0.0806
2023/05/20 12:53:31 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_2880.pth is removed
2023/05/20 12:53:32 - mmengine - INFO - The best checkpoint with 94.7500 aAcc at 3360 iter is saved to best_aAcc_iter_3360.pth.
2023/05/20 12:53:39 - mmengine - INFO - Iter(train) [ 3400/12000]  lr: 6.7601e-03  eta: 0:24:38  time: 0.1537  data_time: 0.0086  memory: 1051  loss: 0.3020  decode.loss_ce: 0.3020  decode.acc_seg: 95.4585
2023/05/20 12:54:11 - mmengine - INFO - Iter(train) [ 3600/12000]  lr: 6.5457e-03  eta: 0:24:00  time: 0.1755  data_time: 0.0077  memory: 1051  loss: 0.2370  decode.loss_ce: 0.2370  decode.acc_seg: 90.1148
2023/05/20 12:54:13 - mmengine - INFO - per class results:
2023/05/20 12:54:13 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  86.5 | 91.23 |
|   person   | 92.06 | 96.79 |
+------------+-------+-------+
2023/05/20 12:54:13 - mmengine - INFO - Iter(val) [60/60]    aAcc: 94.7400  mIoU: 89.2800  mAcc: 94.0100  data_time: 0.0597  time: 0.0706
2023/05/20 12:54:46 - mmengine - INFO - Iter(train) [ 3800/12000]  lr: 6.3304e-03  eta: 0:23:24  time: 0.1543  data_time: 0.0074  memory: 1051  loss: 0.2409  decode.loss_ce: 0.2409  decode.acc_seg: 90.9199
2023/05/20 12:54:55 - mmengine - INFO - per class results:
2023/05/20 12:54:55 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 86.86 | 90.65 |
|   person   | 92.37 | 97.44 |
+------------+-------+-------+
2023/05/20 12:54:55 - mmengine - INFO - Iter(val) [60/60]    aAcc: 94.9300  mIoU: 89.6200  mAcc: 94.0400  data_time: 0.0696  time: 0.0805
2023/05/20 12:54:55 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_3360.pth is removed
2023/05/20 12:54:56 - mmengine - INFO - The best checkpoint with 94.9300 aAcc at 3840 iter is saved to best_aAcc_iter_3840.pth.
2023/05/20 12:55:22 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_124313
2023/05/20 12:55:22 - mmengine - INFO - Iter(train) [ 4000/12000]  lr: 6.1143e-03  eta: 0:22:50  time: 0.1765  data_time: 0.0079  memory: 1051  loss: 0.2770  decode.loss_ce: 0.2770  decode.acc_seg: 92.1985
2023/05/20 12:55:37 - mmengine - INFO - per class results:
2023/05/20 12:55:37 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  87.4 | 91.59 |
|   person   | 92.62 | 97.19 |
+------------+-------+-------+
2023/05/20 12:55:37 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.1200  mIoU: 90.0100  mAcc: 94.3900  data_time: 0.0569  time: 0.0678
2023/05/20 12:55:37 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_3840.pth is removed
2023/05/20 12:55:37 - mmengine - INFO - The best checkpoint with 95.1200 aAcc at 4080 iter is saved to best_aAcc_iter_4080.pth.
2023/05/20 12:55:57 - mmengine - INFO - Iter(train) [ 4200/12000]  lr: 5.8974e-03  eta: 0:22:14  time: 0.1717  data_time: 0.0080  memory: 1051  loss: 0.2541  decode.loss_ce: 0.2541  decode.acc_seg: 93.0246
2023/05/20 12:56:19 - mmengine - INFO - per class results:
2023/05/20 12:56:19 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 87.64 | 90.72 |
|   person   | 92.88 | 97.94 |
+------------+-------+-------+
2023/05/20 12:56:19 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.2700  mIoU: 90.2600  mAcc: 94.3300  data_time: 0.0757  time: 0.0880
2023/05/20 12:56:19 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_4080.pth is removed
2023/05/20 12:56:20 - mmengine - INFO - The best checkpoint with 95.2700 aAcc at 4320 iter is saved to best_aAcc_iter_4320.pth.
2023/05/20 12:56:33 - mmengine - INFO - Iter(train) [ 4400/12000]  lr: 5.6795e-03  eta: 0:21:39  time: 0.1505  data_time: 0.0081  memory: 1051  loss: 0.2112  decode.loss_ce: 0.2112  decode.acc_seg: 94.6753
2023/05/20 12:57:01 - mmengine - INFO - per class results:
2023/05/20 12:57:01 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.11 | 93.07 |
|   person   | 92.92 |  96.7 |
+------------+-------+-------+
2023/05/20 12:57:01 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.3600  mIoU: 90.5200  mAcc: 94.8800  data_time: 0.0586  time: 0.0906
2023/05/20 12:57:01 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_4320.pth is removed
2023/05/20 12:57:02 - mmengine - INFO - The best checkpoint with 95.3600 aAcc at 4560 iter is saved to best_aAcc_iter_4560.pth.
2023/05/20 12:57:08 - mmengine - INFO - Iter(train) [ 4600/12000]  lr: 5.4607e-03  eta: 0:21:04  time: 0.1705  data_time: 0.0076  memory: 1051  loss: 0.2088  decode.loss_ce: 0.2088  decode.acc_seg: 95.2847
2023/05/20 12:57:41 - mmengine - INFO - Iter(train) [ 4800/12000]  lr: 5.2409e-03  eta: 0:20:29  time: 0.1658  data_time: 0.0068  memory: 1051  loss: 0.2761  decode.loss_ce: 0.2761  decode.acc_seg: 90.8915
2023/05/20 12:57:41 - mmengine - INFO - Saving checkpoint at 4800 iterations
2023/05/20 12:57:43 - mmengine - INFO - per class results:
2023/05/20 12:57:43 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 87.23 | 91.14 |
|   person   | 92.56 | 97.37 |
+------------+-------+-------+
2023/05/20 12:57:43 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.0700  mIoU: 89.8900  mAcc: 94.2500  data_time: 0.0521  time: 0.0624
2023/05/20 12:58:16 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_124313
2023/05/20 12:58:16 - mmengine - INFO - Iter(train) [ 5000/12000]  lr: 5.0200e-03  eta: 0:19:53  time: 0.1752  data_time: 0.0079  memory: 1051  loss: 0.2090  decode.loss_ce: 0.2090  decode.acc_seg: 90.0190
2023/05/20 12:58:25 - mmengine - INFO - per class results:
2023/05/20 12:58:25 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.06 | 92.01 |
|   person   | 93.01 | 97.37 |
+------------+-------+-------+
2023/05/20 12:58:25 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.3900  mIoU: 90.5400  mAcc: 94.6900  data_time: 0.0421  time: 0.0666
2023/05/20 12:58:25 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_4560.pth is removed
2023/05/20 12:58:25 - mmengine - INFO - The best checkpoint with 95.3900 aAcc at 5040 iter is saved to best_aAcc_iter_5040.pth.
2023/05/20 12:58:52 - mmengine - INFO - Iter(train) [ 5200/12000]  lr: 4.7981e-03  eta: 0:19:19  time: 0.1515  data_time: 0.0068  memory: 1051  loss: 0.2407  decode.loss_ce: 0.2407  decode.acc_seg: 88.7857
2023/05/20 12:59:07 - mmengine - INFO - per class results:
2023/05/20 12:59:07 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.15 | 91.62 |
|   person   | 93.11 | 97.69 |
+------------+-------+-------+
2023/05/20 12:59:07 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.4500  mIoU: 90.6300  mAcc: 94.6500  data_time: 0.0768  time: 0.0911
2023/05/20 12:59:07 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_5040.pth is removed
2023/05/20 12:59:08 - mmengine - INFO - The best checkpoint with 95.4500 aAcc at 5280 iter is saved to best_aAcc_iter_5280.pth.
2023/05/20 12:59:27 - mmengine - INFO - Iter(train) [ 5400/12000]  lr: 4.5749e-03  eta: 0:18:44  time: 0.1767  data_time: 0.0072  memory: 1051  loss: 0.2130  decode.loss_ce: 0.2130  decode.acc_seg: 94.3079
2023/05/20 12:59:49 - mmengine - INFO - per class results:
2023/05/20 12:59:49 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.17 | 93.27 |
|   person   | 92.94 | 96.61 |
+------------+-------+-------+
2023/05/20 12:59:49 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.3700  mIoU: 90.5500  mAcc: 94.9400  data_time: 0.0750  time: 0.0855
2023/05/20 13:00:02 - mmengine - INFO - Iter(train) [ 5600/12000]  lr: 4.3505e-03  eta: 0:18:10  time: 0.1532  data_time: 0.0067  memory: 1051  loss: 0.2448  decode.loss_ce: 0.2448  decode.acc_seg: 85.7681
2023/05/20 13:00:31 - mmengine - INFO - per class results:
2023/05/20 13:00:31 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 87.89 | 91.32 |
|   person   | 92.98 | 97.71 |
+------------+-------+-------+
2023/05/20 13:00:31 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.3500  mIoU: 90.4300  mAcc: 94.5100  data_time: 0.0541  time: 0.0643
2023/05/20 13:00:38 - mmengine - INFO - Iter(train) [ 5800/12000]  lr: 4.1248e-03  eta: 0:17:36  time: 0.1598  data_time: 0.0068  memory: 1051  loss: 0.2353  decode.loss_ce: 0.2353  decode.acc_seg: 87.7343
2023/05/20 13:01:11 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_124313
2023/05/20 13:01:11 - mmengine - INFO - Iter(train) [ 6000/12000]  lr: 3.8977e-03  eta: 0:17:00  time: 0.1526  data_time: 0.0068  memory: 1051  loss: 0.1819  decode.loss_ce: 0.1819  decode.acc_seg: 93.7505
2023/05/20 13:01:12 - mmengine - INFO - per class results:
2023/05/20 13:01:12 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.19 | 91.34 |
|   person   | 93.18 | 97.91 |
+------------+-------+-------+
2023/05/20 13:01:12 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.4800  mIoU: 90.6900  mAcc: 94.6200  data_time: 0.0558  time: 0.0797
2023/05/20 13:01:12 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_5280.pth is removed
2023/05/20 13:01:13 - mmengine - INFO - The best checkpoint with 95.4800 aAcc at 6000 iter is saved to best_aAcc_iter_6000.pth.
2023/05/20 13:01:46 - mmengine - INFO - Iter(train) [ 6200/12000]  lr: 3.6691e-03  eta: 0:16:26  time: 0.1512  data_time: 0.0073  memory: 1051  loss: 0.2047  decode.loss_ce: 0.2047  decode.acc_seg: 93.2586
2023/05/20 13:01:54 - mmengine - INFO - per class results:
2023/05/20 13:01:54 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.33 | 93.18 |
|   person   | 93.06 | 96.78 |
+------------+-------+-------+
2023/05/20 13:01:54 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.4500  mIoU: 90.7000  mAcc: 94.9800  data_time: 0.0573  time: 0.0677
2023/05/20 13:02:21 - mmengine - INFO - Iter(train) [ 6400/12000]  lr: 3.4388e-03  eta: 0:15:52  time: 0.1701  data_time: 0.0079  memory: 1051  loss: 0.1864  decode.loss_ce: 0.1864  decode.acc_seg: 90.8184
2023/05/20 13:02:36 - mmengine - INFO - per class results:
2023/05/20 13:02:36 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  88.4 | 93.15 |
|   person   | 93.11 | 96.85 |
+------------+-------+-------+
2023/05/20 13:02:36 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.4800  mIoU: 90.7600  mAcc: 95.0000  data_time: 0.0622  time: 0.0721
2023/05/20 13:02:57 - mmengine - INFO - Iter(train) [ 6600/12000]  lr: 3.2067e-03  eta: 0:15:18  time: 0.1569  data_time: 0.0070  memory: 1051  loss: 0.2268  decode.loss_ce: 0.2268  decode.acc_seg: 90.2046
2023/05/20 13:03:18 - mmengine - INFO - per class results:
2023/05/20 13:03:18 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.75 |  92.6 |
|   person   |  93.4 | 97.45 |
+------------+-------+-------+
2023/05/20 13:03:18 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.6600  mIoU: 91.0700  mAcc: 95.0300  data_time: 0.0749  time: 0.1003
2023/05/20 13:03:18 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_6000.pth is removed
2023/05/20 13:03:19 - mmengine - INFO - The best checkpoint with 95.6600 aAcc at 6720 iter is saved to best_aAcc_iter_6720.pth.
2023/05/20 13:03:32 - mmengine - INFO - Iter(train) [ 6800/12000]  lr: 2.9727e-03  eta: 0:14:44  time: 0.1781  data_time: 0.0071  memory: 1051  loss: 0.2068  decode.loss_ce: 0.2068  decode.acc_seg: 87.5746
2023/05/20 13:04:01 - mmengine - INFO - per class results:
2023/05/20 13:04:01 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.75 | 93.13 |
|   person   | 93.34 |  97.1 |
+------------+-------+-------+
2023/05/20 13:04:01 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.6300  mIoU: 91.0400  mAcc: 95.1200  data_time: 0.0742  time: 0.0851
2023/05/20 13:04:08 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_124313
2023/05/20 13:04:08 - mmengine - INFO - Iter(train) [ 7000/12000]  lr: 2.7366e-03  eta: 0:14:10  time: 0.1513  data_time: 0.0071  memory: 1051  loss: 0.2285  decode.loss_ce: 0.2285  decode.acc_seg: 93.6310
2023/05/20 13:04:41 - mmengine - INFO - Iter(train) [ 7200/12000]  lr: 2.4980e-03  eta: 0:13:35  time: 0.1735  data_time: 0.0070  memory: 1051  loss: 0.2180  decode.loss_ce: 0.2180  decode.acc_seg: 96.5329
2023/05/20 13:04:41 - mmengine - INFO - Saving checkpoint at 7200 iterations
2023/05/20 13:04:44 - mmengine - INFO - per class results:
2023/05/20 13:04:44 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.28 | 92.96 |
|   person   | 93.05 | 96.89 |
+------------+-------+-------+
2023/05/20 13:04:44 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.4400  mIoU: 90.6600  mAcc: 94.9300  data_time: 0.0553  time: 0.0671
2023/05/20 13:05:17 - mmengine - INFO - Iter(train) [ 7400/12000]  lr: 2.2569e-03  eta: 0:13:01  time: 0.1572  data_time: 0.0075  memory: 1051  loss: 0.2153  decode.loss_ce: 0.2153  decode.acc_seg: 88.0453
2023/05/20 13:05:26 - mmengine - INFO - per class results:
2023/05/20 13:05:26 - mmengine - INFO - 
+------------+-------+------+
|   Class    |  IoU  | Acc  |
+------------+-------+------+
| background | 88.68 | 92.3 |
|   person   | 93.39 | 97.6 |
+------------+-------+------+
2023/05/20 13:05:26 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.6400  mIoU: 91.0300  mAcc: 94.9500  data_time: 0.0424  time: 0.0687
2023/05/20 13:05:52 - mmengine - INFO - Iter(train) [ 7600/12000]  lr: 2.0126e-03  eta: 0:12:27  time: 0.1786  data_time: 0.0072  memory: 1051  loss: 0.1671  decode.loss_ce: 0.1671  decode.acc_seg: 94.8068
2023/05/20 13:06:07 - mmengine - INFO - per class results:
2023/05/20 13:06:07 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.74 | 92.94 |
|   person   | 93.36 | 97.22 |
+------------+-------+-------+
2023/05/20 13:06:07 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.6400  mIoU: 91.0500  mAcc: 95.0800  data_time: 0.0702  time: 0.0805
2023/05/20 13:06:27 - mmengine - INFO - Iter(train) [ 7800/12000]  lr: 1.7649e-03  eta: 0:11:53  time: 0.1715  data_time: 0.0069  memory: 1051  loss: 0.1923  decode.loss_ce: 0.1923  decode.acc_seg: 96.2957
2023/05/20 13:06:49 - mmengine - INFO - per class results:
2023/05/20 13:06:49 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.98 | 93.05 |
|   person   | 93.51 | 97.32 |
+------------+-------+-------+
2023/05/20 13:06:49 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.7400  mIoU: 91.2500  mAcc: 95.1900  data_time: 0.0538  time: 0.0659
2023/05/20 13:06:49 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_6720.pth is removed
2023/05/20 13:06:50 - mmengine - INFO - The best checkpoint with 95.7400 aAcc at 7920 iter is saved to best_aAcc_iter_7920.pth.
2023/05/20 13:07:03 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_124313
2023/05/20 13:07:03 - mmengine - INFO - Iter(train) [ 8000/12000]  lr: 1.5129e-03  eta: 0:11:19  time: 0.1533  data_time: 0.0073  memory: 1051  loss: 0.2084  decode.loss_ce: 0.2084  decode.acc_seg: 95.5795
2023/05/20 13:07:32 - mmengine - INFO - per class results:
2023/05/20 13:07:32 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.06 | 92.64 |
|   person   |  93.6 | 97.64 |
+------------+-------+-------+
2023/05/20 13:07:32 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.7900  mIoU: 91.3300  mAcc: 95.1400  data_time: 0.0732  time: 0.0839
2023/05/20 13:07:32 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_7920.pth is removed
2023/05/20 13:07:33 - mmengine - INFO - The best checkpoint with 95.7900 aAcc at 8160 iter is saved to best_aAcc_iter_8160.pth.
2023/05/20 13:07:40 - mmengine - INFO - Iter(train) [ 8200/12000]  lr: 1.2558e-03  eta: 0:10:45  time: 0.1532  data_time: 0.0069  memory: 1051  loss: 0.1784  decode.loss_ce: 0.1784  decode.acc_seg: 94.5192
2023/05/20 13:08:13 - mmengine - INFO - Iter(train) [ 8400/12000]  lr: 9.9217e-04  eta: 0:10:11  time: 0.1655  data_time: 0.0072  memory: 1051  loss: 0.2025  decode.loss_ce: 0.2025  decode.acc_seg: 90.8116
2023/05/20 13:08:15 - mmengine - INFO - per class results:
2023/05/20 13:08:15 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  89.0 | 92.68 |
|   person   | 93.56 | 97.57 |
+------------+-------+-------+
2023/05/20 13:08:15 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.7600  mIoU: 91.2800  mAcc: 95.1300  data_time: 0.0782  time: 0.0908
2023/05/20 13:08:48 - mmengine - INFO - Iter(train) [ 8600/12000]  lr: 7.1939e-04  eta: 0:09:37  time: 0.1583  data_time: 0.0075  memory: 1051  loss: 0.1730  decode.loss_ce: 0.1730  decode.acc_seg: 93.4451
2023/05/20 13:08:57 - mmengine - INFO - per class results:
2023/05/20 13:08:57 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 88.64 | 93.36 |
|   person   | 93.24 | 96.87 |
+------------+-------+-------+
2023/05/20 13:08:57 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.5800  mIoU: 90.9400  mAcc: 95.1200  data_time: 0.0583  time: 0.0807
2023/05/20 13:09:23 - mmengine - INFO - Iter(train) [ 8800/12000]  lr: 4.3192e-04  eta: 0:09:03  time: 0.1580  data_time: 0.0076  memory: 1051  loss: 0.2011  decode.loss_ce: 0.2011  decode.acc_seg: 90.4707
2023/05/20 13:09:39 - mmengine - INFO - per class results:
2023/05/20 13:09:39 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.15 | 92.91 |
|   person   | 93.64 | 97.53 |
+------------+-------+-------+
2023/05/20 13:09:39 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.8200  mIoU: 91.3900  mAcc: 95.2200  data_time: 0.0551  time: 0.0652
2023/05/20 13:09:39 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_8160.pth is removed
2023/05/20 13:09:39 - mmengine - INFO - The best checkpoint with 95.8200 aAcc at 8880 iter is saved to best_aAcc_iter_8880.pth.
2023/05/20 13:09:59 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_124313
2023/05/20 13:09:59 - mmengine - INFO - Iter(train) [ 9000/12000]  lr: 1.0000e-04  eta: 0:08:29  time: 0.1677  data_time: 0.0085  memory: 1051  loss: 0.2193  decode.loss_ce: 0.2193  decode.acc_seg: 94.8739
2023/05/20 13:10:21 - mmengine - INFO - per class results:
2023/05/20 13:10:21 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.14 | 92.92 |
|   person   | 93.63 | 97.52 |
+------------+-------+-------+
2023/05/20 13:10:21 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.8200  mIoU: 91.3900  mAcc: 95.2200  data_time: 0.0744  time: 0.0900
2023/05/20 13:10:35 - mmengine - INFO - Iter(train) [ 9200/12000]  lr: 9.4008e-05  eta: 0:07:55  time: 0.1687  data_time: 0.0064  memory: 1051  loss: 0.2175  decode.loss_ce: 0.2175  decode.acc_seg: 89.4756
2023/05/20 13:11:03 - mmengine - INFO - per class results:
2023/05/20 13:11:03 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  89.1 | 93.18 |
|   person   | 93.57 | 97.32 |
+------------+-------+-------+
2023/05/20 13:11:03 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.7900  mIoU: 91.3400  mAcc: 95.2500  data_time: 0.0653  time: 0.0770
2023/05/20 13:11:10 - mmengine - INFO - Iter(train) [ 9400/12000]  lr: 8.7942e-05  eta: 0:07:21  time: 0.1890  data_time: 0.0072  memory: 1051  loss: 0.1581  decode.loss_ce: 0.1581  decode.acc_seg: 93.2858
2023/05/20 13:11:43 - mmengine - INFO - Iter(train) [ 9600/12000]  lr: 8.1830e-05  eta: 0:06:47  time: 0.1764  data_time: 0.0076  memory: 1051  loss: 0.1669  decode.loss_ce: 0.1669  decode.acc_seg: 94.7846
2023/05/20 13:11:43 - mmengine - INFO - Saving checkpoint at 9600 iterations
2023/05/20 13:11:46 - mmengine - INFO - per class results:
2023/05/20 13:11:46 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.14 | 92.99 |
|   person   | 93.62 | 97.47 |
+------------+-------+-------+
2023/05/20 13:11:46 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.8100  mIoU: 91.3800  mAcc: 95.2300  data_time: 0.0685  time: 0.0844
2023/05/20 13:12:19 - mmengine - INFO - Iter(train) [ 9800/12000]  lr: 7.5666e-05  eta: 0:06:13  time: 0.1538  data_time: 0.0068  memory: 1051  loss: 0.1843  decode.loss_ce: 0.1843  decode.acc_seg: 90.7247
2023/05/20 13:12:28 - mmengine - INFO - per class results:
2023/05/20 13:12:28 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.13 |  93.2 |
|   person   | 93.59 | 97.32 |
+------------+-------+-------+
2023/05/20 13:12:28 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.8000  mIoU: 91.3600  mAcc: 95.2600  data_time: 0.0633  time: 0.0738
2023/05/20 13:12:54 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_124313
2023/05/20 13:12:54 - mmengine - INFO - Iter(train) [10000/12000]  lr: 6.9446e-05  eta: 0:05:39  time: 0.1697  data_time: 0.0069  memory: 1051  loss: 0.1930  decode.loss_ce: 0.1930  decode.acc_seg: 93.4024
2023/05/20 13:13:10 - mmengine - INFO - per class results:
2023/05/20 13:13:10 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.13 | 93.32 |
|   person   | 93.58 | 97.24 |
+------------+-------+-------+
2023/05/20 13:13:10 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.7900  mIoU: 91.3500  mAcc: 95.2800  data_time: 0.0401  time: 0.0634
2023/05/20 13:13:29 - mmengine - INFO - Iter(train) [10200/12000]  lr: 6.3164e-05  eta: 0:05:05  time: 0.1731  data_time: 0.0073  memory: 1051  loss: 0.2093  decode.loss_ce: 0.2093  decode.acc_seg: 95.4096
2023/05/20 13:13:51 - mmengine - INFO - per class results:
2023/05/20 13:13:51 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.31 | 93.37 |
|   person   | 93.69 | 97.33 |
+------------+-------+-------+
2023/05/20 13:13:51 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.8700  mIoU: 91.5000  mAcc: 95.3500  data_time: 0.0546  time: 0.0648
2023/05/20 13:13:51 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_8880.pth is removed
2023/05/20 13:13:52 - mmengine - INFO - The best checkpoint with 95.8700 aAcc at 10320 iter is saved to best_aAcc_iter_10320.pth.
2023/05/20 13:14:05 - mmengine - INFO - Iter(train) [10400/12000]  lr: 5.6811e-05  eta: 0:04:31  time: 0.1529  data_time: 0.0071  memory: 1051  loss: 0.1767  decode.loss_ce: 0.1767  decode.acc_seg: 92.6081
2023/05/20 13:14:35 - mmengine - INFO - per class results:
2023/05/20 13:14:35 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background |  89.3 |  93.5 |
|   person   | 93.67 | 97.24 |
+------------+-------+-------+
2023/05/20 13:14:35 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.8600  mIoU: 91.4900  mAcc: 95.3700  data_time: 0.0767  time: 0.0886
2023/05/20 13:14:41 - mmengine - INFO - Iter(train) [10600/12000]  lr: 5.0377e-05  eta: 0:03:57  time: 0.1739  data_time: 0.0071  memory: 1051  loss: 0.2044  decode.loss_ce: 0.2044  decode.acc_seg: 89.3675
2023/05/20 13:15:14 - mmengine - INFO - Iter(train) [10800/12000]  lr: 4.3851e-05  eta: 0:03:23  time: 0.1554  data_time: 0.0070  memory: 1051  loss: 0.1951  decode.loss_ce: 0.1951  decode.acc_seg: 91.6561
2023/05/20 13:15:16 - mmengine - INFO - per class results:
2023/05/20 13:15:16 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.19 | 93.43 |
|   person   | 93.61 | 97.22 |
+------------+-------+-------+
2023/05/20 13:15:16 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.8200  mIoU: 91.4000  mAcc: 95.3200  data_time: 0.0649  time: 0.0740
2023/05/20 13:15:50 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_124313
2023/05/20 13:15:50 - mmengine - INFO - Iter(train) [11000/12000]  lr: 3.7215e-05  eta: 0:02:49  time: 0.1850  data_time: 0.0069  memory: 1051  loss: 0.1696  decode.loss_ce: 0.1696  decode.acc_seg: 91.0869
2023/05/20 13:15:58 - mmengine - INFO - per class results:
2023/05/20 13:15:58 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.24 | 93.43 |
|   person   | 93.64 | 97.25 |
+------------+-------+-------+
2023/05/20 13:15:58 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.8400  mIoU: 91.4400  mAcc: 95.3400  data_time: 0.0770  time: 0.0889
2023/05/20 13:16:25 - mmengine - INFO - Iter(train) [11200/12000]  lr: 3.0444e-05  eta: 0:02:15  time: 0.1841  data_time: 0.0083  memory: 1051  loss: 0.1994  decode.loss_ce: 0.1994  decode.acc_seg: 93.5989
2023/05/20 13:16:40 - mmengine - INFO - per class results:
2023/05/20 13:16:40 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.31 | 93.09 |
|   person   | 93.72 | 97.52 |
+------------+-------+-------+
2023/05/20 13:16:40 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.8800  mIoU: 91.5200  mAcc: 95.3100  data_time: 0.0692  time: 0.0812
2023/05/20 13:16:40 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_10320.pth is removed
2023/05/20 13:16:41 - mmengine - INFO - The best checkpoint with 95.8800 aAcc at 11280 iter is saved to best_aAcc_iter_11280.pth.
2023/05/20 13:17:01 - mmengine - INFO - Iter(train) [11400/12000]  lr: 2.3499e-05  eta: 0:01:41  time: 0.1633  data_time: 0.0077  memory: 1051  loss: 0.2227  decode.loss_ce: 0.2227  decode.acc_seg: 88.1587
2023/05/20 13:17:23 - mmengine - INFO - per class results:
2023/05/20 13:17:23 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.19 | 92.89 |
|   person   | 93.67 | 97.57 |
+------------+-------+-------+
2023/05/20 13:17:23 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.8400  mIoU: 91.4300  mAcc: 95.2300  data_time: 0.0698  time: 0.0795
2023/05/20 13:17:37 - mmengine - INFO - Iter(train) [11600/12000]  lr: 1.6315e-05  eta: 0:01:07  time: 0.1527  data_time: 0.0069  memory: 1051  loss: 0.1861  decode.loss_ce: 0.1861  decode.acc_seg: 88.9158
2023/05/20 13:18:05 - mmengine - INFO - per class results:
2023/05/20 13:18:05 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.17 | 93.38 |
|   person   |  93.6 | 97.23 |
+------------+-------+-------+
2023/05/20 13:18:05 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.8100  mIoU: 91.3800  mAcc: 95.3100  data_time: 0.0775  time: 0.0894
2023/05/20 13:18:12 - mmengine - INFO - Iter(train) [11800/12000]  lr: 8.7428e-06  eta: 0:00:33  time: 0.1552  data_time: 0.0081  memory: 1051  loss: 0.1823  decode.loss_ce: 0.1823  decode.acc_seg: 91.9321
2023/05/20 13:18:45 - mmengine - INFO - Exp name: mv3+pappm+cus_20230520_124313
2023/05/20 13:18:45 - mmengine - INFO - Iter(train) [12000/12000]  lr: 0.0000e+00  eta: 0:00:00  time: 0.1725  data_time: 0.0074  memory: 1051  loss: 0.2003  decode.loss_ce: 0.2003  decode.acc_seg: 96.4212
2023/05/20 13:18:45 - mmengine - INFO - Saving checkpoint at 12000 iterations
2023/05/20 13:18:47 - mmengine - INFO - per class results:
2023/05/20 13:18:47 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 89.36 | 93.48 |
|   person   | 93.72 |  97.3 |
+------------+-------+-------+
2023/05/20 13:18:47 - mmengine - INFO - Iter(val) [60/60]    aAcc: 95.8900  mIoU: 91.5400  mAcc: 95.3900  data_time: 0.0689  time: 0.0789
2023/05/20 13:18:47 - mmengine - INFO - The previous best checkpoint /home/wenbo_chen/computer_vision/mmsegmentation/workdirs/ppm/best_aAcc_iter_11280.pth is removed
2023/05/20 13:18:48 - mmengine - INFO - The best checkpoint with 95.8900 aAcc at 12000 iter is saved to best_aAcc_iter_12000.pth.
